<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PDFClown</name>
    </assembly>
    <members>
        <member name="T:org.pdfclown.bytes.filters.ASCII85Filter">
                <summary>ASCII base-85 filter [PDF:1.6:3.3.2].</summary>
        </member>
        <member name="T:org.pdfclown.bytes.filters.Filter">
                <summary>Abstract filter [PDF:1.6:3.3].</summary>
        </member>
        <member name="M:org.pdfclown.bytes.filters.Filter.Get(org.pdfclown.objects.PdfName)">
                  <summary>Gets a specific filter object.</summary>
                  <param name="name">Name of the requested filter.</param>
                  <returns>Filter object associated to the name.</returns>
        </member>
        <member name="F:org.pdfclown.bytes.filters.ASCII85Filter.PrefixMark">
                  Prefix mark that identifies an encoded ASCII85 string.
        </member>
        <member name="F:org.pdfclown.bytes.filters.ASCII85Filter.SuffixMark">
                  Suffix mark that identifies an encoded ASCII85 string.
        </member>
        <member name="F:org.pdfclown.bytes.filters.ASCII85Filter.EnforceMarks">
                  Add the Prefix and Suffix marks when encoding, and enforce their presence for decoding.
        </member>
        <member name="F:org.pdfclown.bytes.filters.ASCII85Filter.LineLength">
                  Maximum line length for encoded ASCII85 string; set to zero for one unbroken line.
        </member>
        <member name="T:org.pdfclown.bytes.filters.FlateFilter">
                <summary>zlib/deflate [RFC:1950,1951] filter [PDF:1.6:3.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.bytes.Buffer">
                <summary>Byte buffer.</summary>
        </member>
        <member name="T:org.pdfclown.bytes.IBuffer">
                <summary>
                  <para>Buffer.</para>
                  <para>Its pivotal concept is the array index.</para>
                </summary>
                <returns>This buffer.</returns>
        </member>
        <member name="T:org.pdfclown.bytes.IInputStream">
                <summary>
                  <para>Input stream.</para>
                  <para>Its pivotal concept is the access pointer.</para>
                </summary>
        </member>
        <member name="T:org.pdfclown.bytes.IStream">
                <summary>Base stream interface.</summary>
        </member>
        <member name="P:org.pdfclown.bytes.IStream.Length">
                  <summary>Gets the length of the stream.</summary>
        </member>
        <member name="T:org.pdfclown.util.IDataWrapper">
                <summary>Generic data buffer.</summary>
        </member>
        <member name="M:org.pdfclown.util.IDataWrapper.ToByteArray">
                  <summary>Gets the buffer data copied to a newly-allocated byte array.</summary>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.GetHashCode">
                  <summary>Gets the hash representation of the sequence.</summary>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.Read(System.Byte[])">
                  <summary>Reads a sequence of bytes.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
                  <param name="data">Target byte array.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.Read(System.Byte[],System.Int32,System.Int32)">
                  <summary>Reads a sequence of bytes.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
                  <param name="data">Target byte array.</param>
                  <param name="offset">Location in the byte array at which storing begins.</param>
                  <param name="length">Number of bytes to read.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadByte">
                  <summary>Reads a byte.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadInt">
                  <summary>Reads an integer.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadInt(System.Int32)">
                  <summary>Reads a variable-length integer.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
                  <param name="length">Number of bytes to read.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadLine">
                  <summary>Reads the next line of text.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadShort">
                  <summary>Reads a short integer.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadSignedByte">
                  <summary>Reads a signed byte integer.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadString(System.Int32)">
                  <summary>Reads a string.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
                  <param name="length">Number of bytes to read.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.ReadUnsignedShort">
                  <summary>Reads an unsigned short integer.</summary>
                  <remarks>This operation causes the stream pointer to advance after the read data.</remarks>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.Seek(System.Int64)">
                  <summary>Sets the pointer absolute position.</summary>
        </member>
        <member name="M:org.pdfclown.bytes.IInputStream.Skip(System.Int64)">
                  <summary>Sets the pointer relative position.</summary>
        </member>
        <member name="P:org.pdfclown.bytes.IInputStream.ByteOrder">
                  <summary>Gets/Sets the byte order.</summary>
        </member>
        <member name="P:org.pdfclown.bytes.IInputStream.Position">
                  <summary>Gets/Sets the pointer position.</summary>
        </member>
        <member name="T:org.pdfclown.bytes.IOutputStream">
                <summary>Output stream interface.</summary>
        </member>
        <member name="M:org.pdfclown.bytes.IOutputStream.Write(System.Byte[])">
                  <summary>Writes a byte array into the stream.</summary>
                  <param name="data">Byte array to write into the stream.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
                  <summary>Writes a byte range into the stream.</summary>
                  <param name="data">Byte array to write into the stream.</param>
                  <param name="offset">Location in the byte array at which writing begins.</param>
                  <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IOutputStream.Write(System.String)">
                  <summary>Writes a string into the stream.</summary>
                  <param name="data">String to write into the stream.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IOutputStream.Write(org.pdfclown.bytes.IInputStream)">
                  <summary>Writes an <see cref="T:org.pdfclown.bytes.IInputStream"/> into the stream.</summary>
                  <param name="data">IInputStream to write into the stream.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(System.Byte)">
                  <summary>Appends a byte to the buffer.</summary>
                  <param name="data">Byte to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(System.Byte[])">
                  <summary>Appends a byte array to the buffer.</summary>
                  <param name="data">Byte array to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(System.Byte[],System.Int32,System.Int32)">
                  <summary>Appends a byte range to the buffer.</summary>
                  <param name="data">Byte array from which the byte range has to be copied.</param>
                  <param name="offset">Location in the byte array at which copying begins.</param>
                  <param name="length">Number of bytes to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(System.String)">
                  <summary>Appends a string to the buffer.</summary>
                  <param name="data">String to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(org.pdfclown.bytes.IInputStream)">
                  <summary>Appends an IInputStream to the buffer.</summary>
                  <param name="data">Source data to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Append(System.IO.Stream)">
                  <summary>Appends a stream to the buffer.</summary>
                  <param name="data">Source data to copy.</param>
                  <returns>This buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Clone">
                  <summary>Gets a clone of the buffer.</summary>
                  <returns>Deep copy of the buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Decode(org.pdfclown.bytes.filters.Filter,org.pdfclown.objects.PdfDictionary)">
                  <summary>Applies the specified filter to decode the buffer.</summary>
                  <param name="filter">Filter to use for decoding the buffer.</param>
                  <param name="parameters">Decoding parameters.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Delete(System.Int32,System.Int32)">
                  <summary>Deletes a byte chunk from the buffer.</summary>
                  <param name="index">Location at which deletion has to begin.</param>
                  <param name="length">Number of bytes to delete.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Encode(org.pdfclown.bytes.filters.Filter,org.pdfclown.objects.PdfDictionary)">
                  <summary>Applies the specified filter to encode the buffer.</summary>
                  <param name="filter">Filter to use for encoding the buffer.</param>
                  <param name="parameters">Encoding parameters.</param>
                  <returns>Encoded buffer.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.GetByte(System.Int32)">
                  <summary>Gets the byte at a specified location.</summary>
                  <param name="index">A location in the buffer.</param>
                  <returns>Byte at the specified location.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.GetByteArray(System.Int32,System.Int32)">
                  <summary>Gets the byte range beginning at a specified location.</summary>
                  <param name="index">Location at which the byte range has to begin.</param>
                  <param name="length">Number of bytes to copy.</param>
                  <returns>Byte range beginning at the specified location.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.GetString(System.Int32,System.Int32)">
                  <summary>Gets the string beginning at a specified location.</summary>
                  <param name="index">Location at which the string has to begin.</param>
                  <param name="length">Number of bytes to convert.</param>
                  <returns>String beginning at the specified location.</returns>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Insert(System.Int32,System.Byte[])">
                  <summary>Inserts a byte array into the buffer.</summary>
                  <param name="index">Location at which the byte array has to be inserted.</param>
                  <param name="data">Byte array to insert.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Insert(System.Int32,System.Byte[],System.Int32,System.Int32)">
                  <summary>Inserts a byte range into the buffer.</summary>
                  <param name="index">Location at which the byte range has to be inserted.</param>
                  <param name="data">Byte array from which the byte range has to be copied.</param>
                  <param name="offset">Location in the byte array at which copying begins.</param>
                  <param name="length">Number of bytes to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Insert(System.Int32,System.String)">
                  <summary>Inserts a string into the buffer.</summary>
                  <param name="index">Location at which the string has to be inserted.</param>
                  <param name="data">String to insert.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Insert(System.Int32,org.pdfclown.bytes.IInputStream)">
                  <summary>Inserts an IInputStream into the buffer.</summary>
                  <param name="index">Location at which the IInputStream has to be inserted.</param>
                  <param name="data">Source data to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Replace(System.Int32,System.Byte[])">
                  <summary>Replaces the buffer contents with a byte array.</summary>
                  <param name="index">Location at which the byte array has to be copied.</param>
                  <param name="data">Byte array to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Replace(System.Int32,System.Byte[],System.Int32,System.Int32)">
                  <summary>Replaces the buffer contents with a byte range.</summary>
                  <param name="index">Location at which the byte range has to be copied.</param>
                  <param name="data">Byte array from which the byte range has to be copied.</param>
                  <param name="offset">Location in the byte array at which copying begins.</param>
                  <param name="length">Number of bytes to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Replace(System.Int32,System.String)">
                  <summary>Replaces the buffer contents with a string.</summary>
                  <param name="index">Location at which the string has to be copied.</param>
                  <param name="data">String to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.Replace(System.Int32,org.pdfclown.bytes.IInputStream)">
                  <summary>Replaces the buffer contents with an IInputStream.</summary>
                  <param name="index">Location at which the IInputStream has to be copied.</param>
                  <param name="data">Source data to copy.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.SetLength(System.Int32)">
                  <summary>Sets the used buffer size.</summary>
                  <param name="value">New length.</param>
        </member>
        <member name="M:org.pdfclown.bytes.IBuffer.WriteTo(org.pdfclown.bytes.IOutputStream)">
                  <summary>Writes the buffer data to a stream.</summary>
                  <param name="stream">Target stream.</param>
        </member>
        <member name="P:org.pdfclown.bytes.IBuffer.Capacity">
                  <summary>Gets the allocated buffer size.</summary>
                  <returns>Allocated buffer size.</returns>
        </member>
        <member name="P:org.pdfclown.bytes.IBuffer.Dirty">
                  <summary>Gets/Sets whether this buffer has changed.</summary>
        </member>
        <member name="E:org.pdfclown.bytes.IBuffer.OnChange">
                  <summary>Notifies the dirtiness of the observed buffer.</summary>
        </member>
        <member name="F:org.pdfclown.bytes.Buffer.DefaultCapacity">
                  <summary>Default buffer capacity.</summary>
        </member>
        <member name="F:org.pdfclown.bytes.Buffer.data">
                  <summary>Inner buffer where data are stored.</summary>
        </member>
        <member name="F:org.pdfclown.bytes.Buffer.length">
                  <summary>Number of bytes actually used in the buffer.</summary>
        </member>
        <member name="F:org.pdfclown.bytes.Buffer.position">
                  <summary>Pointer position within the buffer.</summary>
        </member>
        <member name="M:org.pdfclown.bytes.Buffer.EnsureCapacity(System.Int32)">
                  <summary>Check whether the buffer has sufficient room for
                  adding data.</summary>
        </member>
        <member name="T:org.pdfclown.bytes.Stream">
                <summary>Generic stream.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CalGrayColorSpace">
                <summary>CIE-based A single-transformation-stage color space, where A represents a calibrated
                achromatic single-component color value [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CalColorSpace">
                <summary>CIE-based calibrated color value [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CIEBasedColorSpace">
                <summary>Abstract CIE-based color space [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.ColorSpace">
                <summary>Color space [PDF:1.6:4.5].</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfObjectWrapper`1">
                <summary>High-level representation of a strongly-typed PDF object.</summary>
                <remarks>
                  <para>Specialized objects don't inherit directly from their low-level counterparts (e.g.
                    <see cref="T:org.pdfclown.documents.contents.Contents">Contents</see> extends <see cref="T:org.pdfclown.objects.PdfStream">PdfStream</see>, <see cref="T:org.pdfclown.documents.Pages">Pages</see> extends <see cref="T:org.pdfclown.objects.PdfArray">PdfArray</see> and so on) because there's no plain
                    one-to-one mapping between primitive PDF types and specialized instances: the
                    <code>Content</code> entry of <code>Page</code> dictionaries may be a simple reference to a
                    <code>PdfStream</code> or a <code>PdfArray</code> of references to <code>PdfStream</code>s,
                    <code>Pages</code> collections may be spread across a B-tree instead of a flat
                    <code>PdfArray</code> and so on.
                  </para>
                  <para>So, in order to hide all these annoying inner workings, I chose to adopt a composition
                    pattern instead of the apparently-reasonable (but actually awkward!) inheritance pattern.
                    Nonetheless, users can navigate through the low-level structure getting the <see cref="P:org.pdfclown.objects.PdfObjectWrapper`1.BaseDataObject">BaseDataObject</see> backing this object.
                  </para>
                </remarks>
        </member>
        <member name="T:org.pdfclown.objects.PdfObjectWrapper">
                <summary>Base high-level representation of a weakly-typed PDF object.</summary>
        </member>
        <member name="T:org.pdfclown.objects.IPdfObjectWrapper">
                <summary>PDF object wrapper interface.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfObjectWrapper.BaseObject">
                  <summary>Gets the underlying reference object, if available; otherwise, gets the underlying 
                  data object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.GetBaseObject(org.pdfclown.objects.PdfObjectWrapper)">
                  <summary>Gets the PDF object backing the specified wrapper.</summary>
                  <param name="wrapper">Object to extract the base from.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.#ctor">
                  <summary>Instantiates an empty wrapper.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates a wrapper from the specified base object.</summary>
                  <param name="baseObject">PDF object backing this wrapper. MUST be a <see cref="T:org.pdfclown.objects.PdfReference"/>
                  every time available.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.Clone(org.pdfclown.documents.Document)">
                  <summary>Gets a clone of the object, registered inside the given document context.</summary>
                  <param name="context">Which document the clone has to be registered in.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.Delete">
                  <summary>Removes the object from its document context.</summary>
                  <remarks>The object is no more usable after this method returns.</remarks>
                  <returns>Whether the object was actually decontextualized (only indirect objects can be
                  decontextualize).</returns>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.CheckCompatibility(System.Object)">
                  <summary>Checks whether the specified feature is compatible with the
                    <see cref="!:Document.Version">document's conformance version</see>.</summary>
                  <param name="feature">Entity whose compatibility has to be checked. Supported types:
                    <list type="bullet">
                      <item><see cref="T:org.pdfclown.VersionEnum"/></item>
                      <item><see cref="T:System.String">Property name</see> resolvable to an <see cref="T:System.Reflection.MemberInfo">annotated getter method</see></item>
                      <item><see cref="T:System.Reflection.MemberInfo"/></item>
                    </list>
                  </param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.RetrieveName">
                  <summary>Retrieves the name possibly associated to this object, walking through the document's
                  name dictionary.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper.RetrieveNamedBaseObject">
                  <summary>Retrieves the object name, if available; otherwise, behaves like
                  <see cref="P:org.pdfclown.objects.PdfObjectWrapper.BaseObject"/>.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper.Container">
                  <summary>Gets the indirect object containing the base object.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper.DataContainer">
                  <summary>Gets the indirect object containing the base data object.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper.Document">
                  <summary>Gets the document context.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper.File">
                  <summary>Gets the file context.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper`1.#ctor">
                  <summary>Instantiates an empty wrapper.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper`1.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates a wrapper from the specified base object.</summary>
                  <param name="baseObject">PDF object backing this wrapper. MUST be a <see cref="T:org.pdfclown.objects.PdfReference"/>
                  every time available.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper`1.#ctor(org.pdfclown.documents.Document,`0)">
                  <summary>Instantiates a wrapper registering the specified base data object into the specified
                  document context.</summary>
                  <param name="context">Document context into which the specified data object has to be
                  registered.</param>
                  <param name="baseDataObject">PDF data object backing this wrapper.</param>
                  <seealso cref="!:PdfObjectWrapper(File, PdfDataObject)"/>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper`1.#ctor(org.pdfclown.files.File,`0)">
                  <summary>Instantiates a wrapper registering the specified base data object into the specified
                  file context.</summary>
                  <param name="context">File context into which the specified data object has to be registered.
                  </param>
                  <param name="baseDataObject">PDF data object backing this wrapper.</param>
                  <seealso cref="!:PdfObjectWrapper(Document, PdfDataObject)"/>
        </member>
        <member name="M:org.pdfclown.objects.PdfObjectWrapper`1.Exists">
                  <summary>Gets whether the underlying data object is concrete.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper`1.BaseDataObject">
                  <summary>Gets the underlying data object.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObjectWrapper`1.Metadata">
                  <summary>Gets/Sets the metadata associated to this object.</summary>
                  <returns><code>null</code>, if base data object's type isn't suitable (only
                  <see cref="T:org.pdfclown.objects.PdfDictionary"/> and <see cref="T:org.pdfclown.objects.PdfStream"/> objects are allowed).</returns>
                  <throws>NotSupportedException If base data object's type isn't suitable (only
                  <see cref="T:org.pdfclown.objects.PdfDictionary"/> and <see cref="T:org.pdfclown.objects.PdfStream"/> objects are allowed).</throws>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.ColorSpace.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps the specified color space base object into a color space object.</summary>
                  <param name="baseObject">Base object of a color space object.</param>
                  <returns>Color space object corresponding to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.ColorSpace.GetPaint(org.pdfclown.documents.contents.colorSpaces.Color)">
                  <summary>Gets the rendering representation of the specified color value.</summary>
                  <param name="color">Color value to convert into an equivalent rendering representation.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.ColorSpace.GetColor(System.Collections.Generic.IList{org.pdfclown.objects.PdfDirectObject},org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the color value corresponding to the specified components
                  interpreted according to this color space [PDF:1.6:4.5.1].</summary>
                  <param name="components">Color components.</param>
                  <param name="context">Content context.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.ColorSpace.ComponentCount">
                  <summary>Gets the number of components used to represent a color value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.ColorSpace.DefaultColor">
                  <summary>Gets the initial color value within this color space.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CIEBasedColorSpace.BlackPoint">
                  <summary>Gets the tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CIEBasedColorSpace.WhitePoint">
                  <summary>Gets the tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CIEBasedColorSpace.Dictionary">
                  <summary>Gets this color space's dictionary.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CalColorSpace.Gamma">
                  <summary>Gets the gamma of this color space.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CalRGBColorSpace">
                <summary>CIE-based ABC single-transformation-stage color space, where A, B, and C represent
                calibrated red, green and blue color values [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.Color">
                <summary>Color value [PDF:1.6:4.5.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.Color.NormalizeComponent(System.Double)">
                  <summary>Gets the normalized value of a color component [PDF:1.6:4.5.1].</summary>
                  <param name="value">Color component value to normalize.</param>
                  <returns>Normalized color component value.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.Color.Components">
                  <summary>Gets the components defining this color value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor">
                <summary>Device Cyan-Magenta-Yellow-Key color value [PDF:1.6:4.5.3].</summary>
                <remarks>The 'Key' component is renamed 'Black' to avoid semantic
                ambiguities.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceColor">
                <summary>Device color value [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.LeveledColor">
                <summary>Color value defined by numeric-level components.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.LeveledColor.GetComponentValue(System.Int32)">
                  <summary>Gets the specified color component.</summary>
                  <param name="index">Component index.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor.C">
                  <summary>Gets/Sets the cyan component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor.K">
                  <summary>Gets/Sets the black (key) component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor.M">
                  <summary>Gets/Sets the magenta component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColor.Y">
                  <summary>Gets/Sets the yellow component.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceCMYKColorSpace">
                <summary>Device Cyan-Magenta-Yellow-Key color space [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceColorSpace">
                <summary>Device color space [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceGrayColor">
                <summary>Device Gray color value [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceGrayColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceGrayColor.G">
                  <summary>Gets/Sets the gray component.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceGrayColorSpace">
                <summary>Device Gray color space [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor">
                <summary>Device Red-Green-Blue color value [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor.Get(System.Nullable{System.Drawing.Color})">
                  <summary>Gets the color corresponding to the specified system color.</summary>
                  <param name="color">System color to convert.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor.B">
                  <summary>Gets/Sets the blue component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor.G">
                  <summary>Gets/Sets the green component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColor.R">
                  <summary>Gets/Sets the red component.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceRGBColorSpace">
                <summary>Device Red-Green-Blue color space [PDF:1.6:4.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.ICCBasedColorSpace">
                <summary>ICC-based color space [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.LabColorSpace">
                <summary>CIE-based ABC double-transformation-stage color space, where A, B and C represent the
                L*, a* and b* components of a CIE 1976 L*a*b* space [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.LabColorSpace.Ranges">
                  <summary>Gets the (inclusive) ranges of the color components.</summary>
                  <remarks>Component values falling outside the specified range are adjusted
                  to the nearest valid value.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.Length">
                <summary>Distance measure.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.Length.GetValue(System.Double)">
                  <summary>Gets the resolved distance value.</summary>
                  <remarks>This method ensures that relative distance values are transformed according
                  to the specified base value.</remarks>
                  <param name="baseValue">Value used to resolve relative values.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.Length.UnitMode">
                  <summary>Gets/Sets the measurement mode applied to the distance value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.Length.Value">
                  <summary>Gets/Sets the distance value.</summary>
                  <remarks>According to the applied unit mode, this value can be
                  either an absolute measure or a ratio to be resolved through a base value.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.Length.UnitModeEnum">
                  <summary>Measurement mode.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.Length.UnitModeEnum.Absolute">
                    <summary>Values are expressed as absolute measures.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.Length.UnitModeEnum.Relative">
                    <summary>Values are expressed as ratios relative to a specified base value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.TextFitter">
                <summary>Text fitter.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.TextFitter.Fit(System.Boolean)">
                  <summary>Fits the text inside the specified width.</summary>
                  <param name="unspacedFitting">Whether fitting of unspaced text is allowed.</param>
                  <returns>Whether the operation was successful.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.TextFitter.Fit(System.Int32,System.Double,System.Boolean)">
                  <summary>Fits the text inside the specified width.</summary>
                  <param name="index">Beginning index, inclusive.</param>
                  <param name="width">Available width.</param>
                  <param name="unspacedFitting">Whether fitting of unspaced text is allowed.</param>
                  <returns>Whether the operation was successful.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.BeginIndex">
                  <summary>Gets the begin index of the fitted text inside the available text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.EndIndex">
                  <summary>Gets the end index of the fitted text inside the available text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.FittedText">
                  <summary>Gets the fitted text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.FittedWidth">
                  <summary>Gets the fitted text's width.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.Font">
                  <summary>Gets the font used to fit the text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.FontSize">
                  <summary>Gets the size of the font used to fit the text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.Hyphenation">
                  <summary>Gets whether the hyphenation algorithm has to be applied.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.HyphenationCharacter">
                  <summary>Gets/Sets the character shown at the end of the line before a hyphenation break.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.Text">
                  <summary>Gets the available text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.TextFitter.Width">
                  <summary>Gets the available width.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.entities.Barcode">
                <summary>Abstract <a href="http://en.wikipedia.org/wiki/Barcode">barcode</a> object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.entities.Entity">
                <summary>Abstract specialized graphic object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.IContentEntity">
                <summary>
                  <para>Generic content entity.</para>
                  <para>It provides common ways to convert any content into content stream objects.</para>
                </summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.IContentEntity.ToInlineObject(org.pdfclown.documents.contents.composition.PrimitiveComposer)">
                  <summary>Converts this entity to its equivalent inline (dependent) object representation
                  [PDF:1.6:4.8.6].</summary>
                  <remarks>
                    <para>This method creates and shows an inline object within the target content context,
                    returning it.</para>
                    <para>Due to its direct-content nature (opposite to the indirect-content nature of
                    external objects), the resulting object should be shown only one time in order not to
                    wastefully duplicate its data.</para>
                  </remarks>
                  <param name="composer">Target content composer.</param>
                  <returns>The inline object representing the entity.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.IContentEntity.ToXObject(org.pdfclown.documents.Document)">
                  <summary>Converts this entity to its equivalent external (independent) object representation
                  [PDF:1.6:4.7].</summary>
                  <remarks>
                    <para>This method creates an external object within the target document, returning it.
                    To show it in a content context (eg: a page), then it must be applied in an appropriate manner
                    (see PrimitiveComposer object).</para>
                  </remarks>
                  <param name="context">Target document.</param>
                  <returns>The external object representing the entity.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.Barcode.Code">
                  <summary>Gets the code to represent.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.entities.EAN13Barcode">
                <see href="http://en.wikipedia.org/wiki/EAN13">EAN-13 Bar Code</see> object [GS1:7.1:5.1.1.3.1].
            
                <para>The EAN-13 Bar Code Symbol shall be made up as follows, reading from left to right:</para>
                <list type="number">
                  <item>A left Quiet Zone</item>
                  <item>A normal Guard Bar Pattern (Left Guard)</item>
                  <item>Six symbol characters from number sets A and B (Left Half)</item>
                  <item>A center Guard Bar Pattern (Center Guard)</item>
                  <item>Six symbol characters from number set C (Right Half)</item>
                  <item>A normal Guard Bar Pattern (Right Guard)</item>
                  <item>A right Quiet Zone</item>
                </list>
                <para>The rightmost symbol character shall encode the Check Digit.</para>
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.DigitElementWidths">
                  Symbol Character Encodation (Number Set A, odd parity) [GS1:7.1:5.1.1.2.1].
                  NOTE: Number Set B uses the same patterns (though at inverted parity, i.e. even),
                  whilst Number Set C (even parity) mirrors Number Set B.
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.ElementCount">
            Bar elements count. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.DigitHeight">
            Digit box height. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.DigitWidth">
            Digit box width. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.BarHeight">
            Bar full height. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.DigitGlyphWidth">
            Digit glyph width. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.DigitGlyphXs">
            Digit glyph horizontal positions. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.GuardBarIndexes">
            Guard bar index positions. 
        </member>
        <member name="F:org.pdfclown.documents.contents.entities.EAN13Barcode.LeftHalfNumberSets">
                  Left Half of an EAN-13 Bar Code Symbol.
                  Since the EAN-13 Bar Code Symbol comprises only 12 symbol characters
                  but encodes 13 digits of data (including the Check Digit),
                  the value of the additional digit (leading digit, implicitly encoded),
                  which is the character in the leftmost position in the data string,
                  shall be encoded by the variable parity mix of number sets A and B
                  for the six symbol characters in the left half of the symbol.
        </member>
        <member name="M:org.pdfclown.documents.contents.entities.EAN13Barcode.GetElementWidths">
                  <summary>Gets the code elements widths.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.EAN13Barcode.Size">
                  Gets the barcode's graphical size.
        </member>
        <member name="T:org.pdfclown.documents.contents.entities.Image">
                <summary>Abstract image object [PDF:1.6:4.8].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.Image.BitsPerComponent">
                  <summary>Gets/Sets the number of bits per color component
                  [PDF:1.6:4.8.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.Image.Height">
                  <summary>Gets/Sets the height of the image in samples [PDF:1.6:4.8.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.Image.Width">
                  <summary>Gets/Sets the width of the image in samples [PDF:1.6:4.8.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.entities.Image.Stream">
                  <summary>Gets the underlying stream.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.entities.JpegImage">
                <summary>JPEG image object [ISO 10918-1;JFIF:1.02].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.AfmParser">
                <summary>AFM file format parser [AFM:4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.AfmParser.LoadFontHeader">
                  <summary>Loads the font header [AFM:4.1:3,4,4.1,4.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.AfmParser.LoadCharMetrics">
                  <summary>Loads individual character metrics [AFM:4.1:3,4,4.4,8].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.AfmParser.LoadKerningData">
                  <summary>Loads kerning data [AFM:4.1:3,4,4.5,9].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.AfmParser.FontMetrics">
                  <summary>Font header (Global font information).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CMap">
                <summary>Character map [PDF:1.6:5.6.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMap.Get(org.pdfclown.bytes.IInputStream)">
                  <summary>Gets the character map extracted from the given data.</summary>
                  <param name="stream">Character map data.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMap.Get(org.pdfclown.objects.PdfDataObject)">
                  <summary>Gets the character map extracted from the given encoding object.</summary>
                  <param name="encodingObject">Encoding object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMap.Get(org.pdfclown.objects.PdfStream)">
                  <summary>Gets the character map extracted from the given data.</summary>
                  <param name="stream">Character map data.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMap.Get(org.pdfclown.objects.PdfName)">
                  <summary>Gets the character map corresponding to the given name.</summary>
                  <param name="name">Predefined character map name.</param>
                  <returns>null, in case no name matching occurs.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMap.Get(System.String)">
                  <summary>Gets the character map corresponding to the given name.</summary>
                  <param name="name">Predefined character map name.</param>
                  <returns>null, in case no name matching occurs.</returns>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CMapParser">
                <summary>CMap parser [PDF:1.6:5.6.4;CMAP].</summary>
        </member>
        <member name="T:org.pdfclown.util.parsers.PostScriptParser">
                <summary>PostScript (non-procedural subset) parser [PS].</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.IsDelimiter(System.Int32)">
                  <summary>Evaluate whether a character is a delimiter.</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.IsEOL(System.Int32)">
                  <summary>Evaluate whether a character is an EOL marker.</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.IsWhitespace(System.Int32)">
                  <summary>Evaluate whether a character is a white-space.</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.GetToken(System.Int32)">
                  <summary>Gets a token after moving to the given offset.</summary>
                  <param name="offset">Number of tokens to skip before reaching the intended one.</param>
                  <seealso cref="P:org.pdfclown.util.parsers.PostScriptParser.Token"/>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.MoveNext(System.Int32)">
                  <summary>Moves the pointer to the next token.</summary>
                  <param name="offset">Number of tokens to skip before reaching the intended one.</param>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.MoveNext">
                  <summary>Moves the pointer to the next token.</summary>
                  <remarks>To properly parse the current token, the pointer MUST be just before its starting
                  (leading whitespaces are ignored). When this method terminates, the pointer IS
                  at the last byte of the current token.</remarks>
                  <returns>Whether a new token was found.</returns>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.Seek(System.Int64)">
                  <summary>Moves the pointer to the given absolute byte position.</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.Skip(System.Int64)">
                  <summary>Moves the pointer to the given relative byte position.</summary>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.SkipEOL">
                  <summary>Moves the pointer before the next non-EOL character after the current position.</summary>
                  <returns>Whether the stream can be further read.</returns>
        </member>
        <member name="M:org.pdfclown.util.parsers.PostScriptParser.SkipWhitespace">
                  <summary>Moves the pointer before the next non-whitespace character after the current position.</summary>
                  <returns>Whether the stream can be further read.</returns>
        </member>
        <member name="P:org.pdfclown.util.parsers.PostScriptParser.Token">
                  <summary>Gets the currently-parsed token.</summary>
        </member>
        <member name="P:org.pdfclown.util.parsers.PostScriptParser.TokenType">
                  <summary>Gets the currently-parsed token type.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMapParser.Parse">
                  <summary>Parses the character-code-to-unicode mapping [PDF:1.6:5.9.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMapParser.ParseInputCode">
                  <summary>Converts the current token into its input code value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CMapParser.ParseUnicode">
                  <summary>Converts the current token into its Unicode value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CompositeFont">
                <summary>Composite font, also called Type 0 font [PDF:1.6:5.6].</summary>
                <remarks>Do not confuse it with <see cref="T:org.pdfclown.documents.contents.fonts.Type0Font">Type 0 CIDFont</see>: the latter is
                a composite font descendant describing glyphs based on Adobe Type 1 font format.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Font">
                <summary>Abstract font [PDF:1.6:5.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Get(org.pdfclown.documents.Document,System.String)">
                  <summary>Creates the representation of a font.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Get(org.pdfclown.documents.Document,org.pdfclown.bytes.IInputStream)">
                  <summary>Creates the representation of a font.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetScalingFactor(System.Double)">
                  <summary>Gets the scaling factor to be applied to unscaled metrics to get actual
                  measures.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a font reference into a font object.</summary>
                  <param name="baseObject">Font base object.</param>
                  <returns>Font object associated to the reference.</returns>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.codes">
                  <summary>Unicodes by character code.</summary>
                  <remarks>
                    <para>When this map is populated, <code>symbolic</code> variable shall accordingly be set.</para>
                  </remarks>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.defaultGlyphWidth">
                  <summary>Default glyph width.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.glyphIndexes">
                  <summary>Glyph indexes by unicode.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.glyphKernings">
                  <summary>Glyph kernings by (left-right) glyph index pairs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.glyphWidths">
                  <summary>Glyph widths by glyph index.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.symbolic">
                  <summary>Whether the font encoding is custom (that is non-Unicode).</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.usedCodes">
                  <summary>Used unicodes.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.charCodeMaxLength">
                  <summary>Maximum character code byte size.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new font structure within the given document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Loads an existing font structure.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Decode(System.Byte[])">
                  <summary>Gets the text from the given internal representation.</summary>
                  <param name="code">Internal representation to decode.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Encode(System.String)">
                  <summary>Gets the internal representation of the given text.</summary>
                  <param name="text">Text to encode.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetAscent(System.Double)">
                  <summary>Gets the vertical offset from the baseline to the ascender line (ascent),
                  scaled to the given font size. The value is a positive number.</summary>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetDescent(System.Double)">
                  <summary>Gets the vertical offset from the baseline to the descender line (descent),
                  scaled to the given font size. The value is a negative number.</summary>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetHeight(System.Char)">
                  <summary>Gets the unscaled height of the given character.</summary>
                  <param name="textChar">Character whose height has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetHeight(System.Char,System.Double)">
                  <summary>Gets the height of the given character, scaled to the given font size.</summary>
                  <param name="textChar">Character whose height has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetHeight(System.String)">
                  <summary>Gets the unscaled height of the given text.</summary>
                  <param name="text">Text whose height has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetHeight(System.String,System.Double)">
                  <summary>Gets the height of the given text, scaled to the given font size.</summary>
                  <param name="text">Text whose height has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetKernedWidth(System.String,System.Double)">
                  <summary>Gets the width (kerning inclusive) of the given text, scaled to the given font size.</summary>
                  <param name="text">Text whose width has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetKerning(System.Char,System.Char)">
                  <summary>Gets the unscaled kerning width between two given characters.</summary>
                  <param name="textChar1">Left character.</param>
                  <param name="textChar2">Right character,</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetKerning(System.String)">
                  <summary>Gets the unscaled kerning width inside the given text.</summary>
                  <param name="text">Text whose kerning has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetKerning(System.String,System.Double)">
                  <summary>Gets the kerning width inside the given text, scaled to the given font size.</summary>
                  <param name="text">Text whose kerning has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetLineHeight(System.Double)">
                  <summary>Gets the line height, scaled to the given font size.</summary>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetWidth(System.Char)">
                  <summary>Gets the unscaled width of the given character.</summary>
                  <param name="textChar">Character whose width has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetWidth(System.Char,System.Double)">
                  <summary>Gets the width of the given character, scaled to the given font size.</summary>
                  <param name="textChar">Character whose height has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetWidth(System.String)">
                  <summary>Gets the unscaled width (kerning exclusive) of the given text.</summary>
                  <param name="text">Text whose width has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.GetWidth(System.String,System.Double)">
                  <summary>Gets the width (kerning exclusive) of the given text, scaled to the given font
                  size.</summary>
                  <param name="text">Text whose width has to be calculated.</param>
                  <param name="size">Font size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.Load">
                  <summary>Loads font information from existing PDF font structure.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.Font.OnLoad">
                  <summary>Notifies the loading of font information from an existing PDF font structure.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Ascent">
                  <summary>Gets the unscaled vertical offset from the baseline to the ascender line (ascent).
                  The value is a positive number.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Descent">
                  <summary>Gets the unscaled vertical offset from the baseline to the descender line (descent).
                  The value is a negative number.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Flags">
                  <summary>Gets the font descriptor flags.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.LineHeight">
                  <summary>Gets the unscaled line height.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Name">
                  <summary>Gets the PostScript name of the font.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Symbolic">
                  <summary>Gets whether the font encoding is custom (that is non-Unicode).</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.Font.Descriptor">
                  <summary>Gets the font descriptor.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Font.FlagsEnum">
                  <summary>Font descriptor flags [PDF:1.6:5.7.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.FixedPitch">
                    <summary>All glyphs have the same width.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.Serif">
                    <summary>Glyphs have serifs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.Symbolic">
                    <summary>Font contains glyphs outside the Adobe standard Latin character set.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.Script">
                    <summary>Glyphs resemble cursive handwriting.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.Nonsymbolic">
                    <summary>Font uses the Adobe standard Latin character set.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.Italic">
                    <summary>Glyphs have dominant vertical strokes that are slanted.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.AllCap">
                    <summary>Font contains no lowercase letters.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.SmallCap">
                    <summary>Font contains both uppercase and lowercase letters.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.Font.FlagsEnum.ForceBold">
                    <summary>Thicken bold glyphs at small text sizes.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CompositeFont.Load(org.pdfclown.documents.contents.fonts.OpenFontParser)">
                  <summary>Loads the font data.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CompositeFont.Load_CreateEncoding(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfDictionary)">
                  <summary>Creates the character code mapping for composite fonts.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CompositeFont.Load_CreateFontDescriptor(org.pdfclown.documents.contents.fonts.OpenFontParser)">
                  <summary>Creates the font descriptor.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.fonts.CompositeFont.CIDFontDictionary">
                  <summary>Gets the CIDFont dictionary that is the descendant of this composite font.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Encoding">
                <summary>Predefined encodings [PDF:1.6:5.5.5,D].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.GlyphMapping">
                <summary>Adobe standard glyph mapping (unicode-encoding against glyph-naming)
                [PDF:1.6:D;AGL:2.0].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.GlyphMapping.Load">
                  <summary>Loads the glyph list mapping character names to character codes (unicode
                  encoding).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.MacRomanEncoding">
                <summary>Mac OS standard latin encoding [PDF:1.6:D].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.MMType1Font">
                <summary>Multiple Master Type 1 font [PDF:1.6:5.5.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Type1Font">
                <summary>Type 1 font [PDF:1.6:5.5.1;AFM:4.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.SimpleFont">
                <summary>Simple font [PDF:1.6:5.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.SimpleFont.LoadEncodingDifferences(org.pdfclown.objects.PdfDictionary,System.Collections.Generic.IDictionary{org.pdfclown.util.ByteArray,System.Int32})">
                  <summary>Loads the encoding differences into the given collection.</summary>
                  <param name="encodingDictionary">Encoding dictionary.</param>
                  <param name="codes">Encoding to alter applying differences.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.OpenFontParser">
                <summary>Open Font Format parser [OFF:2009].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.IsOpenFont(org.pdfclown.bytes.IInputStream)">
                  <summary>Gets whether the given data represents a valid Open Font.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.GetOutlineFormat(System.Int32)">
                  <summary>Gets the outline format corresponding to the specified version code.</summary>
                  <param name="versionCode">OFF version.</param>
                  <exception cref="T:System.NotSupportedException">If versionCode is unknown.</exception>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.OpenFontParser.Symbolic">
                  <summary>Whether glyphs are indexed by custom (non-Unicode) encoding.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.Load">
                  <summary>Loads the font data.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadCMap">
                  <summary>Loads the character to glyph index mapping table.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadCMapFormat0">
                  <summary>Loads format-0 cmap subtable (Byte encoding table, i.e. Apple standard
                  character-to-glyph index mapping table).</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadCMapFormat4">
                  <summary>Loads format-4 cmap subtable (Segment mapping to delta values, i.e. Microsoft standard
                  character to glyph index mapping table for fonts that support Unicode ranges other than the
                  range [U+D800 - U+DFFF] (defined as Surrogates Area, in Unicode v 3.0)).</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadCMapFormat6">
                  <summary>Loads format-6 cmap subtable (Trimmed table mapping).</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.GetName(System.Int32)">
                  <summary>Gets a name.</summary>
                  <param name="id">Name identifier.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadGlyphKerning">
                  <summary>Loads the glyph kerning.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadGlyphWidths">
                  <summary>Loads the glyph widths.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.LoadTables">
                  <summary>Loads general tables.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.ReadAsciiString(System.Int32)">
                  <summary>Reads a string from the font file using the extended ASCII encoding.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.ReadString(System.Int32,System.Int32)">
                  <summary>Reads a string.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.ReadString(System.Int32,System.Text.Encoding)">
                  <summary>Reads a string from the font file using the specified encoding.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.OpenFontParser.ReadUnicodeString(System.Int32)">
                  <summary>Reads a string from the font file using the Unicode encoding.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.OpenFontParser.FontMetrics">
                  <summary>Font metrics.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.OpenFontParser.FontMetrics.IsCustomEncoding">
                    <summary>Whether the encoding is custom (symbolic font).</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.OpenFontParser.FontMetrics.UnitNorm">
                    <summary>Unit normalization coefficient.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.OpenFontParser.OutlineFormatEnum">
                  <summary>Outline format.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.OpenFontParser.OutlineFormatEnum.TrueType">
                    <summary>TrueType format outlines.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.OpenFontParser.OutlineFormatEnum.CFF">
                    <summary>Compact Font Format outlines.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.PfbParser">
                <summary>Type 1 font parser.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.PfbParser.Parse">
                  <summary>Parses the character-code-to-unicode mapping [PDF:1.6:5.9.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.StandardEncoding">
                <summary>Adobe standard Latin-text encoding [PDF:1.6:D].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.StandardType1Font">
                <summary>Standard Type 1 font [PDF:1.6:5.5.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.StandardType1Font.Create(System.String,org.pdfclown.objects.PdfName)">
                  <summary>Creates the font structures.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.StandardType1Font.Load(System.String)">
                  <summary>Loads the font metrics.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.StandardType1Font.FamilyEnum">
                  <summary>Standard Type 1 font families [PDF:1.6:5.5.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.TrueTypeFont">
                <summary>TrueType font [PDF:1.6:5;OFF:2009].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Type0Font">
                <summary>Composite font associated to a Type 0 CIDFont,
                containing glyph descriptions based on the Adobe Type 1 font format [PDF:1.6:5.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Type2Font">
                <summary>Composite font associated to a Type 2 CIDFont, containing glyph descriptions based on
                the TrueType font format [PDF:1.6:5.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.Type3Font">
                <summary>Type 3 font [PDF:1.6:5.5.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.WinAnsiEncoding">
                <summary>Windows ANSI encoding (Windows Code Page 1252) [PDF:1.6:D].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.BeginInlineImage">
                <summary>'Begin inline image object' operation [PDF:1.6:4.8.6].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.Operation">
                <summary>Content stream instruction [PDF:1.6:3.7.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ContentObject">
                <summary>Abstract content object [PDF:1.6:4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ContentObject.Scan(org.pdfclown.documents.contents.ContentScanner.GraphicsState)">
                  <summary>Applies this object to the specified graphics context, updating the specified
                  graphics state.</summary>
                  <param name="state">Graphics state.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ContentObject.WriteTo(org.pdfclown.bytes.IOutputStream,org.pdfclown.documents.Document)">
                  <summary>Serializes this object to the specified stream.</summary>
                  <param name="stream">Target stream.</param>
                  <param name="context">Document context.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.Operation.Get(System.String,System.Collections.Generic.IList{org.pdfclown.objects.PdfDirectObject})">
                  <summary>Gets an operation.</summary>
                  <param name="operator_">Operator.</param>
                  <param name="operands">List of operands.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.BeginMarkedContent">
                <summary>'Begin marked-content sequence' operation [PDF:1.6:10.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ContentMarker">
                <summary>Abstract content marker [PDF:1.6:10.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.IResourceReference`1">
                <summary>Resource reference.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.IResourceReference`1.GetResource(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the referenced resource.</summary>
                  <remarks>Whether a <see cref="P:org.pdfclown.documents.contents.objects.IResourceReference`1.Name">resource name</see> is available or not, it can be
                    respectively either shared or private.</remarks>
                  <param name="context">Content context.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.IResourceReference`1.Name">
                  <summary>Gets/Sets the resource name.</summary>
                  <seealso cref="M:org.pdfclown.documents.contents.objects.IResourceReference`1.GetResource(org.pdfclown.documents.contents.IContentContext)"/>
                  <seealso cref="T:org.pdfclown.documents.contents.Resources"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ContentMarker.GetProperties(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the private information meaningful to the program (application or plugin extension)
                  creating the marked content.</summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ContentMarker.Properties">
                  <summary>Gets/Sets the private information meaningful to the program (application or plugin
                  extension) creating the marked content. It can be either an inline <see cref="T:org.pdfclown.documents.contents.PropertyList"/>
                  or the <see cref="T:org.pdfclown.objects.PdfName">name</see> of an external PropertyList resource.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ContentMarker.Tag">
                  <summary>Gets/Sets the marker indicating the role or significance of the marked content.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.BeginSubpath">
                <summary>'Begin a new subpath by moving the current point' operation [PDF:1.6:4.4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.BeginSubpath.#ctor(System.Drawing.PointF)">
                  <param name="point">Current point.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.BeginSubpath.#ctor(System.Double,System.Double)">
                  <param name="pointX">Current point X.</param>
                  <param name="pointY">Current point Y.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.BeginSubpath.Point">
                  <summary>Gets/Sets the current point.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.BeginText">
                <summary>'Begin text object' operation [PDF:1.6:5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.CloseSubpath">
                <summary>'Close the current subpath by appending a straight line segment
                from the current point to the starting point of the subpath' operation
                [PDF:1.6:4.4.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.CompositeObject">
                <summary>Composite object. It is made up of multiple content objects.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.CompositeObject.CreateRenderObject">
                  <summary>Creates the rendering object corresponding to this container.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.CompositeObject.Render(org.pdfclown.documents.contents.ContentScanner.GraphicsState)">
                  <summary>Renders this container.</summary>
                  <param name="state">Graphics state.</param>
                  <returns>Whether the rendering has been executed.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.CompositeObject.Header">
                  <summary>Gets/Sets the object header.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.CompositeObject.Objects">
                  <summary>Gets the list of inner objects.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ContainerObject">
                <summary>Container object. It encompasses multiple content objects.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.DrawCurve">
                <summary>'Append a cubic Bezier curve to the current path' operation [PDF:1.6:4.4.1].</summary>
                <remarks>Such curves are defined by four points:
                the two endpoints (the current point and the final point)
                and two control points (the first control point, associated to the current point,
                and the second control point, associated to the final point).</remarks>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.DrawCurve.FinalOperatorKeyword">
                  <summary>Specifies only the second control point
                  (the first control point coincides with the initial point of the curve).</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.DrawCurve.FullOperatorKeyword">
                  <summary>Specifies both control points explicitly.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.DrawCurve.InitialOperatorKeyword">
                  <summary>Specifies only the first control point
                  (the second control point coincides with the final point of the curve).</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.DrawCurve.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
                  <summary>Creates a fully-explicit curve.</summary>
                  <param name="point">Final endpoint.</param>
                  <param name="control1">First control point.</param>
                  <param name="control2">Second control point.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.DrawCurve.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Creates a fully-explicit curve.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.DrawCurve.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.String)">
                  <summary>Creates a partially-explicit curve.</summary>
                  <param name="point">Final endpoint.</param>
                  <param name="control">Explicit control point.</param>
                  <param name="operator">Operator (either <code>InitialOperator</code> or <code>FinalOperator</code>).
                  It defines how to interpret the <code>control</code> parameter.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.DrawCurve.Control1">
                  <summary>Gets/Sets the first control point.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.DrawCurve.Control2">
                  <summary>Gets/Sets the second control point.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.DrawCurve.Point">
                  <summary>Gets/Sets the final endpoint.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.DrawLine">
                <summary>'Append a straight line segment from the current point' operation [PDF:1.6:4.4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.DrawLine.#ctor(System.Drawing.PointF)">
                  <param name="point">Final endpoint.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.DrawLine.#ctor(System.Double,System.Double)">
                  <param name="pointX">Final endpoint X.</param>
                  <param name="pointY">Final endpoint Y.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.DrawLine.Point">
                  <summary>Gets/Sets the final endpoint.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.DrawRectangle">
                <summary>'Append a rectangle to the current path as a complete subpath' operation
                [PDF:1.6:4.4.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.EndInlineImage">
                <summary>'End inline image object' operation [PDF:1.6:4.8.6].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.EndMarkedContent">
                <summary>'End marked-content sequence' operation [PDF:1.6:10.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.EndText">
                <summary>'End text object' operation [PDF:1.6:5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.GenericOperation">
                <summary>Weakly-typed operation.</summary>
                <remarks>This is used to model operations which do not have a dedicated type.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.GraphicsObject">
                <summary>Graphics object [PDF:1.6:4.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.InlineImage">
                <summary>Inline image object [PDF:1.6:4.8.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.InlineImage.Body">
                  <summary>Gets the image body.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.InlineImage.Header">
                  <summary>Gets the image header.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.InlineImage.Size">
                  <summary>Gets the image size.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.InlineImageBody">
                <summary>Inline image data (anonymous) operation [PDF:1.6:4.8.6].</summary>
                <remarks>This is a figurative operation necessary to constrain the inline image data section
                within the content stream model.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.InlineImageHeader">
                <summary>Inline image entries (anonymous) operation [PDF:1.6:4.8.6].</summary>
                <remarks>This is a figurative operation necessary to constrain the inline image entries section
                within the content stream model.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.LocalGraphicsState">
                <summary>Local graphics state [PDF:1.6:4.3.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.MarkedContent">
                <summary>Marked-content sequence [PDF:1.6:10.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.MarkedContent.Header">
                  <summary>Gets/Sets information about this marked-content sequence.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ModifyClipPath">
                <summary>Clipping path operation [PDF:1.6:4.4.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.ModifyClipPath.EvenOdd">
                  <summary>'Modify the current clipping path by intersecting it with the current path,
                  using the even-odd rule to determine which regions lie inside the clipping path'
                  operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.ModifyClipPath.NonZero">
                  <summary>'Modify the current clipping path by intersecting it with the current path,
                  using the nonzero winding number rule to determine which regions lie inside
                  the clipping path' operation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ModifyClipPath.ClipMode">
                  <summary>Gets the clipping rule.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ModifyCTM">
                <summary>'Modify the current transformation matrix (CTM) by concatenating the specified matrix'
                operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.PaintPath">
                <summary>Path-painting operation [PDF:1.6:4.4.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.CloseFillStroke">
                  <summary>'Close, fill, and then stroke the path, using the nonzero winding number rule to determine
                  the region to fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.CloseFillStrokeEvenOdd">
                  <summary>'Close, fill, and then stroke the path, using the even-odd rule to determine the region
                  to fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.CloseStroke">
                  <summary>'Close and stroke the path' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.EndPathNoOp">
                  <summary>'End the path object without filling or stroking it' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.Fill">
                  <summary>'Fill the path, using the nonzero winding number rule to determine the region to fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.FillEvenOdd">
                  <summary>'Fill the path, using the even-odd rule to determine the region to fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.FillStroke">
                  <summary>'Fill and then stroke the path, using the nonzero winding number rule to determine the region to
                  fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.FillStrokeEvenOdd">
                  <summary>'Fill and then stroke the path, using the even-odd rule to determine the region to fill' operation.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.PaintPath.Stroke">
                  <summary>'Stroke the path' operation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.PaintPath.FillMode">
                  <summary>Gets the filling rule.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.PaintPath.Closed">
                  <summary>Gets whether the current path has to be closed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.PaintPath.Filled">
                  <summary>Gets whether the current path has to be filled.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.PaintPath.Stroked">
                  <summary>Gets whether the current path has to be stroked.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.PaintShading">
                <summary>'Paint the shape and color shading' operation [PDF:1.6:4.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.PaintShading.GetShading(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.colorSpaces.Shading">shading</see> resource to be painted.
                  </summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.PaintXObject">
                <summary>'Paint the specified XObject' operation [PDF:1.6:4.7].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.PaintXObject.GetScanner(org.pdfclown.documents.contents.ContentScanner)">
                  <summary>Gets the scanner for the contents of the painted external object.</summary>
                  <param name="context">Scanning context.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.PaintXObject.GetXObject(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.xObjects.XObject">external object</see> resource to be painted.
                  </summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.Path">
                <summary>Path object [PDF:1.6:4.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.RestoreGraphicsState">
                <summary>'Restore the graphics state by removing the most recently saved state from the stack
                and making it the current state' operation [PDF:1.6:4.3.3]. Practically, it ends the current
                local graphics state.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SaveGraphicsState">
                <summary>'Save the current graphics state on the graphics state stack' operation [PDF:1.6:4.3.3].
                Practically, it begins a local graphics state.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetCharSpace">
                <summary>'Set the character spacing' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetFillColor">
                <summary>'Set the color to use for nonstroking operations' operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.SetFillColor.ExtendedOperatorKeyword">
                  <summary>'Set the color to use for nonstroking operations in any color space' operator.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.SetFillColor.OperatorKeyword">
                  <summary>'Set the color to use for nonstroking operations in a device, CIE-based (other than ICCBased),
                  or Indexed color space' operator.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetFillColor.#ctor(System.String,org.pdfclown.objects.PdfName)">
                  <param name="operator_">Graphics operator.</param>
                  <param name="name">Name of the color resource entry (see <see cref="T:org.pdfclown.documents.contents.colorSpaces.Pattern"/>).</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetFillColor.#ctor(System.String,org.pdfclown.objects.PdfName,org.pdfclown.documents.contents.colorSpaces.Color)">
                  <param name="operator_">Graphics operator.</param>
                  <param name="name">Name of the color resource entry (see <see cref="T:org.pdfclown.documents.contents.colorSpaces.Pattern"/>).</param>
                  <param name="underlyingColor">Color used to colorize the pattern.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetFillColorSpace">
                <summary>'Set the current color space to use for nonstroking operations' operation
                [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetFillColorSpace.GetColorSpace(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.colorSpaces.ColorSpace">color space</see> resource to be set.</summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetFont">
                <summary>'Set the text font' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetFont.GetFont(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.fonts.Font">font</see> resource to be set.</summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.SetFont.Size">
                  <summary>Gets/Sets the font size to be set.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetLineCap">
                <summary>'Set the line cap style' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetLineDash">
                <summary>'Set the line dash pattern' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetLineJoin">
                <summary>'Set the line join style' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetLineWidth">
                <summary>'Set the line width' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetMiterLimit">
                <summary>'Set the miter limit' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetStrokeColor">
                <summary>'Set the color to use for stroking operations' operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.SetStrokeColor.ExtendedOperatorKeyword">
                  <summary>'Set the color to use for stroking operations in any color space' operator.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.SetStrokeColor.OperatorKeyword">
                  <summary>'Set the color to use for stroking operations in a device, CIE-based (other than ICCBased),
                  or Indexed color space' operator.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetStrokeColor.#ctor(System.String,org.pdfclown.objects.PdfName)">
                  <param name="operator_">Graphics operator.</param>
                  <param name="name">Name of the color resource entry (see <see cref="T:org.pdfclown.documents.contents.colorSpaces.Pattern"/>).</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetStrokeColor.#ctor(System.String,org.pdfclown.objects.PdfName,org.pdfclown.documents.contents.colorSpaces.Color)">
                  <param name="operator_">Graphics operator.</param>
                  <param name="name">Name of the color resource entry (see <see cref="T:org.pdfclown.documents.contents.colorSpaces.Pattern"/>).</param>
                  <param name="underlyingColor">Color used to colorize the pattern.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetStrokeColorSpace">
                <summary>'Set the current color space to use for stroking operations' operation [PDF:1.6:4.5.7].
                </summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.SetStrokeColorSpace.GetColorSpace(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.colorSpaces.ColorSpace">color space</see> resource to be set.</summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetTextLead">
                <summary>'Set the text leading' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.SetTextLead.Value">
                  <summary>Gets/Sets the text leading, which is a number expressed in unscaled text space units.
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetTextMatrix">
                <summary>'Set the text matrix' operation [PDF:1.6:5.3.1].</summary>
                <remarks>The specified matrix is not concatenated onto the current text matrix,
                but replaces it.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetTextRenderMode">
                <summary>'Set the text rendering mode' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetTextRise">
                <summary>'Set the text rise' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.SetTextRise.Value">
                  <summary>Gets/Sets the text rise, which is a number expressed in unscaled text space units.
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetTextScale">
                <summary>'Set the horizontal scaling' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.SetTextScale.Value">
                  <summary>Gets/Sets the horizontal scale expressed as a percentage of the normal width (100).
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetWordSpace">
                <summary>'Set the word spacing' operation [PDF:1.6:5.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.Shading">
                <summary>Shading object [PDF:1.6:4.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ShowAdjustedText">
                <summary>'Show one or more text strings, allowing individual glyph positioning'
                operation [PDF:1.6:5.3.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ShowText">
                <summary>Abstract 'show a text string' operation [PDF:1.6:5.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowText.Scan(org.pdfclown.documents.contents.ContentScanner.GraphicsState,org.pdfclown.documents.contents.objects.ShowText.IScanner)">
                  <summary>Executes scanning on this operation.</summary>
                  <param name="state">Graphics state context.</param>
                  <param name="textScanner">Scanner to be notified about text contents.
                  In case it's null, the operation is applied to the graphics state context.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ShowText.Text">
                  <summary>Gets/Sets the encoded text.</summary>
                  <remarks>Text is expressed in native encoding: to resolve it to Unicode, pass it
                  to the decode method of the corresponding font.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ShowText.Value">
                  <summary>Gets/Sets the encoded text elements along with their adjustments.</summary>
                  <remarks>Text is expressed in native encoding: to resolve it to Unicode, pass it
                  to the decode method of the corresponding font.</remarks>
                  <returns>Each element can be either a byte array or a number:
                    <list type="bullet">
                      <item>if it's a byte array (encoded text), the operator shows text glyphs;</item>
                      <item>if it's a number (glyph adjustment), the operator inversely adjusts the next glyph position
                      by that amount (that is: a positive value reduces the distance between consecutive glyphs).</item>
                    </list>
                  </returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowText.IScanner.ScanChar(System.Char,System.Drawing.RectangleF)">
                    <summary>Notifies the scanner about a text character.</summary>
                    <param name="textChar">Scanned character.</param>
                    <param name="textCharBox">Bounding box of the scanned character.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowAdjustedText.#ctor(System.Collections.Generic.IList{System.Object})">
                  <param name="value">Each element can be either a byte array (encoded text) or a number.
                    If the element is a byte array (encoded text), this operator shows the text glyphs.
                    If it is a number (glyph adjustment), the operator adjusts the next glyph position by that amount.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ShowSimpleText">
                <summary>'Show a text string' operation [PDF:1.6:5.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowSimpleText.#ctor(System.Byte[])">
                  <param name="text">Text encoded using current font's encoding.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ShowTextToNextLine">
                <summary>'Move to the next line and show a text string' operation [PDF:1.6:5.3.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.ShowTextToNextLine.SimpleOperatorKeyword">
                  <summary>Specifies no text state parameter
                  (just uses the current settings).</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.ShowTextToNextLine.SpaceOperatorKeyword">
                  <summary>Specifies the word spacing and the character spacing
                  (setting the corresponding parameters in the text state).</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowTextToNextLine.#ctor(System.Byte[])">
                  <param name="text">Text encoded using current font's encoding.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ShowTextToNextLine.#ctor(System.Byte[],System.Double,System.Double)">
                  <param name="text">Text encoded using current font's encoding.</param>
                  <param name="wordSpace">Word spacing.</param>
                  <param name="charSpace">Character spacing.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ShowTextToNextLine.CharSpace">
                  <summary>Gets/Sets the character spacing.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.ShowTextToNextLine.WordSpace">
                  <summary>Gets/Sets the word spacing.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.Text">
                <summary>Text object [PDF:1.6:5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.TranslateTextRelative">
                <summary>'Move to the start of the next line, offset from the start of the current line' operation
                [PDF:1.6:5.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.TranslateTextRelative.SimpleOperatorKeyword">
                  <summary>No side effect.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.objects.TranslateTextRelative.LeadOperatorKeyword">
                  <summary>Lead parameter setting.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.objects.TranslateTextRelative.LeadSet">
                  <summary>Gets/Sets whether this operation, as a side effect, sets the leading parameter in the text state.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.TranslateTextToNextLine">
                <summary>'Move to the start of the next line' operation [PDF:1.6:5.3.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.XObject">
                <summary>External object shown in a content stream context [PDF:1.6:4.7].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.XObject.GetScanner(org.pdfclown.documents.contents.ContentScanner)">
                  <summary>Gets the scanner for this object's contents.</summary>
                  <param name="context">Scanning context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.xObjects.FormXObject">
                <summary>Form external object [PDF:1.6:4.9].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.xObjects.XObject">
                <summary>External graphics object whose contents are defined by a self-contained content stream,
                separate from the content stream in which it is used [PDF:1.6:4.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.ILayerable">
                <summary>Object that can be associated to a layer.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerable.Layer">
                  <summary>Gets/Sets the layer associated to this object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.XObject.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an external object reference into an external object.</summary>
                  <param name="baseObject">External object base object.</param>
                  <returns>External object associated to the reference.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.XObject.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new external object inside the document.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.XObject.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.PdfStream)">
                  <summary>Creates a new external object inside the document.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.XObject.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates an existing external object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.xObjects.XObject.Matrix">
                  <summary>Gets/Sets the mapping from external-object space to user space.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.xObjects.XObject.Size">
                  <summary>Gets/Sets the external object size.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.IContentContext">
                <summary>Content stream context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.IContentContext.Render(System.Drawing.Graphics,System.Drawing.SizeF)">
                  Renders this content context into the specified rendering context.
            
                  @param context Rendering context.
                  @param size Rendering canvas size.
                  @since 0.1.0
        </member>
        <member name="P:org.pdfclown.documents.contents.IContentContext.Box">
                  <summary>Gets the bounding box associated with this content context either explicitly
                  (directly associated to the object) or (if not explicitly available) implicitly (inherited
                  from a higher level object), expressed in default user-space units.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.IContentContext.Contents">
                  <summary>Gets the contents collection representing the content stream associated
                  with this content context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.IContentContext.Resources">
                  <summary>Gets the resources associated with this content context either explicitly (directly
                  associated to the object) or (if not explicitly available) implicitly (inherited from a
                  higher-level object).</summary>
                  <remarks>The implementing class MUST ensure that the returned object isn't
                  <code>null</code>.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.IContentContext.Rotation">
                  <summary>Gets the rendering rotation of this content context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.FormXObject.#ctor(org.pdfclown.documents.Document,System.Drawing.SizeF)">
                  <summary>Creates a new form within the specified document context.</summary>
                  <param name="context">Document where to place this form.</param>
                  <param name="size">Form size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.xObjects.FormXObject.#ctor(org.pdfclown.documents.Document,System.Drawing.RectangleF)">
                  <summary>Creates a new form within the specified document context.</summary>
                  <param name="context">Document where to place this form.</param>
                  <param name="box">Form box.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.xObjects.ImageXObject">
                <summary>Image external object [PDF:1.6:4.8.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.xObjects.ImageXObject.BitsPerComponent">
                  <summary>Gets the number of bits per color component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.xObjects.ImageXObject.ColorSpace">
                  <summary>Gets the color space in which samples are specified.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.xObjects.ImageXObject.Size">
                  <summary>Gets the size of the image (in samples).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ColorSpaceResources">
                <summary>Color spaces collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ResourceItems`1">
                <summary>Collection of a specific resource type.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ResourceItems`1.GetKey(`0)">
                  Gets the key associated to a given value.
        </member>
        <member name="M:org.pdfclown.documents.contents.ResourceItems`1.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a base object within its corresponding high-level representation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.Contents">
                <summary>Content stream [PDF:1.6:3.7.1].</summary>
                <remarks>During its loading, this content stream is parsed and its instructions
                are exposed as a list; in case of modifications, it's user responsability
                to call the <see cref="M:org.pdfclown.documents.contents.Contents.Flush"/> method in order to serialize back the instructions
                into this content stream.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.contents.Contents.Flush">
                  <summary>Serializes the contents into the content stream.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.Contents.ContentStream">
                  <summary>Content stream wrapper.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner">
                <summary>Content objects scanner.</summary>
                <remarks>
                  <para>It wraps the <see cref="P:org.pdfclown.documents.contents.ContentScanner.Contents">content objects collection</see> to scan its graphics state
                  through a forward cursor.</para>
                  <para>Scanning is performed at an arbitrary deepness, according to the content objects nesting:
                  each depth level corresponds to a scan level so that at any time it's possible to seamlessly
                  navigate across the levels (see <see cref="P:org.pdfclown.documents.contents.ContentScanner.ParentLevel"/>, <see cref="P:org.pdfclown.documents.contents.ContentScanner.ChildLevel"/>).</para>
                </remarks>
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.childLevel">
                  Child level.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.contents">
                  Content objects collection.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.index">
                  Current object index at this level.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.objects">
                  Object collection at this level.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.parentLevel">
                  Parent level.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.state">
                  Current graphics state.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.renderContext">
                  Rendering context.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.renderObject">
                  Rendering object.
        </member>
        <member name="F:org.pdfclown.documents.contents.ContentScanner.renderSize">
                  Device-space size of the rendering canvas.
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.#ctor(org.pdfclown.documents.contents.Contents)">
                  <summary>Instantiates a top-level content scanner.</summary>
                  <param name="contents">Content objects collection to scan.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.#ctor(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Instantiates a top-level content scanner.</summary>
                  <param name="contentContext">Content context containing the content objects collection to scan.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.#ctor(org.pdfclown.documents.contents.xObjects.FormXObject,org.pdfclown.documents.contents.ContentScanner)">
                  <summary>Instantiates a child-level content scanner for <see cref="T:org.pdfclown.documents.contents.xObjects.FormXObject">external form</see>.</summary>
                  <param name="formXObject">External form.</param>
                  <param name="parentLevel">Parent scan level.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.#ctor(org.pdfclown.documents.contents.ContentScanner)">
                  <summary>Instantiates a child-level content scanner.</summary>
                  <param name="parentLevel">Parent scan level.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Insert(org.pdfclown.documents.contents.objects.ContentObject)">
                  <summary>Inserts a content object at the current position.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Insert``1(System.Collections.Generic.ICollection{``0})">
                  <summary>Inserts content objects at the current position.</summary>
                  <remarks>After the insertion is complete, the lastly-inserted content object is at the current position.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.IsRootLevel">
                  <summary>Gets whether this level is the root of the hierarchy.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Move(System.Int32)">
                  <summary>Moves to the object at the given position.</summary>
                  <param name="index">New position.</param>
                  <returns>Whether the object was successfully reached.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.MoveEnd">
                  <summary>Moves after the last object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.MoveFirst">
                  <summary>Moves to the first object.</summary>
                  <returns>Whether the first object was successfully reached.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.MoveLast">
                  <summary>Moves to the last object.</summary>
                  <returns>Whether the last object was successfully reached.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.MoveNext">
                  <summary>Moves to the next object.</summary>
                  <returns>Whether the next object was successfully reached.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.MoveStart">
                  <summary>Moves before the first object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Remove">
                  <summary>Removes the content object at the current position.</summary>
                  <returns>Removed object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Render(System.Drawing.Graphics,System.Drawing.SizeF)">
                  <summary>Renders the contents into the specified context.</summary>
                  <param name="renderContext">Rendering context.</param>
                  <param name="renderSize">Rendering canvas size.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Render(System.Drawing.Graphics,System.Drawing.SizeF,System.Drawing.Drawing2D.GraphicsPath)">
                  <summary>Renders the contents into the specified object.</summary>
                  <param name="renderContext">Rendering context.</param>
                  <param name="renderSize">Rendering canvas size.</param>
                  <param name="renderObject">Rendering object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.NotifyStart">
                  <summary>Notifies the scan start to listeners.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.Refresh">
                  <summary>Synchronizes the scanner state.</summary>
        </member>
        <member name="E:org.pdfclown.documents.contents.ContentScanner.OnStart">
                  <summary>Notifies the scan start.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.CanvasSize">
                  <summary>Gets the size of the current imageable area.</summary>
                  <remarks>It can be either the user-space area (dry scanning)
                  or the device-space area (wet scanning).</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.ChildLevel">
                  <summary>Gets the current child scan level.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.ContentContext">
                  <summary>Gets the content context associated to the content objects collection.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.Contents">
                  <summary>Gets the content objects collection this scanner is inspecting.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.Current">
                  <summary>Gets/Sets the current content object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.CurrentWrapper">
                  <summary>Gets the current content object's information.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.Index">
                  <summary>Gets the current position.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.Parent">
                  <summary>Gets the current parent object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.ParentLevel">
                  <summary>Gets the parent scan level.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.RenderContext">
                  <summary>Gets the rendering context.</summary>
                  <returns><code>null</code> in case of dry scanning.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.RenderObject">
                  <summary>Gets the rendering object.</summary>
                  <returns><code>null</code> in case of scanning outside a shape.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.RootLevel">
                  <summary>Gets the root scan level.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.State">
                  <summary>Gets the current graphics state applied to the current content object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.OnStartEventHandler">
                  <summary>Handles the scan start notification.</summary>
                  <param name="scanner">Content scanner started.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.GraphicsState">
                  <summary>Graphics state [PDF:1.6:4.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Clone">
                    <summary>Gets a deep copy of the graphics state object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.CopyTo(org.pdfclown.documents.contents.ContentScanner.GraphicsState)">
                    <summary>Copies this graphics state into the specified one.</summary>
                    <param name="state">Target graphics state object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.GetInitialCtm">
                    <summary>Gets the initial current transformation matrix.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.TextToDeviceSpace(System.Drawing.PointF)">
                    <summary>Resolves the given text-space point to its equivalent device-space one [PDF:1.6:5.3.3],
                    expressed in standard PDF coordinate system (lower-left origin).</summary>
                    <param name="point">Point to transform.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.TextToDeviceSpace(System.Drawing.PointF,System.Boolean)">
                    <summary>Resolves the given text-space point to its equivalent device-space one [PDF:1.6:5.3.3].</summary>
                    <param name="point">Point to transform.</param>
                    <param name="topDown">Whether the y-axis orientation has to be adjusted to common top-down orientation
                    rather than standard PDF coordinate system (bottom-up).</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.ContentScanner.GraphicsState.UserToDeviceSpace(System.Drawing.PointF)">
                    <summary>Resolves the given user-space point to its equivalent device-space one [PDF:1.6:4.2.3],
                    expressed in standard PDF coordinate system (lower-left origin).</summary>
                    <param name="point">Point to transform.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.BlendMode">
                    <summary>Gets/Sets the current blend mode to be used in the transparent imaging model
                    [PDF:1.6:5.2.1].</summary>
                    <remarks>The application should use the first blend mode in the list that it recognizes.
                    </remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.CharSpace">
                    <summary>Gets/Sets the current character spacing [PDF:1.6:5.2.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Ctm">
                    <summary>Gets/Sets the current transformation matrix.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.FillColor">
                    <summary>Gets/Sets the current color for nonstroking operations [PDF:1.6:4.5.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.FillColorSpace">
                    <summary>Gets/Sets the current color space for nonstroking operations [PDF:1.6:4.5.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Font">
                    <summary>Gets/Sets the current font [PDF:1.6:5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.FontSize">
                    <summary>Gets/Sets the current font size [PDF:1.6:5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Lead">
                    <summary>Gets/Sets the current leading [PDF:1.6:5.2.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.LineCap">
                    <summary>Gets/Sets the current line cap style [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.LineDash">
                    <summary>Gets/Sets the current line dash pattern [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.LineJoin">
                    <summary>Gets/Sets the current line join style [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.LineWidth">
                    <summary>Gets/Sets the current line width [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.MiterLimit">
                    <summary>Gets/Sets the current miter limit [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.RenderMode">
                    <summary>Gets/Sets the current text rendering mode [PDF:1.6:5.2.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Rise">
                    <summary>Gets/Sets the current text rise [PDF:1.6:5.2.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Scale">
                    <summary>Gets/Sets the current horizontal scaling [PDF:1.6:5.2.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Scanner">
                    <summary>Gets the scanner associated to this state.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.StrokeColor">
                    <summary>Gets/Sets the current color for stroking operations [PDF:1.6:4.5.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.StrokeColorSpace">
                    <summary>Gets/Sets the current color space for stroking operations [PDF:1.6:4.5.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Tlm">
                    <summary>Gets/Sets the current text line matrix [PDF:1.6:5.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.Tm">
                    <summary>Gets/Sets the current text matrix [PDF:1.6:5.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsState.WordSpace">
                    <summary>Gets/Sets the current word spacing [PDF:1.6:5.2.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsObjectWrapper.Box">
                    <summary>Gets the object's bounding box.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.GraphicsObjectWrapper`1">
                  <summary>Object information.</summary>
                  <remarks>
                    <para>This class provides derivative (higher-level) information
                    about the currently scanned object.</para>
                  </remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.GraphicsObjectWrapper`1.BaseDataObject">
                    <summary>Gets the underlying data object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.InlineImageWrapper">
                  <summary>Inline image information.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.InlineImageWrapper.InlineImage">
                    <summary>Gets the inline image.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.TextWrapper">
                  <summary>Text information.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.TextWrapper.TextStrings">
                    <summary>Gets the text strings.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.TextStringWrapper">
                  <summary>Text string information.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ITextString">
                <summary>Text string interface.</summary>
                <remarks>Its purpose is to describe a text chunk extracted from content streams.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.ITextString.Box">
                  <summary>Gets the text string bounds.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ITextString.Text">
                  <summary>Gets the decoded text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ITextString.TextChars">
                  <summary>Gets the information of each text string character.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.TextStringWrapper.Style">
                    <summary>Gets the text style.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ContentScanner.XObjectWrapper">
                  <summary>External object information.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.XObjectWrapper.Name">
                    <summary>Gets the corresponding resource key.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ContentScanner.XObjectWrapper.XObject">
                    <summary>Gets the external object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ExtGState">
                <summary>Graphics state parameters [PDF:1.6:4.3.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.ExtGState.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps the specified base object into a graphics state parameter dictionary object.
                  </summary>
                  <param name="baseObject">Base object of a graphics state parameter dictionary object.</param>
                  <returns>Graphics state parameter dictionary object corresponding to the base object.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.ExtGState.AlphaShape">
                  <summary>Gets/Sets whether the current soft mask and alpha constant are to be interpreted as
                  shape values instead of opacity values.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ExtGState.BlendMode">
                  <summary>Gets/Sets the blend mode to be used in the transparent imaging model [PDF:1.7:7.2.4].
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ExtGState.FillAlpha">
                  <summary>Gets/Sets the nonstroking alpha constant, specifying the constant shape or constant
                  opacity value to be used for nonstroking operations in the transparent imaging model
                  [PDF:1.7:7.2.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.ExtGState.StrokeAlpha">
                  <summary>Gets/Sets the stroking alpha constant, specifying the constant shape or constant
                  opacity value to be used for stroking operations in the transparent imaging model
                  [PDF:1.7:7.2.6].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ExtGStateResources">
                <summary>Graphics state parameter resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.FontResources">
                <summary>Font resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.LineCapEnum">
                <summary>Shape to be used at the ends of stroked open subpaths
                [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineCapEnum.Butt">
                  <summary>Truncated line cap.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineCapEnum.Round">
                  <summary>Rounded line cap.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineCapEnum.Square">
                  <summary>Squared-off line cap.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.LineDash">
                <summary>Line Dash Pattern [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.LineJoinEnum">
                <summary>Shape to be used at the corners of stroked paths
                [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineJoinEnum.Miter">
                  <summary>Sharp line join.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineJoinEnum.Round">
                  <summary>Rounded line join.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.LineJoinEnum.Bevel">
                  <summary>Squared-off line join.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.Resources">
                <summary>Resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.objects.ICompositeDictionary`1">
                <summary>Composite dictionary.</summary>
        </member>
        <member name="M:org.pdfclown.objects.ICompositeDictionary`1.Get(System.Type)">
                  <summary>Gets the value dictionary associated to the specified type.</summary>
        </member>
        <member name="M:org.pdfclown.objects.ICompositeDictionary`1.Get(System.Type,`0)">
                  <summary>Gets the value associated to the specified key for the specified type.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.TextChar">
                <summary>Text character.</summary>
                <remarks>It describes a text element extracted from content streams.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.TextRenderModeEnum">
                <summary>Glyph-outlines appearance on text showing [PDF:1.6:5.2.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.Fill">
                  <summary>Fill text glyphs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.Stroke">
                  <summary>Stroke text glyphs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.FillStroke">
                  <summary>Fill, then stroke text glyphs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.Invisible">
                  <summary>Do nothing (invisible text glyphs).</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.FillClip">
                  <summary>Fill text glyphs, then apply to path for clipping.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.StrokeClip">
                  <summary>Stroke text glyphs, then apply to path for clipping.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.FillStrokeClip">
                  <summary>Fill, then stroke text glyphs, then apply to path for clipping.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.TextRenderModeEnum.Clip">
                  <summary>Apply text glyphs to path for clipping.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.TextStyle">
                <summary>Text style.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.XObjectResources">
                <summary>External object resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.Action">
                <summary>Action to be performed by the viewer application [PDF:1.6:8.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Action.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an action base object into an action object.</summary>
                  <param name="baseObject">Action base object.</param>
                  <returns>Action object associated to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Action.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.PdfName)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Action.Actions">
                  <summary>Gets/Sets the actions to be performed after the current one.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.ChainedActions">
                <summary>Chained actions [PDF:1.6:8.5.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.ChainedActions.parent">
                  Parent action.
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.ChainedActions.Parent">
                  <summary>Gets the parent action.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.DoTransition">
                <summary>'Control drawing during a sequence of actions' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.DoTransition.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.navigation.page.Transition)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.DoTransition.Transition">
                  <summary>Gets/Sets the transition effect to be used for the update of the display.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoTo3dView">
                <summary>'Change the view to a specified 3D annotation' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.IGoToAction">
                <summary>Go-to action.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoTo3dView.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToDestination`1">
                <summary>Abstract 'go to destination' action.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToDestination`1.Destination">
                  <summary>Gets/Sets the destination to jump to.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToEmbedded">
                <summary>'Change the view to a specified destination in a PDF file embedded in another PDF file'
                action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GotoNonLocal`1">
                <summary>Abstract 'go to non-local destination' action.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GotoNonLocal`1.DestinationFile">
                  <summary>Gets/Sets the file in which the destination is located.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GotoNonLocal`1.Options">
                  <summary>Gets/Sets the action options.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement,org.pdfclown.documents.interaction.navigation.document.Destination)">
                  <summary>Creates a new instance within the specified document context, pointing to a
                  destination within an embedded document.</summary>
                  <param name="context">Document context.</param>
                  <param name="destinationPath">Path information to the target document within the destination
                  file.</param>
                  <param name="destination">Destination within the target document.</param>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.files.FileSpecification,org.pdfclown.documents.interaction.navigation.document.Destination)">
                  <summary>Creates a new instance within the specified document context, pointing to a
                  destination within another document.</summary>
                  <param name="context">Document context.</param>
                  <param name="destinationFile">File in which the destination is located.</param>
                  <param name="destination">Destination within the target document.</param>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.files.FileSpecification,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement,org.pdfclown.documents.interaction.navigation.document.Destination)">
                  <summary>Creates a new instance within the specified document context.</summary>
                  <param name="context">Document context.</param>
                  <param name="destinationFile">File in which the destination is located.</param>
                  <param name="destinationPath">Path information to the target document within the destination
                  file.</param>
                  <param name="destination">Destination within the target document.</param>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.DestinationPath">
                  <summary>Gets/Sets the path information to the target document.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement">
                  <summary>Path information to the target document [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.ToCode(org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.RelationEnum)">
                    <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.ToRelationEnum(org.pdfclown.objects.PdfName)">
                    <summary>Gets the relation corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement)">
                    <summary>Creates a new path element representing the parent of the document.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.#ctor(org.pdfclown.documents.Document,System.String,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement)">
                    <summary>Creates a new path element located in the embedded files collection of the document.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.#ctor(org.pdfclown.documents.Document,System.Object,System.Object,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement)">
                    <summary>Creates a new path element associated with a file attachment annotation.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.RelationEnum,System.String,System.Object,System.Object,org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement)">
                    <summary>Creates a new path element.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.#ctor(org.pdfclown.objects.PdfDirectObject)">
                    <summary>Instantiates an existing path element.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.AnnotationPageRef">
                    <summary>Gets/Sets the page reference to the file attachment annotation.</summary>
                    <returns>Either the (zero-based) number of the page in the current document containing the file attachment annotation,
                    or the name of a destination in the current document that provides the page number of the file attachment annotation.</returns>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.AnnotationRef">
                    <summary>Gets/Sets the reference to the file attachment annotation.</summary>
                    <returns>Either the (zero-based) index of the annotation in the list of annotations
                    associated to the page specified by the annotationPageRef property, or the name of the annotation.</returns>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.EmbeddedFileName">
                    <summary>Gets/Sets the embedded file name.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.Relation">
                    <summary>Gets/Sets the relationship between the target and the current document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.Next">
                    <summary>Gets/Sets a further path information to the target document.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.RelationEnum">
                    <summary>Relationship between the target and the current document [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.RelationEnum.Parent">
                      <summary>Parent.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.GoToEmbedded.PathElement.RelationEnum.Child">
                      <summary>Child.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToFirstPage">
                <summary>'Go to the first page of the document' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.NamedAction">
                <summary>Named action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.NamedAction.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.PdfName)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToFirstPage.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToLastPage">
                <summary>'Go to the last page of the document' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToLastPage.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToLocal">
                <summary>'Change the view to a specified destination within the same PDF file' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToLocal.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.navigation.document.LocalDestination)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToNextPage">
                <summary>'Go to the next page of the document' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToNextPage.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToPreviousPage">
                <summary>'Go to the previous page of the document' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToPreviousPage.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToRemote">
                <summary>'Change the view to a specified destination in another PDF file' action
                [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToRemote.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.files.FileSpecification,org.pdfclown.documents.interaction.navigation.document.RemoteDestination)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToThread">
                <summary>'Jump to a specified bead on an article thread' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToThread.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.GoToURI">
                <summary>'Cause a URI (Uniform Resource Identifier) to be resolved' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.GoToURI.#ctor(org.pdfclown.documents.Document,System.Uri)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.GoToURI.URI">
                  <summary>Gets/Sets the uniform resource identifier to resolve [RFC 2396].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.ImportData">
                <summary>'Import FDF (Forms Data Format) data into the document's interactive form
                from a specified file' action [PDF:1.6:8.6.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.ImportData.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.JavaScript">
                <summary>'Cause a script to be compiled and executed by the JavaScript interpreter'
                action [PDF:1.6:8.6.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.JavaScript.GetScript(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName)">
                  <summary>Gets the Javascript script from the specified base data object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.JavaScript.SetScript(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName,System.String)">
                  <summary>Sets the Javascript script into the specified base data object.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.JavaScript.#ctor(org.pdfclown.documents.Document,System.String)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.JavaScript.Script">
                  <summary>Gets/Sets the JavaScript script to be executed.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.Launch">
                <summary>'Launch an application' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Launch.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.PdfObjectWrapper)">
                  <summary>Creates a launcher.</summary>
                  <param name="context">Document context.</param>
                  <param name="target">Either a <see cref="T:org.pdfclown.documents.files.FileSpecification"/> or a <see cref="T:org.pdfclown.documents.interaction.actions.Launch.WinTarget"/>
                  representing either an application or a document.</param>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.Options">
                  <summary>Gets/Sets the action options.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.Target">
                  <summary>Gets/Sets the application to be launched or the document to be opened or printed.
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.Launch.WinTarget">
                  <summary>Windows-specific launch parameters [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Launch.WinTarget.ToCode(org.pdfclown.documents.interaction.actions.Launch.WinTarget.OperationEnum)">
                    <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Launch.WinTarget.ToOperationEnum(org.pdfclown.objects.PdfString)">
                    <summary>Gets the operation corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.WinTarget.DefaultDirectory">
                    <summary>Gets/Sets the default directory.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.WinTarget.FileName">
                    <summary>Gets/Sets the file name of the application to be launched
                    or the document to be opened or printed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.WinTarget.Operation">
                    <summary>Gets/Sets the operation to perform.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Launch.WinTarget.ParameterString">
                    <summary>Gets/Sets the parameter string to be passed to the application.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.Launch.WinTarget.OperationEnum">
                    <summary>Operation [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Launch.WinTarget.OperationEnum.Open">
                      <summary>Open.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Launch.WinTarget.OperationEnum.Print">
                      <summary>Print.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.OptionsEnum">
                <summary>Action options.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.OptionsEnum.NewWindow">
                  <summary>Whether to open the destination document in a new window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.OptionsEnum.SameWindow">
                  <summary>Whether to open the destination document in the current window.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.PlayMovie">
                <summary>'Play a movie' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.PlayMovie.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.interaction.annotations.Movie)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.PlayMovie.Movie">
                  <summary>Gets/Sets the movie to be played.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.PlaySound">
                <summary>'Play a sound' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.PlaySound.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.multimedia.Sound)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.PlaySound.Sound">
                  <summary>Gets/Sets the sound to be played.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.ResetForm">
                <summary>'Reset selected interactive form fields to their default values' action
                [PDF:1.6:8.6.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.ResetForm.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.SubmitForm">
                <summary>'Transmit the names and values of selected interactive form fields
                to a specified URL (Uniform Resource Locator)' action [PDF:1.6:8.6.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.SubmitForm.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.ToggleVisibility">
                <summary>'Toggle the visibility of one or more annotations on the screen' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.ToggleVisibility.#ctor(org.pdfclown.documents.Document,System.Collections.Generic.ICollection{org.pdfclown.objects.PdfObjectWrapper},System.Boolean)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.ToggleVisibility.Objects">
                  <summary>Gets/Sets the annotations (or associated form fields) to be affected.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.ToggleVisibility.Visible">
                  <summary>Gets/Sets whether to show the annotations.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Annotation">
                <summary>Annotation [PDF:1.6:8.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Annotation.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an annotation base object into an annotation object.</summary>
                  <param name="baseObject">Annotation base object.</param>
                  <returns>Annotation object associated to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Annotation.Delete">
                  <summary>Deletes this annotation removing also its reference on the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Action">
                  <summary>Gets/Sets action to be performed when the annotation is activated.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Actions">
                  <summary>Gets/Sets the annotation's behavior in response to various trigger events.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Appearance">
                  <summary>Gets/Sets the appearance specifying how the annotation is presented visually on the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Border">
                  <summary>Gets/Sets the border style.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Box">
                  <summary>Gets/Sets the location of the annotation on the page in default user space units.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Color">
                  <summary>Gets/Sets the annotation color.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Flags">
                  <summary>Gets/Sets the annotation flags.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.ModificationDate">
                  <summary>Gets/Sets the date and time when the annotation was most recently modified.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Name">
                  <summary>Gets/Sets the annotation name.</summary>
                  <remarks>The annotation name uniquely identifies the annotation among all the annotations on its page.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Page">
                  <summary>Gets/Sets the associated page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Printable">
                  <summary>Gets/Sets whether to print the annotation when the page is printed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Text">
                  <summary>Gets/Sets the annotation text.</summary>
                  <remarks>Depending on the annotation type, the text may be either directly displayed
                  or (in case of non-textual annotations) used as alternate description.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Annotation.Visible">
                  <summary>Gets/Sets whether the annotation is visible.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum">
                  <summary>Field flags [PDF:1.6:8.4.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.Invisible">
                    <summary>Hide the annotation, both on screen and on print,
                    if it does not belong to one of the standard annotation types
                    and no annotation handler is available.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.Hidden">
                    <summary>Hide the annotation, both on screen and on print
                    (regardless of its annotation type or whether an annotation handler is available).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.Print">
                    <summary>Print the annotation when the page is printed.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.NoZoom">
                    <summary>Do not scale the annotation's appearance to match the magnification of the page.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.NoRotate">
                    <summary>Do not rotate the annotation's appearance to match the rotation of the page.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.NoView">
                    <summary>Hide the annotation on the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.ReadOnly">
                    <summary>Do not allow the annotation to interact with the user.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.Locked">
                    <summary>Do not allow the annotation to be deleted or its properties to be modified by the user.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Annotation.FlagsEnum.ToggleNoView">
                    <summary>Invert the interpretation of the NoView flag.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AnnotationActions">
                <summary>Annotation actions [PDF:1.6:8.5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnActivate">
                  <summary>Gets/Sets the action to be performed when the annotation is activated.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnEnter">
                  <summary>Gets/Sets the action to be performed when the cursor enters the annotation's active area.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnExit">
                  <summary>Gets/Sets the action to be performed when the cursor exits the annotation's active area.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnMouseDown">
                  <summary>Gets/Sets the action to be performed when the mouse button is pressed
                  inside the annotation's active area.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnMouseUp">
                  <summary>Gets/Sets the action to be performed when the mouse button is released
                  inside the annotation's active area.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnPageClose">
                  <summary>Gets/Sets the action to be performed when the page containing the annotation is closed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnPageInvisible">
                  <summary>Gets/Sets the action to be performed when the page containing the annotation
                  is no longer visible in the viewer application's user interface.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnPageOpen">
                  <summary>Gets/Sets the action to be performed when the page containing the annotation is opened.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AnnotationActions.OnPageVisible">
                  <summary>Gets/Sets the action to be performed when the page containing the annotation
                  becomes visible in the viewer application's user interface.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Appearance">
                <summary>Appearance [PDF:1.6:8.4.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Appearance.Down">
                  <summary>Gets the annotation's down appearance.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Appearance.Normal">
                  <summary>Gets the annotation's normal appearance.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Appearance.Rollover">
                  <summary>Gets the annotation's rollover appearance.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics">
                <summary>Appearance characteristics [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.AlternateCaption">
                  <summary>Gets/Sets the widget annotation's alternate (down) caption,
                  displayed when the mouse button is pressed within its active area
                  (Pushbutton fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.AlternateIcon">
                  <summary>Gets/Sets the widget annotation's alternate (down) icon definition,
                  displayed when the mouse button is pressed within its active area
                  (Pushbutton fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.BackgroundColor">
                  <summary>Gets/Sets the widget annotation's background color.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.BorderColor">
                  <summary>Gets/Sets the widget annotation's border color.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPosition">
                  <summary>Gets/Sets the position of the caption relative to its icon (Pushbutton fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFit">
                  <summary>Gets/Sets the icon fit specifying how to display the widget annotation's icon
                  within its annotation box (Pushbutton fields only).
                  If present, the icon fit applies to all of the annotation's icons
                  (normal, rollover, and alternate).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.NormalCaption">
                  <summary>Gets/Sets the widget annotation's normal caption,
                  displayed when it is not interacting with the user (Button fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.NormalIcon">
                  <summary>Gets/Sets the widget annotation's normal icon definition,
                  displayed when it is not interacting with the user (Pushbutton fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.Orientation">
                  <summary>Gets/Sets the widget annotation's orientation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.RolloverCaption">
                  <summary>Gets/Sets the widget annotation's rollover caption,
                  displayed when the user rolls the cursor into its active area
                  without pressing the mouse button (Pushbutton fields only).</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.RolloverIcon">
                  <summary>Gets/Sets the widget annotation's rollover icon definition,
                  displayed when the user rolls the cursor into its active area
                  without pressing the mouse button (Pushbutton fields only).</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum">
                  <summary>Caption position relative to its icon [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.CaptionOnly">
                    <summary>Caption only (no icon).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.NoCaption">
                    <summary>No caption (icon only).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.Below">
                    <summary>Caption below the icon.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.Above">
                    <summary>Caption above the icon.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.Right">
                    <summary>Caption to the right of the icon.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.Left">
                    <summary>Caption to the left of the icon.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.CaptionPositionEnum.Overlaid">
                    <summary>Caption overlaid directly on the icon.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject">
                  <summary>Icon fit [PDF:1.6:8.6.6].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ToCode(org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum)">
                    <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ToCode(org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleTypeEnum)">
                    <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ToScaleModeEnum(org.pdfclown.objects.PdfName)">
                    <summary>Gets the scaling mode corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ToScaleTypeEnum(org.pdfclown.objects.PdfName)">
                    <summary>Gets the scaling type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.BorderExcluded">
                    <summary>Gets/Sets whether not to take into consideration the line width of the border.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleMode">
                    <summary>Gets/Sets the circumstances under which the icon should be scaled inside the annotation box.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleType">
                    <summary>Gets/Sets the type of scaling to use.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.XAlignment">
                    <summary>Gets/Sets the horizontal alignment of the icon inside the annotation box.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.YAlignment">
                    <summary>Gets/Sets the vertical alignment of the icon inside the annotation box.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum">
                    <summary>Scaling mode [PDF:1.6:8.6.6].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum.Always">
                      <summary>Always scale.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum.Bigger">
                      <summary>Scale only when the icon is bigger than the annotation box.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum.Smaller">
                      <summary>Scale only when the icon is smaller than the annotation box.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleModeEnum.Never">
                      <summary>Never scale.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleTypeEnum">
                    <summary>Scaling type [PDF:1.6:8.6.6].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleTypeEnum.Anamorphic">
                      <summary>Scale the icon to fill the annotation box exactly,
                      without regard to its original aspect ratio.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.IconFitObject.ScaleTypeEnum.Proportional">
                      <summary>Scale the icon to fit the width or height of the annotation box,
                      while maintaining the icon's original aspect ratio.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.OrientationEnum">
                  <summary>Annotation orientation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.OrientationEnum.Up">
                    <summary>Upward.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.OrientationEnum.Left">
                    <summary>Leftward.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.OrientationEnum.Down">
                    <summary>Downward.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.AppearanceCharacteristics.OrientationEnum.Right">
                    <summary>Rightward.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.AppearanceStates">
                <summary>Appearance states [PDF:1.6:8.4.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.AppearanceStates.Add(org.pdfclown.objects.PdfName,org.pdfclown.documents.contents.xObjects.FormXObject)">
                Gets the key associated to a given value.
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.AppearanceStates.Appearance">
                  <summary>Gets the appearance associated to these states.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Border">
                <summary>Border characteristics [PDF:1.6:8.4.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Border.ToCode(org.pdfclown.documents.interaction.annotations.Border.StyleEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Border.ToStyleEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the style corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Border.Pattern">
                  <summary>Gets/Sets the dash pattern used in case of dashed border.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Border.Style">
                  <summary>Gets/Sets the border style.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Border.Width">
                  <summary>Gets/Sets the border width in points.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Border.StyleEnum">
                  <summary>Border style [PDF:1.6:8.4.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Border.StyleEnum.Solid">
                    <summary>Solid.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Border.StyleEnum.Dashed">
                    <summary>Dashed.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Border.StyleEnum.Beveled">
                    <summary>Beveled.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Border.StyleEnum.Inset">
                    <summary>Inset.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Border.StyleEnum.Underline">
                    <summary>Underline.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.CalloutNote">
                <summary>Free text annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays text directly on the page. Unlike an ordinary text annotation,
                a free text annotation has no open or closed state;
                instead of being displayed in a pop-up window, the text is always visible.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.CalloutNote.Justification">
                  <summary>Gets/Sets the justification to be used in displaying the annotation's text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.CalloutNote.Line">
                  <summary>Gets/Sets the callout line attached to the free text annotation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.CalloutNote.LineObject">
                  <summary>Callout line [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Caret">
                <summary>Caret annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays a visual symbol that indicates the presence of text edits.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Caret.ToCode(org.pdfclown.documents.interaction.annotations.Caret.SymbolTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Caret.ToSymbolTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the symbol type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Caret.SymbolType">
                  <summary>Gets/Sets the symbol to be used in displaying the annotation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Caret.SymbolTypeEnum">
                  <summary>Symbol type [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Caret.SymbolTypeEnum.NewParagraph">
                    <summary>New paragraph.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Caret.SymbolTypeEnum.None">
                    <summary>None.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.DualWidget">
                <summary>Dual-state widget annotation.</summary>
                <remarks>As its name implies, it has two states: on and off.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Widget">
                <summary>Widget annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Widget.ToCode(org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Widget.ToHighlightModeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the highlighting mode corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Widget.AppearanceCharacteristics">
                  <summary>Gets/Sets the annotation's appearance characteristics to be used for its visual
                  presentation on the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Widget.HighlightMode">
                  <summary>Gets/Sets the annotation's highlighting mode, the visual effect to be used
                  when the mouse button is pressed or held down inside its active area.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum">
                  <summary>Highlighting mode [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum.None">
                    <summary>No highlighting.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum.Invert">
                    <summary>Invert the contents of the annotation rectangle.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum.Outline">
                    <summary>Invert the annotation's border.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum.Push">
                    <summary>Display the annotation's down appearance.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Widget.HighlightModeEnum.Toggle">
                    <summary>Same as Push (which is preferred).</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.DualWidget.#ctor(org.pdfclown.documents.Page,System.Drawing.RectangleF,System.String)">
                  <param name="widgetName">Widget name. It corresponds to the on-state name.</param>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Ellipse">
                <summary>Circle annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents an ellipse to display on a page.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Shape">
                <summary>Abstract shape annotation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Shape.FillColor">
                  <summary>Gets/Sets the color with which to fill the interior of the annotation's shape.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.FileAttachment">
                <summary>File attachment annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents a reference to a file, which typically is embedded in the PDF file.
                </remarks>
        </member>
        <member name="T:org.pdfclown.documents.files.IFileResource">
                <summary>File resource.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.IFileResource.DataFile">
                  <summary>Gets/Sets the file containing the object data.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.FileAttachment.ToCode(org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.FileAttachment.ToIconTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the icon type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.FileAttachment.IconType">
                  <summary>Gets/Sets the icon to be used in displaying the annotation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum">
                  <summary>Icon to be used in displaying the annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum.Graph">
                    <summary>Graph.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum.PaperClip">
                    <summary>Paper clip.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum.PushPin">
                    <summary>Push pin.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.FileAttachment.IconTypeEnum.Tag">
                    <summary>Tag.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Line">
                <summary>Line annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays displays a single straight line on the page.
                When opened, it displays a pop-up window containing the text of the associated note.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Line.ToCode(org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Line.ToLineEndStyleEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the line ending style corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.CaptionVisible">
                  <summary>Gets/Sets whether the contents should be shown as a caption.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.EndPoint">
                  <summary>Gets/Sets the ending coordinates.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.EndStyle">
                  <summary>Gets/Sets the style of the ending line ending.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.FillColor">
                  <summary>Gets/Sets the color with which to fill the interior of the annotation's line endings.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.LeaderLineExtensionLength">
                  <summary>Gets/Sets the length of leader line extensions that extend
                  in the opposite direction from the leader lines.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.LeaderLineLength">
                  <summary>Gets/Sets the length of leader lines that extend from each endpoint
                  of the line perpendicular to the line itself.</summary>
                  <remarks>A positive value means that the leader lines appear in the direction
                  that is clockwise when traversing the line from its starting point
                  to its ending point; a negative value indicates the opposite direction.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.StartPoint">
                  <summary>Gets/Sets the starting coordinates.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Line.StartStyle">
                  <summary>Gets/Sets the style of the starting line ending.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum">
                  <summary>Line ending style [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.Square">
                    Square.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.Circle">
                    Circle.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.Diamond">
                    Diamond.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.OpenArrow">
                    Open arrow.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.ClosedArrow">
                    Closed arrow.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.None">
                    None.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.Butt">
                    Butt.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.ReverseOpenArrow">
                    Reverse open arrow.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.ReverseClosedArrow">
                    Reverse closed arrow.
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Line.LineEndStyleEnum.Slash">
                    Slash.
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Link">
                <summary>Link annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents either a hypertext link to a destination elsewhere in the document
                or an action to be performed.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.ILink">
                <summary>Link.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.ILink.Target">
                  <summary>Gets/Sets the link target.</summary>
                  <returns>Either a <see cref="T:org.pdfclown.documents.interaction.navigation.document.Destination"/> or an <see cref="T:org.pdfclown.documents.interaction.actions.Action"/>.</returns>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Note">
                <summary>Text annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents a sticky note attached to a point in the PDF document.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Note.ToCode(org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Note.ToIconTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the icon type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Note.IconType">
                  <summary>Gets/Sets the icon to be used in displaying the annotation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Note.IsOpen">
                  <summary>Gets/Sets whether the annotation should initially be displayed open.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum">
                  <summary>Icon to be used in displaying the annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Comment">
                    <summary>Comment.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Help">
                    <summary>Help.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Insert">
                    <summary>Insert.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Key">
                    <summary>Key.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.NewParagraph">
                    <summary>New paragraph.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Note">
                    <summary>Note.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Note.IconTypeEnum.Paragraph">
                    <summary>Paragraph.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Polygon">
                <summary>Polygon annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents a closed polygon to display on a page.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.VertexShape">
                <summary>Abstract vertexed shape annotation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.VertexShape.Vertices">
                  <summary>Gets/Sets the coordinates of each vertex.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Polyline">
                <summary>Polyline annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents a (possibly-open) polygon to display on a page.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Popup">
                <summary>Pop-up annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays text in a pop-up window for entry and editing.
                It typically does not appear alone but is associated with a markup annotation,
                its parent annotation, and is used for editing the parent's text.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Popup.IsOpen">
                  <summary>Gets/Sets whether the annotation should initially be displayed open.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Popup.Parent">
                  <summary>Gets/Sets the parent annotation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Rectangle">
                <summary>Square annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It represents a rectangle to display on a page.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.RubberStamp">
                <summary>Rubber stamp annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays text or graphics intended to look as if they were stamped
                on the page with a rubber stamp.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.RubberStamp.ToCode(org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.RubberStamp.ToIconTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the icon type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.RubberStamp.IconType">
                  <summary>Gets/Sets the icon to be used in displaying the annotation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum">
                  <summary>Icon to be used in displaying the annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Approved">
                    <summary>Approved.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.AsIs">
                    <summary>As is.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Confidential">
                    <summary>Confidential.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Departmental">
                    <summary>Departmental.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Draft">
                    <summary>Draft.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Experimental">
                    <summary>Experimental.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Expired">
                    <summary>Expired.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Final">
                    <summary>Final.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.ForComment">
                    <summary>For comment.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.ForPublicRelease">
                    <summary>For public release.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.NotApproved">
                    <summary>Not approved.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.NotForPublicRelease">
                    <summary>Not for public release.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.Sold">
                    <summary>Sold.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.RubberStamp.IconTypeEnum.TopSecret">
                    <summary>Top secret.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Scribble">
                <summary>Freehand "scribble" composed of one or more disjoint paths [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Scribble.Paths">
                  <summary>Gets/Sets the coordinates of each path.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.TextMarkup">
                <summary>Text markup annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It displays highlights, underlines, strikeouts, or jagged ("squiggly") underlines in
                the text of a document.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.TextMarkup.ToCode(org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.TextMarkup.ToMarkupTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the markup type corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.TextMarkup.#ctor(org.pdfclown.documents.Page,System.String,org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum,org.pdfclown.util.math.geom.Quad)">
                  <summary>Creates a new text markup on the specified page, making it printable by default.
                  </summary>
                  <param name="page">Page to annotate.</param>
                  <param name="text">Annotation text.</param>
                  <param name="markupType">Markup type.</param>
                  <param name="markupBox">Quadrilateral encompassing a word or group of contiguous words in the
                  text underlying the annotation.</param>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.TextMarkup.#ctor(org.pdfclown.documents.Page,System.String,org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum,System.Collections.Generic.IList{org.pdfclown.util.math.geom.Quad})">
                  <summary>Creates a new text markup on the specified page, making it printable by default.
                  </summary>
                  <param name="page">Page to annotate.</param>
                  <param name="text">Annotation text.</param>
                  <param name="markupType">Markup type.</param>
                  <param name="markupBoxes">Quadrilaterals encompassing a word or group of contiguous words in
                  the text underlying the annotation.</param>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupBoxes">
                  <summary>Gets/Sets the quadrilaterals encompassing a word or group of contiguous words in the
                  text underlying the annotation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupType">
                  <summary>Gets/Sets the markup type.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum">
                  <summary>Markup type [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum.Highlight">
                    <summary>Highlight.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum.Squiggly">
                    <summary>Squiggly.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum.StrikeOut">
                    <summary>StrikeOut.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.TextMarkup.MarkupTypeEnum.Underline">
                    <summary>Underline.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.WidgetActions">
                <summary>Widget actions [PDF:1.6:8.5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.WidgetActions.OnBlur">
                  <summary>Gets/Sets the action to be performed when the annotation loses the input focus.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.WidgetActions.OnFocus">
                  <summary>Gets/Sets the action to be performed when the annotation receives the input focus.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.styles.DefaultStyle">
                <summary>Default field appearance style.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.styles.FieldStyle">
                <summary>Abstract field appearance style.</summary>
                <remarks>It automates the definition of field appearance, applying a common look.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ButtonField">
                <summary>Button field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.Field">
                <summary>Interactive form field [PDF:1.6:8.6.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.Field.Wrap(org.pdfclown.objects.PdfReference)">
                  <summary>Wraps a field reference into a field object.</summary>
                  <param name="reference">Reference to a field object.</param>
                  <returns>Field object associated to the reference.</returns>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.Field.#ctor(org.pdfclown.objects.PdfName,System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new field within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Actions">
                  <summary>Gets/Sets the field's behavior in response to trigger events.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.DefaultValue">
                  <summary>Gets the default value to which this field reverts when a <see cref="!:ResetForm">reset
                  -form</see> action} is executed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Exportable">
                  <summary>Gets/Sets whether the field is exported by a submit-form action.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Flags">
                  <summary>Gets/Sets the field flags.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.FullName">
                  <summary>Gets the fully-qualified field name.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Name">
                  <summary>Gets/Sets the partial field name.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.ReadOnly">
                  <summary>Gets/Sets whether the user may not change the value of the field.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Required">
                  <summary>Gets/Sets whether the field must have a value at the time it is exported by a
                  submit-form action.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Value">
                  <summary>Gets/Sets the field value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Field.Widgets">
                  <summary>Gets the widget annotations that are associated with this field.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.Field.FlagsEnum">
                  <summary>Field flags [PDF:1.6:8.6.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.ReadOnly">
                    <summary>The user may not change the value of the field.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Required">
                    <summary>The field must have a value at the time it is exported by a submit-form action.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.NoExport">
                    <summary>The field must not be exported by a submit-form action.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Multiline">
                    <summary>(Text fields only) The field can contain multiple lines of text.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Password">
                    <summary>(Text fields only) The field is intended for entering a secure password
                    that should not be echoed visibly to the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.NoToggleToOff">
                    <summary>(Radio buttons only) Exactly one radio button must be selected at all times.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Radio">
                    <summary>(Button fields only) The field is a set of radio buttons (otherwise, a check box).</summary>
                    <remarks>This flag is meaningful only if the Pushbutton flag isn't selected.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Pushbutton">
                    <summary>(Button fields only) The field is a pushbutton that does not retain a permanent value.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Combo">
                    <summary>(Choice fields only) The field is a combo box (otherwise, a list box).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Edit">
                    <summary>(Choice fields only) The combo box includes an editable text box as well as a dropdown list
                    (otherwise, it includes only a drop-down list).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Sort">
                    <summary>(Choice fields only) The field's option items should be sorted alphabetically.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.FileSelect">
                    <summary>(Text fields only) Text entered in the field represents the pathname of a file
                    whose contents are to be submitted as the value of the field.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.MultiSelect">
                    <summary>(Choice fields only) More than one of the field's option items may be selected simultaneously.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.DoNotSpellCheck">
                    <summary>(Choice and text fields only) Text entered in the field is not spell-checked.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.DoNotScroll">
                    <summary>(Text fields only) The field does not scroll to accommodate more text
                    than fits within its annotation rectangle.</summary>
                    <remarks>Once the field is full, no further text is accepted.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.Comb">
                    <summary>(Text fields only) The field is automatically divided into as many equally spaced positions,
                    or combs, as the value of MaxLen, and the text is laid out into those combs.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.RichText">
                    <summary>(Text fields only) The value of the field should be represented as a rich text string.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.RadiosInUnison">
                    <summary>(Button fields only) A group of radio buttons within a radio button field that use
                    the same value for the on state will turn on and off in unison
                    (otherwise, the buttons are mutually exclusive).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.forms.Field.FlagsEnum.CommitOnSelChange">
                    <summary>(Choice fields only) The new value is committed as soon as a selection is made with the pointing device.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.ButtonField.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new button field within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.CheckBox">
                <summary>Check box field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.CheckBox.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget,System.Boolean)">
                  <summary>Creates a new checkbox within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ChoiceField">
                <summary>Choice field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.ChoiceField.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new choice field within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ChoiceField.MultiSelect">
                  <summary>Gets/Sets whether more than one of the field's items may be selected simultaneously.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ChoiceField.ValidatedOnChange">
                  <summary>Gets/Sets whether validation action is triggered as soon as a selection is made,
                  without requiring the user to exit the field.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ChoiceItem">
                <summary>Field option [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ChoiceItem.Text">
                  <summary>Gets/Sets the displayed text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ChoiceItem.Value">
                  <summary>Gets/Sets the export value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ChoiceItems">
                <summary>Field options [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ComboBox">
                <summary>Combo box [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.ComboBox.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new combobox within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ComboBox.Editable">
                  <summary>Gets/Sets whether the text is editable.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.ComboBox.SpellChecked">
                  <summary>Gets/Sets whether the edited text is spell checked.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.FieldActions">
                <summary>Form field actions [PDF:1.6:8.5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.FieldActions.OnCalculate">
                  <summary>Gets/Sets a JavaScript action to be performed to recalculate the value
                  of this field when that of another field changes.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.FieldActions.OnChange">
                  <summary>Gets/Sets a JavaScript action to be performed when the user types a keystroke
                  into a text field or combo box or modifies the selection in a scrollable list box.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.FieldActions.OnFormat">
                  <summary>Gets/Sets a JavaScript action to be performed before the field is formatted
                  to display its current value.</summary>
                  <remarks>This action can modify the field's value before formatting.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.FieldActions.OnValidate">
                  <summary>Gets/Sets a JavaScript action to be performed when the field's value is changed.</summary>
                  <remarks>This action can check the new value for validity.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.Fields">
                <summary>Interactive form fields [PDF:1.6:8.6.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.FieldWidgets">
                <summary>Field widget annotations [PDF:1.6:8.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.FieldWidgets.Field">
                  <summary>Gets the field associated to these widgets.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.Form">
                <summary>Interactive form (AcroForm) [PDF:1.6:8.6.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Form.Fields">
                  <summary>Gets/Sets the fields collection.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.Form.Resources">
                  <summary>Gets/Sets the default resources used by fields.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.ListBox">
                <summary>List box [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.ListBox.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new listbox within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.PushButton">
                <summary>Pushbutton field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.PushButton.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget,System.String)">
                  <summary>Creates a new pushbutton within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.RadioButton">
                <summary>Radio button field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.RadioButton.#ctor(System.String,org.pdfclown.documents.interaction.annotations.DualWidget[],System.String)">
                  <summary>Creates a new radiobutton within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.RadioButton.Toggleable">
                  <summary>Gets/Sets whether all the field buttons can be deselected at the same time.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.SignatureField">
                <summary>Signature field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.SignatureField.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget)">
                  <summary>Creates a new signature field within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.forms.TextField">
                <summary>Text field [PDF:1.6:8.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.forms.TextField.#ctor(System.String,org.pdfclown.documents.interaction.annotations.Widget,System.String)">
                  <summary>Creates a new text field within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.TextField.IsMultiline">
                  <summary>Gets/Sets whether the field can contain multiple lines of text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.TextField.IsPassword">
                  <summary>Gets/Sets whether the field is intended for entering a secure password.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.TextField.Justification">
                  <summary>Gets/Sets the justification to be used in displaying this field's text.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.TextField.MaxLength">
                  <summary>Gets/Sets the maximum length of the field's text, in characters.</summary>
                  <remarks>It corresponds to the maximum integer value in case no explicit limit is defined.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.forms.TextField.SpellChecked">
                  <summary>Gets/Sets whether text entered in the field is spell-checked.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.Bookmark">
                <summary>Outline item [PDF:1.6:8.2.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Bookmarks">
                  <summary>Gets the child bookmarks.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Color">
                  <summary>Gets/Sets the bookmark text color.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Expanded">
                  <summary>Gets/Sets whether this bookmark's children are displayed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Flags">
                  <summary>Gets/Sets the bookmark flags.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Parent">
                  <summary>Gets the parent bookmark.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Bookmark.Title">
                  <summary>Gets/Sets the text to be displayed for this bookmark.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.Bookmark.FlagsEnum">
                  <summary>Bookmark flags [PDF:1.6:8.2.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Bookmark.FlagsEnum.Italic">
                    <summary>Display the item in italic.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Bookmark.FlagsEnum.Bold">
                    <summary>Display the item in bold.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.Bookmarks">
                <summary>Collection of bookmarks [PDF:1.6:8.2.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.document.Bookmarks.EnsureCountObject">
                  <summary>Gets the count object, forcing its creation if it doesn't
                  exist.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.Destination">
                <summary>Interaction target [PDF:1.6:8.2.1].</summary>
                <remarks>
                  It represents a particular view of a document, consisting of the following items:
                  <list type="bullet">
                    <item>the page of the document to be displayed;</item>
                    <item>the location of the document window on that page;</item>
                    <item>the magnification (zoom) factor to use when displaying the page.</item>
                  </list>
                </remarks>
        </member>
        <member name="T:org.pdfclown.objects.IPdfNamedObjectWrapper">
                <summary>High-level representation of a PDF object that can be referenced also through a name.
                </summary>
                <remarks>
                  <para>Some categories of objects in a PDF file can be also referred to by name rather than by
                  object reference. The correspondence between names and objects is established by the document's
                  name dictionary [PDF:1.6:3.6.3].</para>
                  <para>The name's purpose is to provide a further level of referential abstraction especially
                  for references across diverse PDF documents.</para>
                </remarks>
        </member>
        <member name="P:org.pdfclown.objects.IPdfNamedObjectWrapper.Name">
                  <summary>Gets the object name.</summary>
                  <remarks>As names are tipically loosely-coupled with their corresponding PDF objects, name
                  retrieval implies a costly reverse lookup into the document's name tree.</remarks>
        </member>
        <member name="P:org.pdfclown.objects.IPdfNamedObjectWrapper.NamedBaseObject">
                  <summary>Gets the object name, if available; otherwise, behaves like
                  <see cref="P:org.pdfclown.objects.IPdfObjectWrapper.BaseObject">BaseObject</see>.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.document.Destination.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a destination base object into a destination object.</summary>
                  <param name="baseObject">Destination base object.</param>
                  <returns>Destination object associated to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.document.Destination.#ctor(org.pdfclown.documents.Document,System.Object,org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum,System.Object,System.Nullable{System.Double})">
                  <summary>Creates a new destination within the given document context.</summary>
                  <param name="context">Document context.</param>
                  <param name="page">Page reference. It may be either a <see cref="P:org.pdfclown.documents.interaction.navigation.document.Destination.Page"/> or a page index (int).
                  </param>
                  <param name="mode">Destination mode.</param>
                  <param name="location">Destination location.</param>
                  <param name="zoom">Magnification factor to use when displaying the page.</param>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Destination.Location">
                  <summary>Gets/Sets the page location.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Destination.Mode">
                  <summary>Gets the destination mode.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Destination.Page">
                  <summary>Gets/Sets the target page reference.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.Destination.Zoom">
                  <summary>Gets the magnification factor to use when displaying the page.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum">
                  <summary>Destination mode [PDF:1.6:8.2.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.XYZ">
                    <summary>Display the page at the given upper-left position,
                    applying the given magnification.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>left coordinate</item>
                        <item>top coordinate</item>
                        <item>zoom</item>
                      </list>
                    </remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.Fit">
                    <summary>Display the page with its contents magnified just enough to fit
                    the entire page within the window both horizontally and vertically.</summary>
                    <remarks>No view parameters.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitHorizontal">
                    <summary>Display the page with the vertical coordinate <code>top</code> positioned
                    at the top edge of the window and the contents of the page magnified
                    just enough to fit the entire width of the page within the window.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>top coordinate</item>
                      </list>
                    </remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitVertical">
                    <summary>Display the page with the horizontal coordinate <code>left</code> positioned
                    at the left edge of the window and the contents of the page magnified
                    just enough to fit the entire height of the page within the window.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>left coordinate</item>
                      </list>
                    </remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitRectangle">
                    <summary>Display the page with its contents magnified just enough to fit
                    the rectangle specified by the given coordinates entirely
                    within the window both horizontally and vertically.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>left coordinate</item>
                        <item>bottom coordinate</item>
                        <item>right coordinate</item>
                        <item>top coordinate</item>
                      </list>
                    </remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitBoundingBox">
                    <summary>Display the page with its contents magnified just enough to fit
                    its bounding box entirely within the window both horizontally and vertically.</summary>
                    <remarks>No view parameters.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitBoundingBoxHorizontal">
                    <summary>Display the page with the vertical coordinate <code>top</code> positioned
                    at the top edge of the window and the contents of the page magnified
                    just enough to fit the entire width of its bounding box within the window.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>top coordinate</item>
                      </list>
                    </remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.document.Destination.ModeEnum.FitBoundingBoxVertical">
                    <summary>Display the page with the horizontal coordinate <code>left</code> positioned
                    at the left edge of the window and the contents of the page magnified
                    just enough to fit the entire height of its bounding box within the window.</summary>
                    <remarks>
                      View parameters:
                      <list type="number">
                        <item>left coordinate</item>
                      </list>
                    </remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.LocalDestination">
                <summary>Local interaction target [PDF:1.6:8.2.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.LocalDestination.Page">
                  <summary>Gets/Sets the target page.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.document.RemoteDestination">
                <summary>Remote interaction target [PDF:1.6:8.2.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.document.RemoteDestination.Page">
                  <summary>Gets/Sets the index of the target page.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Transition">
                <summary>Visual transition to use when moving to a page during a presentation [PDF:1.6:8.3.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToCode(org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToCode(org.pdfclown.documents.interaction.navigation.page.Transition.OrientationEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToCode(org.pdfclown.documents.interaction.navigation.page.Transition.PageDirectionEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToCode(org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToDirectionEnum(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Gets the direction corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToOrientationEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the orientation corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToPageDirectionEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the page direction corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.ToStyleEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the style corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Transition.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.Direction">
                  <summary>Gets/Sets the transition direction.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.Duration">
                  <summary>Gets/Sets the duration of the transition effect, in seconds.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.Orientation">
                  <summary>Gets/Sets the transition orientation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.PageDirection">
                  <summary>Gets/Sets the transition direction on page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.Scale">
                  <summary>Gets/Sets the scale at which the changes are drawn.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Transition.Style">
                  <summary>Gets/Sets the transition style.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum">
                  <summary>Transition direction (counterclockwise) [PDF:1.6:8.3.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.LeftToRight">
                    <summary>Left to right.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.BottomToTop">
                    <summary>Bottom to top.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.RightToLeft">
                    <summary>Right to left.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.TopToBottom">
                    <summary>Top to bottom.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.TopLeftToBottomRight">
                    <summary>Top-left to bottom-right.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.DirectionEnum.None">
                    <summary>None.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Transition.OrientationEnum">
                  <summary>Transition orientation [PDF:1.6:8.3.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.OrientationEnum.Horizontal">
                    <summary>Horizontal.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.OrientationEnum.Vertical">
                    <summary>Vertical.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Transition.PageDirectionEnum">
                  <summary>Transition direction on page [PDF:1.6:8.3.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.PageDirectionEnum.Inward">
                    <summary>Inward (from the edges of the page).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.PageDirectionEnum.Outward">
                    <summary>Outward (from the center of the page).</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum">
                  <summary>Transition style [PDF:1.6:8.3.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Split">
                    <summary>Two lines sweep across the screen, revealing the page.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Blinds">
                    <summary>Multiple lines sweep across the screen, revealing the page.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Box">
                    <summary>A rectangular box sweeps between the edges of the page and the center.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Wipe">
                    <summary>A single line sweeps across the screen from one edge to the other.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Dissolve">
                    <summary>The old page dissolves gradually.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Glitter">
                    <summary>The old page dissolves gradually sweeping across the page in a wide band
                    moving from one side of the screen to the other.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Replace">
                    <summary>No transition.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Fly">
                    <summary>Changes are flown across the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Push">
                    <summary>The page slides in, pushing away the old one.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Cover">
                    <summary>The page slides on to the screen, covering the old one.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Uncover">
                    <summary>The old page slides off the screen, uncovering the new one.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.Transition.StyleEnum.Fade">
                    <summary>The new page reveals gradually.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.viewer.ViewerPreferences">
                <summary>Viewer preferences [PDF:1.6:8.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.viewer.ViewerPreferences.ToCode(org.pdfclown.documents.interaction.viewer.ViewerPreferences.DirectionEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.viewer.ViewerPreferences.ToDirectionEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the direction corresponding to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.viewer.ViewerPreferences.DirectionEnum">
                  <summary>Predominant reading order for text [PDF:1.6:8.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.viewer.ViewerPreferences.DirectionEnum.LeftToRight">
                    <summary>Left to right.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.viewer.ViewerPreferences.DirectionEnum.RightToLeft">
                    <summary>Right to left.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interchange.metadata.Information">
                <summary>Document information [PDF:1.6:10.2.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.Movie">
                <summary>Movie object [PDF:1.6:9.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.multimedia.Movie.#ctor(org.pdfclown.documents.Document,org.pdfclown.documents.files.FileSpecification)">
                  <summary>Creates a new movie within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.Sound">
                <summary>Sound object [PDF:1.6:9.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.multimedia.Sound.#ctor(org.pdfclown.documents.Document,org.pdfclown.bytes.IInputStream)">
                  <summary>Creates a new sound within the given document context.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document">
                <summary>PDF document [PDF:1.6::3.6.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.Document.Exclude(org.pdfclown.objects.PdfObjectWrapper)">
                  <summary>Deletes the object from this document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Document.Exclude``1(System.Collections.Generic.ICollection{``0})">
                  <summary>Deletes the objects from this document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Document.GetSize">
                  <summary>Gets the document size, that is the maximum page dimensions across the whole document.
                  </summary>
                  <seealso cref="P:org.pdfclown.documents.Document.PageSize"/>
        </member>
        <member name="M:org.pdfclown.documents.Document.Include(org.pdfclown.objects.PdfObjectWrapper)">
                  <summary>Clones the object within this document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Document.Include``1(System.Collections.Generic.ICollection{``0})">
                  <summary>Clones the collection objects within this document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Document.ResolveName``1(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Forces a named base object to be expressed as its corresponding high-level
                  representation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Actions">
                  <summary>Gets/Sets the document's behavior in response to trigger events.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Articles">
                  <summary>Gets the article threads.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Bookmarks">
                  <summary>Gets/Sets the bookmark collection.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Configuration">
                  <summary>Gets/Sets the configuration of this document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Form">
                  <summary>Gets/Sets the interactive form (AcroForm).</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Information">
                  <summary>Gets/Sets common document metadata.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Layer">
                  <summary>Gets/Sets the optional content properties.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Names">
                  <summary>Gets/Sets the name dictionary.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.PageLabels">
                  <summary>Gets/Sets the page label ranges.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.PageLayout">
                  <summary>Gets/Sets the page layout to be used when the document is opened.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.PageMode">
                  <summary>Gets/Sets the page mode, that is how the document should be displayed when is opened.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Pages">
                  <summary>Gets/Sets the page collection.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.PageSize">
                  <summary>Gets/Sets the default page size [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.Resources">
                  <summary>Gets/Sets the default resource collection [PDF:1.6:3.6.2].</summary>
                  <remarks>The default resource collection is used as last resort by every page that doesn't
                  reference one explicitly (and doesn't reference an intermediate one implicitly).</remarks>
        </member>
        <member name="P:org.pdfclown.documents.Document.Version">
                  <summary>Gets/Sets the version of the PDF specification this document conforms to.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.ViewerPreferences">
                  <summary>Gets the way the document is to be presented.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.MediaBox">
                  <summary>Gets the default media box.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document.ConfigurationImpl">
                  <summary>Document configuration.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.ConfigurationImpl.CompatibilityMode">
                    <summary>Gets the document's version compatibility mode.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.ConfigurationImpl.Document">
                    <summary>Gets the document associated with this configuration.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Document.ConfigurationImpl.XrefMode">
                    <summary>Gets the document's cross-reference mode.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document.ConfigurationImpl.CompatibilityModeEnum">
                    <summary>Version compatibility mode.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.ConfigurationImpl.CompatibilityModeEnum.Passthrough">
                      <summary>Document's conformance version is ignored;
                      any feature is accepted without checking its compatibility.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.ConfigurationImpl.CompatibilityModeEnum.Loose">
                      <summary>Document's conformance version is automatically updated
                      to support used features.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.ConfigurationImpl.CompatibilityModeEnum.Strict">
                      <summary>Document's conformance version is mandatory;
                      any unsupported feature is forbidden and causes an exception
                      to be thrown in case of attempted use.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document.ConfigurationImpl.XRefModeEnum">
                    <summary>Cross-reference mode [PDF:1.6:3.4].</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.ConfigurationImpl.XRefModeEnum.Plain">
                      <summary>Cross-reference table [PDF:1.6:3.4.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.ConfigurationImpl.XRefModeEnum.Compressed">
                      <summary>Cross-reference stream [PDF:1.6:3.4.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document.PageLayoutEnum">
                  <summary>Page layout to be used when the document is opened [PDF:1.6:3.6.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.SinglePage">
                    <summary>Displays one page at a time.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.OneColumn">
                    <summary>Displays the pages in one column.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.TwoColumnLeft">
                    <summary>Displays the pages in two columns, with odd-numbered pages on the left.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.TwoColumnRight">
                    <summary>Displays the pages in two columns, with odd-numbered pages on the right.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.TwoPageLeft">
                    <summary>Displays the pages two at a time, with odd-numbered pages on the left.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageLayoutEnum.TwoPageRight">
                    <summary>Displays the pages two at a time, with odd-numbered pages on the right.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Document.PageModeEnum">
                  <summary>Page mode specifying how the document should be displayed when opened [PDF:1.6:3.6.1].
                  </summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.Simple">
                    <summary>Neither document outline nor thumbnail images visible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.Bookmarks">
                    <summary>Document outline visible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.Thumbnails">
                    <summary>Thumbnail images visible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.FullScreen">
                    <summary>Full-screen mode, with no menu bar, window controls, or any other window visible.
                    </summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.Layers">
                    <summary>Optional content group panel visible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Document.PageModeEnum.Attachments">
                    <summary>Attachments panel visible.</summary>
        </member>
        <member name="T:org.pdfclown.documents.DocumentActions">
                <summary>Document actions [PDF:1.6:8.5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.AfterPrint">
                  <summary>Gets/Sets the action to be performed after printing the document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.AfterSave">
                  <summary>Gets/Sets the action to be performed after saving the document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.BeforePrint">
                  <summary>Gets/Sets the action to be performed before printing the document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.BeforeSave">
                  <summary>Gets/Sets the action to be performed before saving the document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.OnClose">
                  <summary>Gets/Sets the action to be performed before closing the document.</summary>
        </member>
        <member name="P:org.pdfclown.documents.DocumentActions.OnOpen">
                  <summary>Gets/Sets the destination to be displayed or the action to be performed
                  after opening the document.</summary>
        </member>
        <member name="T:org.pdfclown.documents.NamedDestinations">
                <summary>Named destinations [PDF:1.6:3.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.objects.NameTree`1">
                <summary>Name tree [PDF:1.7:3.8.5].</summary>
        </member>
        <member name="T:org.pdfclown.objects.Tree`2">
                <summary>Abstract tree [PDF:1.7:3.8.5].</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.TreeLowOrder">
                  Minimum number of items in non-root nodes.
                  Note that the tree (high) order is assumed twice as much (<see cref="!:Children.Info.Info(int, int)"/>.
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.GetKey(`1)">
                  Gets the key associated to the specified value.
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.WrapValue(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a base object within its corresponding high-level representation.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Add(`0,`1,System.Boolean)">
                  <summary>Adds an entry into the tree.</summary>
                  <param name="key">New entry's key.</param>
                  <param name="value">New entry's value.</param>
                  <param name="overwrite">Whether the entry is allowed to replace an existing one having the same
                  key.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Add(`0,`1,System.Boolean,org.pdfclown.objects.PdfDictionary)">
                  <summary>Adds an entry under the given tree node.</summary>
                  <param name="key">New entry's key.</param>
                  <param name="value">New entry's value.</param>
                  <param name="overwrite">Whether the entry is allowed to replace an existing one having the same
                  key.</param>
                  <param name="nodeReference">Current node reference.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Clear(org.pdfclown.objects.PdfDictionary)">
                  <summary>Removes all the given node's children.</summary>
                  <remarks>
                    <para>As this method doesn't apply balancing, it's suitable for clearing root nodes only.
                    </para>
                    <para>Removal affects only tree nodes: referenced objects are preserved to avoid inadvertently
                    breaking possible references to them from somewhere else.</para>
                  </remarks>
                  <param name="node">Current node.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.GetCount(org.pdfclown.objects.PdfDictionary)">
                  <summary>Gets the given node's entries count.</summary>
                  <param name="node">Current node.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.SplitFullNode(org.pdfclown.objects.PdfArray,System.Int32,org.pdfclown.objects.PdfName)">
                  <summary>Splits a full node.</summary>
                  <remarks>A new node is inserted at the full node's position, receiving the lower half of its
                  children.</remarks>
                  <param name="nodes">Parent nodes.</param>
                  <param name="fullNodeIndex">Full node's position among the parent nodes.</param>
                  <param name="childrenTypeName">Full node's children type.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.UpdateNodeLimits(org.pdfclown.objects.Tree{`0,`1}.Children)">
                  <summary>Sets the key limits of the given node.</summary>
                  <param name="children">Node children.</param>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.UpdateNodeLimits(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfArray,org.pdfclown.objects.PdfName)">
                  <summary>Sets the key limits of the given node.</summary>
                  <param name="node">Node to update.</param>
                  <param name="children">Node children.</param>
                  <param name="childrenTypeName">Node's children type.</param>
        </member>
        <member name="P:org.pdfclown.objects.Tree`2.PairsKey">
                  <summary>Gets the name of the key-value pairs entries.</summary>
        </member>
        <member name="T:org.pdfclown.objects.Tree`2.Children">
                  Node children.
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.Get(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName)">
                    <summary>Gets the given node's children.</summary>
                    <param name="node">Parent node.</param>
                    <param name="pairs">Pairs key.</param>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.Items">
            Children's collection 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.Info">
            Node's children info. 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.Parent">
            Parent node. 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.TypeName">
            Node's children type. 
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.IsFull">
                    <summary>Gets whether the collection size has reached its maximum.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.IsLeaf">
                    <summary>Gets whether this collection represents a leaf node.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.IsOversized">
                    <summary>Gets whether the collection size is more than its maximum.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.IsUndersized">
                    <summary>Gets whether the collection size is less than its minimum.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Tree`2.Children.IsValid">
                    <summary>Gets whether the collection size is within the order limits.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.InfoImpl.ItemCount">
            Number of (contiguous) children defining an item. 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.InfoImpl.MaxCount">
            Maximum number of children. 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Children.InfoImpl.MinCount">
            Minimum number of children. 
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.current">
                    <summary>Current named object.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.levelIndex">
                    <summary>Current level index.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.levels">
                    <summary>Stacked levels.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.kids">
                    <summary>Current child tree nodes.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.names">
                    <summary>Current names.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.container">
                    <summary>Current container.</summary>
        </member>
        <member name="F:org.pdfclown.objects.Tree`2.Enumerator.tree">
                    <summary>Name tree.</summary>
        </member>
        <member name="T:org.pdfclown.documents.NamedEmbeddedFiles">
                <summary>Named embedded files [PDF:1.6:3.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.Names">
                <summary>Name dictionary [PDF:1.6:3.6.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.Names.Destinations">
                  <summary>Gets/Sets the named destinations.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Names.EmbeddedFiles">
                  <summary>Gets/Sets the named embedded files.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Names.JavaScripts">
                  <summary>Gets/Sets the named JavaScript actions.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Names.Renditions">
                  <summary>Gets/Sets the named renditions.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Page">
                <summary>Document page [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.Page.GetInheritableAttribute(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName)">
                  <summary>Gets the attribute value corresponding to the specified key, possibly recurring to
                  its ancestor nodes in the page tree.</summary>
                  <param name="pageObject">Page object.</param>
                  <param name="key">Attribute key.</param>
        </member>
        <member name="M:org.pdfclown.documents.Page.ToCode(org.pdfclown.documents.Page.TabOrderEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Page.ToTabOrderEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the tab order corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.Page.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new page within the specified document context, using the default size.
                  </summary>
                  <param name="context">Document where to place this page.</param>
        </member>
        <member name="M:org.pdfclown.documents.Page.#ctor(org.pdfclown.documents.Document,System.Nullable{System.Drawing.SizeF})">
                  <summary>Creates a new page within the specified document context.</summary>
                  <param name="context">Document where to place this page.</param>
                  <param name="size">Page size. In case of <code>null</code>, uses the default size.</param>
        </member>
        <member name="P:org.pdfclown.documents.Page.Actions">
                  <summary>Gets/Sets the page's behavior in response to trigger events.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.Annotations">
                  <summary>Gets/Sets the annotations associated to the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.ArtBox">
                  <summary>Gets/Sets the extent of the page's meaningful content (including potential white space)
                  as intended by the page's creator [PDF:1.7:10.10.1].</summary>
                  <seealso cref="P:org.pdfclown.documents.Page.CropBox"/>
        </member>
        <member name="P:org.pdfclown.documents.Page.ArticleElements">
                  <summary>Gets the page article beads.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.BleedBox">
                  <summary>Gets/Sets the region to which the contents of the page should be clipped when output
                  in a production environment [PDF:1.7:10.10.1].</summary>
                  <remarks>
                    <para>This may include any extra bleed area needed to accommodate the physical limitations of
                    cutting, folding, and trimming equipment. The actual printed page may include printing marks
                    that fall outside the bleed box.</para>
                  </remarks>
                  <seealso cref="P:org.pdfclown.documents.Page.CropBox"/>
        </member>
        <member name="P:org.pdfclown.documents.Page.CropBox">
                  <summary>Gets/Sets the region to which the contents of the page are to be clipped (cropped)
                  when displayed or printed [PDF:1.7:10.10.1].</summary>
                  <remarks>
                    <para>Unlike the other boxes, the crop box has no defined meaning in terms of physical page
                    geometry or intended use; it merely imposes clipping on the page contents. However, in the
                    absence of additional information, the crop box determines how the page's contents are to be
                    positioned on the output medium.</para>
                  </remarks>
                  <seealso cref="P:org.pdfclown.documents.Page.Box"/>
        </member>
        <member name="P:org.pdfclown.documents.Page.Duration">
                  <summary>Gets/Sets the page's display duration.</summary>
                  <remarks>
                    <para>The page's display duration (also called its advance timing)
                    is the maximum length of time, in seconds, that the page is displayed
                    during presentations before the viewer application automatically advances
                    to the next page.</para>
                    <para>By default, the viewer does not advance automatically.</para>
                  </remarks>
        </member>
        <member name="P:org.pdfclown.documents.Page.Index">
                  <summary>Gets the index of the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.Size">
                  <summary>Gets/Sets the page size.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.TabOrder">
                  <summary>Gets/Sets the tab order to be used for annotations on the page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.Transition">
                  <summary>Gets the transition effect to be used
                  when displaying the page during presentations.</summary>
        </member>
        <member name="P:org.pdfclown.documents.Page.TrimBox">
                  <summary>Gets/Sets the intended dimensions of the finished page after trimming
                  [PDF:1.7:10.10.1].</summary>
                  <remarks>
                    <para>It may be smaller than the media box to allow for production-related content, such as
                    printing instructions, cut marks, or color bars.</para>
                  </remarks>
                  <seealso cref="P:org.pdfclown.documents.Page.CropBox"/>
        </member>
        <member name="T:org.pdfclown.documents.Page.TabOrderEnum">
                  <summary>Annotations tab order [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.Page.TabOrderEnum.Row">
                    <summary>Row order.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Page.TabOrderEnum.Column">
                    <summary>Column order.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Page.TabOrderEnum.Structure">
                    <summary>Structure order.</summary>
        </member>
        <member name="T:org.pdfclown.documents.PageActions">
                <summary>Page actions [PDF:1.6:8.5.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.PageActions.OnClose">
                  <summary>Gets/Sets the action to be performed when the page is closed.</summary>
        </member>
        <member name="P:org.pdfclown.documents.PageActions.OnOpen">
                  <summary>Gets/Sets the action to be performed when the page is opened.</summary>
        </member>
        <member name="T:org.pdfclown.documents.PageAnnotations">
                <summary>Page annotations [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.PageElements`1">
                <summary>Page elements.</summary>
        </member>
        <member name="T:org.pdfclown.objects.Array`1">
                <summary>Collection of sequentially-arranged object wrappers.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.Wrap``1(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an existing base array using the default wrapper for wrapping its items.
                  </summary>
                  <param name="itemClass">Item class.</param>
                  <param name="baseObject">Base array. MUST be a {@link PdfReference reference} every time
                  available.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.Wrap``1(org.pdfclown.objects.Array{``0}.IWrapper{``0},org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an existing base array using the specified wrapper for wrapping its items.
                  </summary>
                  <param name="itemWrapper">Item wrapper.</param>
                  <param name="baseObject">Base array. MUST be a {@link PdfReference reference} every time
                  available.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.documents.Document)">
                  <summary>Wraps a new base array using the default wrapper for wrapping its items.</summary>
                  <param name="context">Document context.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.Array{`0}.IWrapper{`0})">
                  <summary>Wraps a new base array using the specified wrapper for wrapping its items.</summary>
                  <param name="context">Document context.</param>
                  <param name="itemWrapper">Item wrapper.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.PdfArray)">
                  <summary>Wraps the specified base array using the default wrapper for wrapping its items.</summary>
                  <param name="context">Document context.</param>
                  <param name="baseDataObject">Base array.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.documents.Document,org.pdfclown.objects.Array{`0}.IWrapper{`0},org.pdfclown.objects.PdfArray)">
                  <summary>Wraps the specified base array using the specified wrapper for wrapping its items.</summary>
                  <param name="context">Document context.</param>
                  <param name="itemWrapper">Item wrapper.</param>
                  <param name="baseDataObject">Base array.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an existing base array using the default wrapper for wrapping its items.</summary>
                  <param name="baseObject">Base array. MUST be a <see cref="T:org.pdfclown.objects.PdfReference">reference</see>
                  everytime available.</param>
        </member>
        <member name="M:org.pdfclown.objects.Array`1.#ctor(org.pdfclown.objects.Array{`0}.IWrapper{`0},org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps an existing base array using the specified wrapper for wrapping its items.</summary>
                  <param name="itemWrapper">Item wrapper.</param>
                  <param name="baseObject">Base array. MUST be a <see cref="T:org.pdfclown.objects.PdfReference">reference</see>
                  everytime available.</param>
        </member>
        <member name="T:org.pdfclown.objects.Array`1.IWrapper`1">
                  <summary>Item instancer.</summary>
        </member>
        <member name="P:org.pdfclown.documents.PageElements`1.Page">
                  <summary>Gets the page associated to these elements.</summary>
        </member>
        <member name="T:org.pdfclown.documents.PageFormat">
                <summary>Page format.</summary>
                <remarks>This utility provides an easy access to the dimension of common page formats.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.PageFormat.GetSize">
                  <summary>Gets the default page size.</summary>
                  <remarks>The returned dimension corresponds to the widely-established ISO A4 standard paper
                  format, portrait orientation.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.PageFormat.GetSize(org.pdfclown.documents.PageFormat.SizeEnum)">
                  <summary>Gets the page size of the given format, portrait orientation.</summary>
                  <param name="size">Page size.</param>
        </member>
        <member name="M:org.pdfclown.documents.PageFormat.GetSize(org.pdfclown.documents.PageFormat.SizeEnum,org.pdfclown.documents.PageFormat.OrientationEnum)">
                  <summary>Gets the page size of the given format and orientation.</summary>
                  <param name="size">Page size.</param>
                  <param name="orientation">Page orientation.</param>
        </member>
        <member name="T:org.pdfclown.documents.PageFormat.SizeEnum">
                  <summary>Paper size.</summary>
                  <remarks>
                    References:
                    <list type="bullet">
                      <item>{ 'A' digit+ }: [ISO 216] "A" series: Paper and boards, trimmed sizes.</item>
                      <item>{ 'B' digit+ }: [ISO 216] "B" series: Posters, wall charts and similar items.</item>
                      <item>{ 'C' digit+ }: [ISO 269] "C" series: Envelopes or folders suitable for A-size
                      stationery.</item>
                      <item>{ 'Ansi' letter }: [ANSI/ASME Y14.1] ANSI series: US engineering drawing series.</item>
                      <item>{ 'Arch' letter }: Architectural series.</item>
                      <item>{ "Letter", "Legal", "Executive", "Statement", "Tabloid" }: Traditional north-american
                      sizes.</item>
                    </list>
                  </remarks>
        </member>
        <member name="T:org.pdfclown.documents.PageFormat.OrientationEnum">
                  <summary>Page orientation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.Pages">
                <summary>Document pages collection [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="T:org.pdfclown.util.collections.generic.IExtList`1">
                <summary>Extension list interface.</summary>
        </member>
        <member name="T:org.pdfclown.util.collections.generic.IExtCollection`1">
                <summary>Extension collection interface.</summary>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtCollection`1.AddAll``1(System.Collections.Generic.ICollection{``0})">
                  <summary>Appends all of the specified-collection's items to the end of the list.</summary>
                  <param name="items">Collection of items to append.</param>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtCollection`1.RemoveAll``1(System.Collections.Generic.ICollection{``0})">
                  <summary>Removes all of the specified-collection's items from the list.</summary>
                  <param name="items">Collection of items to remove.</param>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtCollection`1.RemoveAll(System.Predicate{`0})">
                  <summary>Removes all the items that match the conditions defined by the specified
                  predicate.</summary>
                  <param name="match">The <see cref="!:Predicate"/> delegate that defines the conditions of the items
                  to remove.</param>
                  <returns>The number of items removed from the collection.</returns>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtList`1.GetRange(System.Int32,System.Int32)">
                  <summary>Creates a shallow copy of a range of items in the source list.</summary>
                  <param name="index">Lower item index (inclusive) of the copy.</param>
                  <param name="count">Number of items to copy.</param>
                  <returns>Shallow copy of the specified range of items.</returns>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtList`1.GetSlice(System.Int32,System.Int32)">
                  <summary>Creates a shallow copy of a slice of items in the source list.</summary>
                  <param name="fromIndex">Lower item (inclusive) of the copy.</param>
                  <param name="toIndex">Higher item (exclusive) of the copy.</param>
                  <returns>Shallow copy of the specified slice of items.</returns>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.IExtList`1.InsertAll``1(System.Int32,System.Collections.Generic.ICollection{``0})">
                  <summary>Inserts all of the specified-collection's items at the specified position
                  within the list.</summary>
                  <param name="index">Insertion position.</param>
                  <param name="items">Collection of items to insert.</param>
        </member>
        <member name="M:org.pdfclown.documents.Pages.CommonAddAll``1(System.Int32,System.Collections.Generic.ICollection{``0})">
                  Add a collection of pages at the specified position.
                  <param name="index">Addition position. To append, use value -1.</param>
                  <param name="pages">Collection of pages to add.</param>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.count">
                    <summary>Collection size.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.index">
                    <summary>Index of the next item.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.current">
                    <summary>Current page.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.levelIndex">
                    <summary>Current level index.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.levelIndexes">
                    <summary>Stacked level indexes.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.kids">
                    <summary>Current child tree nodes.</summary>
        </member>
        <member name="F:org.pdfclown.documents.Pages.Enumerator.parent">
                    <summary>Current parent tree node.</summary>
        </member>
        <member name="T:org.pdfclown.files.File">
                <summary>PDF file representation.</summary>
        </member>
        <member name="M:org.pdfclown.files.File.Register(org.pdfclown.objects.PdfDataObject)">
                  <summary>Registers an <b>internal data object</b>.</summary>
        </member>
        <member name="M:org.pdfclown.files.File.Save">
                  <summary>Serializes the file to the current file-system path using the <see cref="F:org.pdfclown.files.SerializationModeEnum.Standard">standard serialization mode</see>.</summary>
        </member>
        <member name="M:org.pdfclown.files.File.Save(org.pdfclown.files.SerializationModeEnum)">
                  <summary>Serializes the file to the current file-system path.</summary>
                  <param name="mode">Serialization mode.</param>
        </member>
        <member name="M:org.pdfclown.files.File.Save(System.String,org.pdfclown.files.SerializationModeEnum)">
                  <summary>Serializes the file to the specified file system path.</summary>
                  <param name="path">Target path.</param>
                  <param name="mode">Serialization mode.</param>
        </member>
        <member name="M:org.pdfclown.files.File.Save(org.pdfclown.bytes.IOutputStream,org.pdfclown.files.SerializationModeEnum)">
                  <summary>Serializes the file to the specified stream.</summary>
                  <remarks>It's caller responsibility to close the stream after this method ends.</remarks>
                  <param name="stream">Target stream.</param>
                  <param name="mode">Serialization mode.</param>
        </member>
        <member name="M:org.pdfclown.files.File.Unregister(org.pdfclown.objects.PdfReference)">
                  <summary>Unregisters an internal object.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Cloner">
                  <summary>Gets/Sets the default cloner.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Configuration">
                  <summary>Gets the file configuration.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Document">
                  <summary>Gets the high-level representation of the file content.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.ID">
                  <summary>Gets the identifier of this file.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.IndirectObjects">
                  <summary>Gets the indirect objects collection.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Path">
                  <summary>Gets/Sets the file path.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Reader">
                  <summary>Gets the data reader backing this file.</summary>
                  <returns><code>null</code> in case of newly-created file.</returns>
        </member>
        <member name="P:org.pdfclown.files.File.Trailer">
                  <summary>Gets the file trailer.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.Version">
                  <summary>Gets the file header version [PDF:1.6:3.4.1].</summary>
                  <remarks>This property represents just the original file version; to get the actual version,
                  use the <see cref="P:org.pdfclown.documents.Document.Version">Document.Version</see> method.
                  </remarks>
        </member>
        <member name="T:org.pdfclown.files.File.ConfigurationImpl">
                  <summary>File configuration.</summary>
        </member>
        <member name="M:org.pdfclown.files.File.ConfigurationImpl.SetRealFormat(System.Int32)">
                    <param name="decimalPlacesCount">Number of digits in decimal places.</param>
                    <seealso cref="P:org.pdfclown.files.File.ConfigurationImpl.RealFormat"/>
        </member>
        <member name="P:org.pdfclown.files.File.ConfigurationImpl.File">
                    <summary>Gets the file associated with this configuration.</summary>
        </member>
        <member name="P:org.pdfclown.files.File.ConfigurationImpl.RealFormat">
                    <summary>Gets/Sets the format applied to real number serialization.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfIndirectObject">
                <summary>PDF indirect object [PDF:1.6:3.2.9].</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfObject">
                <summary>Abstract PDF object.</summary>
        </member>
        <member name="T:org.pdfclown.objects.IVisitable">
                <summary>Visitable interface.</summary>
        </member>
        <member name="M:org.pdfclown.objects.IVisitable.Accept(org.pdfclown.objects.IVisitor,System.Object)">
                  <summary>Accepts a visit.</summary>
                  <param name="visitor">Visiting object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Clone(org.pdfclown.objects.PdfObject,org.pdfclown.files.File)">
                  <summary>Gets the clone of the specified object, registered inside the specified file context.</summary>
                  <param name="object">Object to clone into the specified file context.</param>
                  <param name="context">File context of the cloning.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Resolve(org.pdfclown.objects.PdfObject)">
                  <summary>Ensures an indirect reference to be resolved into its corresponding data object.</summary>
                  <param name="object">Object to resolve.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Unresolve(org.pdfclown.objects.PdfDataObject)">
                  <summary>Ensures a data object to be unresolved into its corresponding indirect reference, if
                  available.</summary>
                  <param name="object">Object to unresolve.</param>
                  <returns><see cref="T:org.pdfclown.objects.PdfReference"/>, if available; <code>object</code>, otherwise.</returns>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Clone">
                  <summary>Creates a shallow copy of this object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Clone(org.pdfclown.files.File)">
                  <summary>Creates a deep copy of this object within the specified file context.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Resolve">
                  <summary>Ensures this object to be resolved into its corresponding data object.</summary>
                  <seealso cref="M:org.pdfclown.objects.PdfObject.Unresolve"/>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Swap(org.pdfclown.objects.PdfObject)">
                  <summary>Swaps contents between this object and the other one.</summary>
                  <param name="other">Object whose contents have to be swapped with this one's.</param>
                  <returns>This object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Unresolve">
                  <summary>Ensures this object to be unresolved into its corresponding indirect reference, if
                  available.</summary>
                  <returns><see cref="T:org.pdfclown.objects.PdfReference"/>, if available; <code>this</code>, otherwise.</returns>
                  <seealso cref="M:org.pdfclown.objects.PdfObject.Resolve"/>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.WriteTo(org.pdfclown.bytes.IOutputStream,org.pdfclown.files.File)">
                  <summary>Serializes this object to the specified stream.</summary>
                  <param name="stream">Target stream.</param>
                  <param name="context">File context.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Update">
                  <summary>Updates the state of this object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Exclude(org.pdfclown.objects.PdfDataObject)">
                  <summary>Ensures that the specified object is decontextualized from this object.</summary>
                  <param name="obj">Object to decontextualize from this object.</param>
                  <seealso cref="M:org.pdfclown.objects.PdfObject.Include(org.pdfclown.objects.PdfDataObject)"/>
        </member>
        <member name="M:org.pdfclown.objects.PdfObject.Include(org.pdfclown.objects.PdfDataObject)">
                  <summary>Ensures that the specified object is contextualized into this object.</summary>
                  <param name="obj">Object to contextualize into this object; if it is already contextualized
                    into another object, it will be cloned to preserve its previous association.</param>
                  <returns>Contextualized object.</returns>
                  <seealso cref="M:org.pdfclown.objects.PdfObject.Exclude(org.pdfclown.objects.PdfDataObject)"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Container">
                  <summary>Gets the indirect object containing this object.</summary>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.DataContainer"/>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.IndirectObject"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.DataContainer">
                  <summary>Gets the indirect object containing the data associated to this object.</summary>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.Container"/>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.IndirectObject"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.File">
                  <summary>Gets the file containing this object.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.IndirectObject">
                  <summary>Gets the indirect object corresponding to this object.</summary>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.Container"/>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.DataContainer"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Parent">
                  <summary>Gets/Sets the parent of this object.</summary>
                  <seealso cref="P:org.pdfclown.objects.PdfObject.Container"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Reference">
                  <summary>Gets the indirect reference of this object.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Updateable">
                  <summary>Gets/Sets whether the detection of object state changes is enabled.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Updated">
                  <summary>Gets/Sets whether the initial state of this object has been modified.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfObject.Virtual">
                  <summary>Gets/Sets whether this object acts like a null-object placeholder.</summary>
        </member>
        <member name="T:org.pdfclown.objects.IPdfIndirectObject">
                <summary>PDF indirect object interface.</summary>
        </member>
        <member name="M:org.pdfclown.objects.IPdfIndirectObject.Delete">
                  <summary>Removes the object from its file context.</summary>
                  <remarks>
                    <para>The object is no more usable after this method returns.</para>
                  </remarks>
        </member>
        <member name="P:org.pdfclown.objects.IPdfIndirectObject.DataObject">
                  <summary>Gets/Sets the actual data associated to the indirect reference.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfIndirectObject.IndirectObject">
                  <summary>Gets the indirect object associated to the indirect reference.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfIndirectObject.Reference">
                  <summary>Gets the indirect reference associated to the indirect object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.#ctor(org.pdfclown.files.File,org.pdfclown.objects.PdfDataObject,org.pdfclown.tokens.XRefEntry)">
                  <param name="file">Associated file.</param>
                  <param name="dataObject">
                    <para>Data object associated to the indirect object. It MUST be</para>
                    <list type="bullet">
                      <item><code>null</code>, if the indirect object is original or free.</item>
                      <item>NOT <code>null</code>, if the indirect object is new and in-use.</item>
                    </list>
                  </param>
                  <param name="xrefEntry">Cross-reference entry associated to the indirect object. If the
                    indirect object is new, its offset field MUST be set to 0.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.Compress(org.pdfclown.tokens.ObjectStream)">
                  <summary>Adds the <see cref="P:org.pdfclown.objects.PdfIndirectObject.DataObject">data object</see> to the specified object stream
                  [PDF:1.6:3.4.6].</summary>
                  <param name="objectStream">Target object stream.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.IsCompressed">
                  <summary>Gets whether this object is compressed within an object stream [PDF:1.6:3.4.6].
                  </summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.IsInUse">
                  <summary>Gets whether this object contains a data object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.IsOriginal">
                  <summary>Gets whether this object comes intact from an existing file.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfIndirectObject.Uncompress">
                  <summary>Removes the <see cref="P:org.pdfclown.objects.PdfIndirectObject.DataObject">data object</see> from its object stream [PDF:1.6:3.4.6].</summary>
        </member>
        <member name="T:org.pdfclown.files.IndirectObjects">
                <summary>Collection of the <b>alive indirect objects</b> available inside the
                file.</summary>
                <remarks>
                  <para>According to the PDF spec, <i>indirect object entries may be free
                  (no data object associated) or in-use (data object associated)</i>.</para>
                  <para>We can effectively subdivide indirect objects in two possibly-overriding
                  collections: the <b>original indirect objects</b> (coming from the associated
                  preexisting file) and the <b>newly-registered indirect objects</b> (coming
                  from new data objects or original indirect objects manipulated during the
                  current session).</para>
                  <para><i>To ensure that the modifications applied to an original indirect object
                  are committed to being persistent</i> is critical that the modified original
                  indirect object is newly-registered (practically overriding the original
                  indirect object).</para>
                  <para><b>Alive indirect objects</b> encompass all the newly-registered ones plus
                  not-overridden original ones.</para>
                </remarks>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.file">
                  <summary>Associated file.</summary>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.importedObjects">
                  <summary>Map of matching references of imported indirect objects.</summary>
                  <remarks>
                    <para>This collection is used to prevent duplications among imported
                    indirect objects.</para>
                    <para><code>Key</code> is the external indirect object hashcode, <code>Value</code> is the
                    matching internal indirect object.</para>
                  </remarks>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.modifiedObjects">
                  <summary>Collection of newly-registered indirect objects.</summary>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.wokenObjects">
                  <summary>Collection of instantiated original indirect objects.</summary>
                  <remarks>This collection is used as a cache to avoid unconsistent parsing duplications.</remarks>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.lastObjectNumber">
                  <summary>Object counter.</summary>
        </member>
        <member name="F:org.pdfclown.files.IndirectObjects.xrefEntries">
                  <summary>Offsets of the original indirect objects inside the associated file
                  (to say: implicit collection of the original indirect objects).</summary>
                  <remarks>This information is vital to randomly retrieve the indirect-object
                  persistent representation inside the associated file.</remarks>
        </member>
        <member name="M:org.pdfclown.files.IndirectObjects.Add(org.pdfclown.objects.PdfDataObject)">
                  <summary>Registers an <i>internal</i> data object.</summary>
                  <remarks>To register an external indirect object, use <see cref="M:org.pdfclown.files.IndirectObjects.AddExternal(org.pdfclown.objects.PdfIndirectObject)"/>.</remarks>
                  <returns>Indirect object corresponding to the registered data object.</returns>
        </member>
        <member name="M:org.pdfclown.files.IndirectObjects.AddExternal(org.pdfclown.objects.PdfIndirectObject)">
                  <summary>Registers an <i>external</i> indirect object.</summary>
                  <remarks>
                    <para>External indirect objects come from alien PDF files; therefore, this is a powerful way
                    to import contents from a file into another one.</para>
                    <para>To register an internal data object, use <see cref="M:org.pdfclown.files.IndirectObjects.Add(org.pdfclown.objects.PdfDataObject)"/>.</para>
                  </remarks>
                  <param nme="obj">External indirect object to import.</param>
                  <returns>Indirect object imported from the external indirect object.</returns>
        </member>
        <member name="M:org.pdfclown.files.IndirectObjects.AddExternal(org.pdfclown.objects.PdfIndirectObject,org.pdfclown.objects.Cloner)">
                  <summary>Registers an <i>external</i> indirect object.</summary>
                  <remarks>
                    <para>External indirect objects come from alien PDF files; therefore, this is a powerful way
                    to import contents from a file into another one.</para>
                    <para>To register an internal data object, use <see cref="M:org.pdfclown.files.IndirectObjects.Add(org.pdfclown.objects.PdfDataObject)"/>.</para>
                  </remarks>
                  <param nme="obj">External indirect object to import.</param>
                  <param nme="cloner">Import rules.</param>
                  <returns>Indirect object imported from the external indirect object.</returns>
        </member>
        <member name="M:org.pdfclown.files.IndirectObjects.Add(org.pdfclown.objects.PdfIndirectObject)">
                  <summary>Registers an <i>external</i> indirect object.</summary>
                  <remarks>
                    <para>External indirect objects come from alien PDF files; therefore, this is a powerful way
                    to import contents from a file into another one.</para>
                    <para>To register and get an external indirect object, use <see cref="M:org.pdfclown.files.IndirectObjects.AddExternal(org.pdfclown.objects.PdfIndirectObject)"/></para>
                  </remarks>
                  <returns>Whether the indirect object was successfully registered.</returns>
        </member>
        <member name="P:org.pdfclown.files.IndirectObjects.File">
                  <summary>Gets the file associated to this collection.</summary>
        </member>
        <member name="P:org.pdfclown.files.IndirectObjects.Count">
                  <summary>Gets the number of entries available (both in-use and free) in the
                  collection.</summary>
                  <returns>The number of entries available in the collection.</returns>
        </member>
        <member name="T:org.pdfclown.files.SerializationModeEnum">
                <summary>PDF file serialization mode [PDF:1.6:3.4].</summary>
        </member>
        <member name="F:org.pdfclown.files.SerializationModeEnum.Standard">
                  <summary>Standard complete file serialization [PDF:1.6:3.4].</summary>
                  <remarks>It <i>writes the entire file</i>, generating a single-section cross-reference table
                  and removing obsolete data structures.
                  It reduces the serialization size, but it's more computationally-intensive (slower).</remarks>
        </member>
        <member name="F:org.pdfclown.files.SerializationModeEnum.Incremental">
                  <summary>Standard incremental file serialization [PDF:1.6:2.2.7].</summary>
                  <remarks>It <i>leaves original contents intact, appending changes to the end of the file</i>
                  along with an additional cross-reference table section.
                  It increases the serialization size, but it's faster.</remarks>
        </member>
        <member name="F:org.pdfclown.files.SerializationModeEnum.Linearized">
                  <summary>Linearized file serialization [PDF:1.6:F].</summary>
                  <remarks>It organizes the file to enable <i>efficient incremental access in a network environment</i>.
                  It increases the serialization size and it's more computationally-intensive (slower).</remarks>
        </member>
        <member name="T:org.pdfclown.objects.IPdfNumber">
                <summary>PDF number interface.</summary>
        </member>
        <member name="T:org.pdfclown.objects.IPdfSimpleObject`1">
                <summary>PDF simple object interface.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfNumber.DoubleValue">
                  <summary>Gets the double-precision floating-point representation of the value.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfNumber.FloatValue">
                  <summary>Gets the floating-point representation of the value.</summary>
        </member>
        <member name="P:org.pdfclown.objects.IPdfNumber.IntValue">
                  <summary>Gets the integer representation of the value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfArray">
                <summary>PDF array object, that is a one-dimensional collection of (possibly-heterogeneous)
                objects arranged sequentially [PDF:1.7:3.2.5].</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfDirectObject">
                <summary>Abstract PDF direct object.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfDataObject">
                <summary>PDF data object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfDirectObject.ToString(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Ensures that the given direct object is properly represented as string.</summary>
                  <remarks>This method is useful to force null pointers to be expressed as PDF null objects.</remarks>
        </member>
        <member name="M:org.pdfclown.objects.PdfDirectObject.WriteTo(org.pdfclown.bytes.IOutputStream,org.pdfclown.files.File,org.pdfclown.objects.PdfDirectObject)">
                  <summary>Ensures that the given direct object is properly serialized.</summary>
                  <remarks>This method is useful to force null pointers to be expressed as PDF null objects.</remarks>
        </member>
        <member name="M:org.pdfclown.objects.PdfArray.Get``1(System.Int32)">
                  <summary>Gets the value corresponding to the given index, forcing its instantiation as a direct
                  object in case of missing entry.</summary>
                  <param name="index">Index of the item to return.</param>
                  <param name="itemClass">Class to use for instantiating the item in case of missing entry.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfArray.Get``1(System.Int32,System.Boolean)">
                  <summary>Gets the value corresponding to the given index, forcing its instantiation in case
                  of missing entry.</summary>
                  <param name="index">Index of the item to return.</param>
                  <param name="direct">Whether the item has to be instantiated directly within its container
                  instead of being referenced through an indirect object.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfArray.Resolve(System.Int32)">
                  <summary>Gets the dereferenced value corresponding to the given index.</summary>
                  <remarks>This method takes care to resolve the value returned by
                  <see cref="P:org.pdfclown.objects.PdfArray.Item(System.Int32)">this[int]</see>.</remarks>
                  <param name="index">Index of the item to return.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:org.pdfclown.objects.PdfArray.Resolve``1(System.Int32)" -->
        <member name="T:org.pdfclown.objects.PdfBoolean">
                <summary>PDF boolean object [PDF:1.6:3.2.1].</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfSimpleObject`1">
                <summary>Abstract PDF simple object.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfSimpleObject`1.Get(System.Object)">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfSimpleObject`1.GetValue(org.pdfclown.objects.PdfObject)">
                  <summary>Gets the value corresponding to the given object.</summary>
                  <param name="obj">Object to extract the value from.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfSimpleObject`1.GetValue(org.pdfclown.objects.PdfObject,System.Object)">
                  <summary>Gets the value corresponding to the given object.</summary>
                  <param name="obj">Object to extract the value from.</param>
                  <param name="defaultValue">Value returned in case the object's one is undefined.</param>
        </member>
        <member name="P:org.pdfclown.objects.PdfSimpleObject`1.RawValue">
                  <summary>Gets/Sets the low-level representation of the value.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfSimpleObject`1.Value">
                  <summary>Gets/Sets the high-level representation of the value.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfBoolean.Get(System.Nullable{System.Boolean})">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfDate">
                <summary>PDF date object [PDF:1.6:3.8.3].</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfString">
                <summary>PDF string object [PDF:1.6:3.2.3].</summary>
                <remarks>
                  <para>A string object consists of a series of bytes.</para>
                  <para>String objects can be serialized in two ways:</para>
                  <list type="bullet">
                    <item>as a sequence of literal characters (plain form)</item>
                    <item>as a sequence of hexadecimal digits (hexadecimal form)</item>
                  </list>
                </remarks>
        </member>
        <member name="P:org.pdfclown.objects.PdfString.SerializationMode">
                  <summary>Gets/Sets the serialization mode.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfString.SerializationModeEnum">
                  <summary>String serialization mode.</summary>
        </member>
        <member name="F:org.pdfclown.objects.PdfString.SerializationModeEnum.Literal">
                    Plain form.
        </member>
        <member name="F:org.pdfclown.objects.PdfString.SerializationModeEnum.Hex">
                    Hexadecimal form.
        </member>
        <member name="M:org.pdfclown.objects.PdfDate.Get(System.Nullable{System.DateTime})">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfDate.ToDate(System.String)">
                  <summary>Converts a PDF date literal into its corresponding date.</summary>
                  <exception cref="T:org.pdfclown.util.parsers.ParseException">Thrown when date literal parsing fails.</exception>
        </member>
        <member name="T:org.pdfclown.objects.PdfDictionary">
                <summary>PDF dictionary object [PDF:1.6:3.2.6].</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfDictionary.Get``1(org.pdfclown.objects.PdfName)">
                  <summary>Gets the value corresponding to the given key, forcing its instantiation as a direct
                  object in case of missing entry.</summary>
                  <param name="key">Key whose associated value is to be returned.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfDictionary.Get``1(org.pdfclown.objects.PdfName,System.Boolean)">
                  <summary>Gets the value corresponding to the given key, forcing its instantiation in case of
                  missing entry.</summary>
                  <param name="key">Key whose associated value is to be returned.</param>
                  <param name="direct">Whether the item has to be instantiated directly within its container
                  instead of being referenced through an indirect object.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfDictionary.GetKey(org.pdfclown.objects.PdfDirectObject)">
                  Gets the key associated to the specified value.
        </member>
        <member name="M:org.pdfclown.objects.PdfDictionary.Resolve(org.pdfclown.objects.PdfName)">
                  <summary>Gets the dereferenced value corresponding to the given key.</summary>
                  <remarks>This method takes care to resolve the value returned by <see cref="P:org.pdfclown.objects.PdfDictionary.Item(org.pdfclown.objects.PdfName)">
                  this[PdfName]</see>.</remarks>
                  <param name="key">Key whose associated value is to be returned.</param>
                  <returns>null, if the map contains no mapping for this key.</returns>
        </member>
        <member name="M:org.pdfclown.objects.PdfDictionary.Resolve``1(org.pdfclown.objects.PdfName)">
                  <summary>Gets the dereferenced value corresponding to the given key, forcing its instantiation
                  in case of missing entry.</summary>
                  <remarks>This method takes care to resolve the value returned by <see cref="M:org.pdfclown.objects.PdfDictionary.Get``1(org.pdfclown.objects.PdfName)"/>.
                  </remarks>
                  <param name="key">Key whose associated value is to be returned.</param>
                  <returns>null, if the map contains no mapping for this key.</returns>
        </member>
        <member name="T:org.pdfclown.objects.PdfInteger">
                <summary>PDF integer number object [PDF:1.6:3.2.2].</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfInteger.Get(System.Nullable{System.Int32})">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfName">
                <summary>PDF name object [PDF:1.6:3.2.4].</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfName.Get(System.Object)">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfName.Get(System.String)">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfReal">
                <summary>PDF real number object [PDF:1.6:3.2.2].</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfReal.Get(System.Nullable{System.Double})">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfReference">
                <summary>PDF indirect reference object [PDF:1.6:3.2.9].</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfReference.#ctor(org.pdfclown.tokens.FileParser.Reference,org.pdfclown.files.File)">
                  <remarks>
                    <para>This is a necessary hack because indirect objects are unreachable on parsing bootstrap
                    (see File(IInputStream) constructor).</para>
                  </remarks>
        </member>
        <member name="P:org.pdfclown.objects.PdfReference.GenerationNumber">
                  <summary>Gets the generation number.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfReference.Id">
                  <summary>Gets the object identifier.</summary>
                  <remarks>This corresponds to the serialized representation of an object identifier within a PDF file.</remarks>
        </member>
        <member name="P:org.pdfclown.objects.PdfReference.IndirectReference">
                  <summary>Gets the object reference.</summary>
                  <remarks>This corresponds to the serialized representation of a reference within a PDF file.</remarks>
        </member>
        <member name="P:org.pdfclown.objects.PdfReference.ObjectNumber">
                  <summary>Gets the object number.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfStream">
                <summary>PDF stream object [PDF:1.6:3.2.7].</summary>
        </member>
        <member name="F:org.pdfclown.objects.PdfStream.bodyResolved">
                  <summary>Indicates whether {@link #body} has already been resolved and therefore contains the
                  actual stream data.</summary>
        </member>
        <member name="M:org.pdfclown.objects.PdfStream.GetBody(System.Boolean)">
                  <summary>Gets the stream body.</summary>
                  <param name="decode">Defines whether the body has to be decoded.</param>
        </member>
        <member name="M:org.pdfclown.objects.PdfStream.SetDataFile(org.pdfclown.documents.files.FileSpecification,System.Boolean)">
                  <param name="preserve">Indicates whether the data from the old data source substitutes the
                  new one. This way data can be imported to/exported from local or preserved in case of external
                  file location changed.</param>
                  <seealso cref="P:org.pdfclown.objects.PdfStream.DataFile"/>
        </member>
        <member name="P:org.pdfclown.objects.PdfStream.Body">
                  <summary>Gets the decoded stream body.</summary>
        </member>
        <member name="P:org.pdfclown.objects.PdfStream.Header">
                  <summary>Gets the stream header.</summary>
        </member>
        <member name="T:org.pdfclown.objects.PdfTextString">
                <summary>PDF text string object [PDF:1.6:3.8.1].</summary>
                <remarks>Text strings are meaningful only as part of the document hierarchy; they cannot appear
                within content streams. They represent information that is intended to be human-readable.</remarks>
        </member>
        <member name="M:org.pdfclown.objects.PdfTextString.Get(System.String)">
                  <summary>Gets the object equivalent to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.objects.Rectangle">
                <summary>PDF rectangle object [PDF:1.6:3.8.4].</summary>
                <remarks>
                  <para>Rectangles are described by two diagonally-opposite corners. Corner pairs which don't
                  respect the canonical form (lower-left and upper-right) are automatically normalized to
                  provide a consistent representation.</para>
                  <para>Coordinates are expressed within the PDF coordinate space (lower-left origin and
                  positively-oriented axes).</para>
                </remarks>
        </member>
        <member name="T:org.pdfclown.tokens.Reader">
                <summary>PDF file reader.</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Reader.ReadInfo">
                  <summary>Retrieves the file information.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.Writer">
                <summary>PDF file writer.</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.Get(org.pdfclown.files.File,org.pdfclown.bytes.IOutputStream)">
                  <summary>Gets a new writer instance for the specified file.</summary>
                  <param name="file">File to serialize.</param>
                  <param name="stream">Target stream.</param>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.Write(org.pdfclown.files.SerializationModeEnum)">
                  <summary>Serializes the <see cref="P:org.pdfclown.tokens.Writer.File">file</see> to the <see cref="P:org.pdfclown.tokens.Writer.Stream">target stream</see>.</summary>
                  <param name="mode">Serialization mode.</param>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.UpdateTrailer(org.pdfclown.objects.PdfDictionary,org.pdfclown.bytes.IOutputStream)">
                  <summary>Updates the specified trailer.</summary>
                  <remarks>This method has to be called just before serializing the trailer object.</remarks>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.WriteHeader">
                  <summary>Serializes the beginning of the file [PDF:1.6:3.4.1].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.WriteIncremental">
                  <summary>Serializes the PDF file as incremental update [PDF:1.6:3.4.5].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.WriteLinearized">
                  <summary>Serializes the PDF file linearized [PDF:1.6:F].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.WriteStandard">
                  <summary>Serializes the PDF file compactly [PDF:1.6:3.4].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.Writer.WriteTail(System.Int64)">
                  <summary>Serializes the end of the file [PDF:1.6:3.4.4].</summary>
                  <param name="startxref">Byte offset from the beginning of the file to the beginning
                    of the last cross-reference section.</param>
        </member>
        <member name="P:org.pdfclown.tokens.Writer.File">
                  <summary>Gets the file to serialize.</summary>
        </member>
        <member name="P:org.pdfclown.tokens.Writer.Stream">
                  <summary>Gets the target stream.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.XRefEntry">
                <summary>Cross-reference table entry [PDF:1.6:3.4.3].</summary>
        </member>
        <member name="F:org.pdfclown.tokens.XRefEntry.GenerationUnreusable">
                  <summary>Unreusable generation [PDF:1.6:3.4.3].</summary>
        </member>
        <member name="F:org.pdfclown.tokens.XRefEntry.UndefinedOffset">
                  <summary>Undefined offset.</summary>
        </member>
        <member name="M:org.pdfclown.tokens.XRefEntry.#ctor(System.Int32,System.Int32)">
                  <summary>Instantiates a new in-use ordinary (uncompressed) object entry.</summary>
                  <param name="number">Object number.</param>
                  <param name="generation">Generation number.</param>
        </member>
        <member name="M:org.pdfclown.tokens.XRefEntry.#ctor(System.Int32,System.Int32,System.Int32,org.pdfclown.tokens.XRefEntry.UsageEnum)">
                  <summary>Instantiates an original ordinary (uncompressed) object entry.</summary>
                  <param name="number">Object number.</param>
                  <param name="generation">Generation number.</param>
                  <param name="offset">Indirect-object byte offset within the serialized file (in-use entry),
                    or the next free-object object number (free entry).</param>
                  <param name="usage">Usage state.</param>
        </member>
        <member name="M:org.pdfclown.tokens.XRefEntry.#ctor(System.Int32,System.Int32,System.Int32)">
                  <summary>Instantiates a compressed object entry.</summary>
                  <param name="number">Object number.</param>
                  <param name="offset">Object index within its object stream.</param>
                  <param name="streamNumber">Object number of the object stream in which this object is stored.
                  </param>
        </member>
        <member name="P:org.pdfclown.tokens.XRefEntry.Generation">
                  <summary>Gets the generation number.</summary>
        </member>
        <member name="P:org.pdfclown.tokens.XRefEntry.Number">
                  <summary>Gets the object number.</summary>
        </member>
        <member name="P:org.pdfclown.tokens.XRefEntry.Offset">
                  <summary>Gets its indirect-object byte offset within the serialized file (in-use entry),
                  the next free-object object number (free entry) or the object index within its object stream
                  (compressed entry).</summary>
        </member>
        <member name="P:org.pdfclown.tokens.XRefEntry.StreamNumber">
                  <summary>Gets the object number of the object stream in which this object is stored [PDF:1.6:3.4.7],
                  in case it is a <see cref="F:org.pdfclown.tokens.XRefEntry.UsageEnum.InUseCompressed">compressed</see> one.</summary>
                  <returns>-1 in case this is <see cref="F:org.pdfclown.tokens.XRefEntry.UsageEnum.InUse">not a compressed</see>-object entry.</returns>
        </member>
        <member name="P:org.pdfclown.tokens.XRefEntry.Usage">
                  <summary>Gets the usage state.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.XRefEntry.UsageEnum">
                  <summary>Cross-reference table entry usage [PDF:1.6:3.4.3].</summary>
        </member>
        <member name="F:org.pdfclown.tokens.XRefEntry.UsageEnum.Free">
                    <summary>Free entry.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.XRefEntry.UsageEnum.InUse">
                    <summary>Ordinary (uncompressed) object entry.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.XRefEntry.UsageEnum.InUseCompressed">
                    <summary>Compressed object entry [PDF:1.6:3.4.6].</summary>
        </member>
        <member name="T:org.pdfclown.tools.PageManager">
                <summary>Tool for page management.</summary>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.GetSize(org.pdfclown.documents.Page)">
                  <summary>Gets the data size of the specified page expressed in bytes.</summary>
                  <param name="page">Page whose data size has to be calculated.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.GetSize(org.pdfclown.documents.Page,System.Collections.Generic.HashSet{org.pdfclown.objects.PdfReference})">
                  <summary>Gets the data size of the specified page expressed in bytes.</summary>
                  <param name="page">Page whose data size has to be calculated.</param>
                  <param name="visitedReferences">References to data objects excluded from calculation.
                    This set is useful, for example, to avoid recalculating the data size of shared resources.
                    During the operation, this set is populated with references to visited data objects.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.GetSize(org.pdfclown.objects.PdfDirectObject,System.Collections.Generic.HashSet{org.pdfclown.objects.PdfReference},System.Boolean)">
                  <summary>Gets the data size of the specified object expressed in bytes.</summary>
                  <param name="object">Data object whose size has to be calculated.</param>
                  <param name="visitedReferences">References to data objects excluded from calculation.
                    This set is useful, for example, to avoid recalculating the data size of shared resources.
                    During the operation, this set is populated with references to visited data objects.</param>
                  <param name="isRoot">Whether this data object represents the page root.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Add(org.pdfclown.documents.Document)">
                  <summary>Appends a document to the end of the document.</summary>
                  <param name="document">Document to be added.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Add(System.Int32,org.pdfclown.documents.Document)">
                  <summary>Inserts a document at the specified position in the document.</summary>
                  <param name="index">Position at which the document has to be inserted.</param>
                  <param name="document">Document to be inserted.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Add(System.Collections.Generic.ICollection{org.pdfclown.documents.Page})">
                  <summary>Appends a collection of pages to the end of the document.</summary>
                  <param name="pages">Pages to be added.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Add(System.Int32,System.Collections.Generic.ICollection{org.pdfclown.documents.Page})">
                  <summary>Inserts a collection of pages at the specified position in the document.</summary>
                  <param name="index">Position at which the pages have to be inserted.</param>
                  <param name="pages">Pages to be inserted.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Extract(System.Int32,System.Int32)">
                  <summary>Extracts a page range from the document.</summary>
                  <param name="startIndex">The beginning index, inclusive.</param>
                  <param name="endIndex">The ending index, exclusive.</param>
                  <returns>Extracted page range.</returns>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Move(System.Int32,System.Int32,System.Int32)">
                  <summary>Moves a page range to a target position within the document.</summary>
                  <param name="startIndex">The beginning index, inclusive.</param>
                  <param name="endIndex">The ending index, exclusive.</param>
                  <param name="targetIndex">The target index.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Remove(System.Int32,System.Int32)">
                  <summary>Removes a page range from the document.</summary>
                  <param name="startIndex">The beginning index, inclusive.</param>
                  <param name="endIndex">The ending index, exclusive.</param>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Split">
                  <summary>Bursts the document into single-page documents.</summary>
                  <returns>Split subdocuments.</returns>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Split(System.Int32[])">
                  <summary>Splits the document into multiple subdocuments delimited by the specified page indexes.</summary>
                  <param name="indexes">Split page indexes.</param>
                  <returns>Split subdocuments.</returns>
        </member>
        <member name="M:org.pdfclown.tools.PageManager.Split(System.Int64)">
                  <summary>Splits the document into multiple subdocuments on maximum file size.</summary>
                  <param name="maxDataSize">Maximum data size (expressed in bytes) of target files.
                    Note that resulting files may be a little bit larger than this value, as file data include (along with actual page data)
                    some extra structures such as cross reference tables.</param>
                  <returns>Split documents.</returns>
        </member>
        <member name="P:org.pdfclown.tools.PageManager.Document">
                  <summary>Gets/Sets the document being managed.</summary>
        </member>
        <member name="T:org.pdfclown.tools.PageStamper">
                <summary>Tool for content insertion into existing pages.</summary>
        </member>
        <member name="T:org.pdfclown.tools.TextExtractor">
                <summary>Tool for extracting text from <see cref="T:org.pdfclown.documents.contents.IContentContext">content contexts</see>.</summary>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.ToString(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}})">
                  <summary>Converts text information into plain text.</summary>
                  <param name="textStrings">Text information to convert.</param>
                  <returns>Plain text.</returns>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.ToString(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}},System.String,System.String)">
                  <summary>Converts text information into plain text.</summary>
                  <param name="textStrings">Text information to convert.</param>
                  <param name="lineSeparator">Separator to apply on line break.</param>
                  <param name="areaSeparator">Separator to apply on area break.</param>
                  <returns>Plain text.</returns>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Extract(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Extracts text strings from the specified content context.</summary>
                  <param name="contentContext">Source content context.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Extract(org.pdfclown.documents.contents.Contents)">
                  <summary>Extracts text strings from the specified contents.</summary>
                  <param name="contents">Source contents.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}},System.Collections.Generic.IList{org.pdfclown.util.math.Interval{System.Int32}})">
                  <summary>Gets the text strings matching the specified intervals.</summary>
                  <param name="textStrings">Text strings to filter.</param>
                  <param name="intervals">Text intervals to match. They MUST be ordered and not overlapping.</param>
                  <returns>A list of text strings corresponding to the specified intervals.</returns>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}},org.pdfclown.tools.TextExtractor.IIntervalFilter)">
                  <summary>Processes the text strings matching the specified filter.</summary>
                  <param name="textStrings">Text strings to filter.</param>
                  <param name="filter">Matching processor.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}},System.Drawing.RectangleF)">
                  <summary>Gets the text strings matching the specified area.</summary>
                  <param name="textStrings">Text strings to filter, grouped by source area.</param>
                  <param name="area">Graphic area which text strings have to be matched to.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IDictionary{System.Nullable{System.Drawing.RectangleF},System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString}},System.Drawing.RectangleF[])">
                  <summary>Gets the text strings matching the specified areas.</summary>
                  <param name="textStrings">Text strings to filter, grouped by source area.</param>
                  <param name="areas">Graphic areas which text strings have to be matched to.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString},System.Drawing.RectangleF)">
                  <summary>Gets the text strings matching the specified area.</summary>
                  <param name="textStrings">Text strings to filter.</param>
                  <param name="area">Graphic area which text strings have to be matched to.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Filter(System.Collections.Generic.IList{org.pdfclown.documents.contents.ITextString},System.Drawing.RectangleF[])">
                  <summary>Gets the text strings matching the specified areas.</summary>
                  <param name="textStrings">Text strings to filter.</param>
                  <param name="areas">Graphic areas which text strings have to be matched to.</param>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Extract(org.pdfclown.documents.contents.ContentScanner,System.Collections.Generic.IList{org.pdfclown.documents.contents.ContentScanner.TextStringWrapper})">
                  <summary>Scans a content level looking for text.</summary>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.Sort(System.Collections.Generic.List{org.pdfclown.documents.contents.ContentScanner.TextStringWrapper},System.Collections.Generic.List{org.pdfclown.documents.contents.ITextString})">
                  <summary>Sorts the extracted text strings.</summary>
                  <remarks>Sorting implies text position ordering, integration and aggregation.</remarks>
                  <param name="rawTextStrings">Source (lower-level) text strings.</param>
                  <param name="textStrings">Target (higher-level) text strings.</param>
        </member>
        <member name="P:org.pdfclown.tools.TextExtractor.AreaMode">
                  <summary>Gets the text-to-area matching mode.</summary>
        </member>
        <member name="P:org.pdfclown.tools.TextExtractor.Areas">
                  <summary>Gets the graphic areas whose text has to be extracted.</summary>
        </member>
        <member name="P:org.pdfclown.tools.TextExtractor.AreaTolerance">
                  <summary>Gets the admitted outer area (in points) for containment matching purposes.</summary>
                  <remarks>This measure is useful to ensure that text whose boxes overlap with the area bounds
                  is not excluded from the match.</remarks>
        </member>
        <member name="P:org.pdfclown.tools.TextExtractor.Dehyphenated">
                  <summary>Gets/Sets whether the text strings have to be dehyphenated.</summary>
        </member>
        <member name="P:org.pdfclown.tools.TextExtractor.Sorted">
                  <summary>Gets/Sets whether the text strings have to be sorted.</summary>
        </member>
        <member name="T:org.pdfclown.tools.TextExtractor.AreaModeEnum">
                  <summary>Text-to-area matching mode.</summary>
        </member>
        <member name="F:org.pdfclown.tools.TextExtractor.AreaModeEnum.Containment">
                    <summary>Text string must be contained by the area.</summary>
        </member>
        <member name="F:org.pdfclown.tools.TextExtractor.AreaModeEnum.Intersection">
                    <summary>Text string must intersect the area.</summary>
        </member>
        <member name="T:org.pdfclown.tools.TextExtractor.IIntervalFilter">
                  <summary>Text filter by interval.</summary>
                  <remarks>Iterated intervals MUST be ordered.</remarks>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.IIntervalFilter.Process(org.pdfclown.util.math.Interval{System.Int32},org.pdfclown.documents.contents.ITextString)">
                    <summary>Notifies current matching.</summary>
                    <param name="interval">Current interval.</param>
                    <param name="match">Text string matching the current interval.</param>
        </member>
        <member name="T:org.pdfclown.tools.TextExtractor.TextString">
                  <summary>Text string.</summary>
                  <remarks>This is typically used to assemble contiguous raw text strings
                  laying on the same line.</remarks>
        </member>
        <member name="T:org.pdfclown.tools.TextExtractor.TextStringPositionComparer`1">
                  <summary>Text string position comparer.</summary>
        </member>
        <member name="M:org.pdfclown.tools.TextExtractor.TextStringPositionComparer`1.IsOnTheSameLine(System.Drawing.RectangleF,System.Drawing.RectangleF)">
                    <summary>Gets whether the specified boxes lay on the same text line.</summary>
        </member>
        <member name="T:org.pdfclown.util.io.BigEndianBinaryReader">
                <summary>Reads primitive data types as binary values using big-endian encoding.</summary>
                <remarks>This implementation was necessary because the official framework's binary reader supports
                only the little-endian encoding.</remarks>
        </member>
        <member name="M:org.pdfclown.util.io.BigEndianBinaryReader.Close">
                  <summary>Closes the reader, including the underlying stream.</summary>
        </member>
        <member name="M:org.pdfclown.util.io.BigEndianBinaryReader.ReadInt16">
                  <summary>Reads a 2-byte signed integer from the current stream and advances the current position
                  of the stream by two bytes.</summary>
        </member>
        <member name="M:org.pdfclown.util.io.BigEndianBinaryReader.ReadInt32">
                  <summary>Reads a 4-byte signed integer from the current stream and advances the current position
                  of the stream by four bytes.</summary>
        </member>
        <member name="M:org.pdfclown.util.io.BigEndianBinaryReader.ReadUInt16">
                  <summary>Reads a 2-byte unsigned integer from the current stream and advances the position of the
                  stream by two bytes.</summary>
        </member>
        <member name="M:org.pdfclown.util.io.BigEndianBinaryReader.ReadUInt32">
                  <summary>Reads a 4-byte unsigned integer from the current stream and advances the position of the
                  stream by four bytes.</summary>
        </member>
        <member name="P:org.pdfclown.util.io.BigEndianBinaryReader.BaseStream">
                  <summary>Gets the underlying stream.</summary>
        </member>
        <member name="T:org.pdfclown.util.io.ByteOrderEnum">
                <summary>Byte order.</summary>
        </member>
        <member name="T:org.pdfclown.util.math.OperationUtils">
                <summary>Specialized math operations.</summary>
        </member>
        <member name="F:org.pdfclown.util.math.OperationUtils.DoubleExponentBias">
                  <summary>Double-precision floating-point exponent bias.</summary>
        </member>
        <member name="F:org.pdfclown.util.math.OperationUtils.DoubleExponentBitMask">
                  <summary>Double-precision floating-point exponent field bit mask.</summary>
        </member>
        <member name="F:org.pdfclown.util.math.OperationUtils.DoubleSignificandBitCount">
                  <summary>Double-precision floating-point significand bit count, excluding the implicit one.
                  </summary>
        </member>
        <member name="F:org.pdfclown.util.math.OperationUtils.Epsilon">
                  <summary>Default relative floating-point precision error tolerance.</summary>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.Compare(System.Double,System.Double)">
                  <summary>Compares double-precision floating-point numbers applying the default error tolerance.
                  </summary>
                  <param name="value1">First argument to compare.</param>
                  <param name="value2">Second argument to compare.</param>
                  <returns>How the first argument compares to the second:
                    <list type="bullet">
                      <item>-1, smaller;</item>
                      <item>0, equal;</item>
                      <item>1, greater.</item>
                    </list>
                  </returns>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.Compare(System.Double,System.Double,System.Double)">
                  <summary>Compares double-precision floating-point numbers applying the specified error tolerance.
                  </summary>
                  <param name="value1">First argument to compare.</param>
                  <param name="value2">Second argument to compare.</param>
                  <param name="epsilon">Relative error tolerance.</param>
                  <returns>How the first argument compares to the second:
                    <list type="bullet">
                      <item>-1, smaller;</item>
                      <item>0, equal;</item>
                      <item>1, greater.</item>
                    </list>
                  </returns>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.Compare(System.Byte[],System.Byte[])">
                  <summary>Compares big-endian byte arrays.</summary>
                  <param name="data1">First argument to compare.</param>
                  <param name="data2">Second argument to compare.</param>
                  <returns>How the first argument compares to the second:
                    <list type="bullet">
                      <item>-1, smaller;</item>
                      <item>0, equal;</item>
                      <item>1, greater.</item>
                    </list>
                  </returns>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.Increment(System.Byte[])">
                  <summary>Increments a big-endian byte array.</summary>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.Increment(System.Byte[],System.Int32)">
                  <summary>Increments a big-endian byte array at the specified position.</summary>
        </member>
        <member name="M:org.pdfclown.util.math.OperationUtils.GetExponent(System.Double)">
                  <summary>Gets the unbiased exponent of the specified argument.</summary>
        </member>
        <member name="T:org.pdfclown.util.BiDictionary`2">
                <summary>Bidirectional bijective map.</summary>
        </member>
        <member name="T:org.pdfclown.util.ByteArray">
                <summary>Byte array.</summary>
        </member>
        <member name="T:org.pdfclown.util.ConvertUtils">
                <summary>Data convertion utility.</summary>
                <remarks>This class is a specialized adaptation from the original <a href="http://commons.apache.org/codec/">
                Apache Commons Codec</a> project, licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">
                Apache License, Version 2.0</a>.</remarks>
        </member>
        <member name="T:org.pdfclown.PDF">
                <summary>Indicates the PDF compatibility level of the annotated element.</summary>
        </member>
        <member name="P:org.pdfclown.PDF.Value">
                  <summary>Gets the compatible version (minimum PDF version supporting the annotated element).</summary>
        </member>
        <member name="T:org.pdfclown.Version">
                <summary>Generic PDF version number [PDF:1.6:H.1].</summary>
                <seealso cref="T:org.pdfclown.VersionEnum"/>
        </member>
        <member name="T:org.pdfclown.util.metadata.IVersion">
                <summary>Generic software version number.</summary>
        </member>
        <member name="P:org.pdfclown.util.metadata.IVersion.Numbers">
                  <summary>Gets the version numbers.</summary>
        </member>
        <member name="T:org.pdfclown.VersionEnum">
                <summary>Managed PDF version number [PDF:1.6:H.1].</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF10">
                  <summary>Version 1.0 (1993, Acrobat 1).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF11">
                  <summary>Version 1.1 (1996, Acrobat 2).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF12">
                  <summary>Version 1.2 (1996, Acrobat 3).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF13">
                  <summary>Version 1.3 (2000, Acrobat 4).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF14">
                  <summary>Version 1.4 (2001, Acrobat 5).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF15">
                  <summary>Version 1.5 (2003, Acrobat 6).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF16">
                  <summary>Version 1.6 (2004, Acrobat 7).</summary>
        </member>
        <member name="F:org.pdfclown.VersionEnum.PDF17">
                  <summary>Version 1.7 (2006, Acrobat 8).</summary>
        </member>
        <member name="T:org.pdfclown.tokens.Symbol">
                <summary>PDF symbols.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.Chunk">
                <summary>Common data chunks for serialization purposes.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.Keyword">
                <summary>PDF keywords.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginIndirectObject">
                  <summary>PDF indirect object begin.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginStream">
                  <summary>PDF stream data begin.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BOF">
                  <summary>PDF file begin.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.DatePrefix">
                  <summary>PDF date marker.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EndIndirectObject">
                  <summary>PDF indirect object end.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EndStream">
                  <summary>PDF stream data end.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EOF">
                  <summary>PDF file end.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.False">
                  <summary>PDF boolean false.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.FreeXrefEntry">
                  <summary>PDF free xref entry marker.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.InUseXrefEntry">
                  <summary>PDF in-use xref entry marker.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.Null">
                  <summary>PDF null object.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.StartXRef">
                  <summary>PDF xref start offset.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.Trailer">
                  <summary>PDF trailer begin.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.True">
                  <summary>PDF boolean true.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.XRef">
                  <summary>PDF xref begin.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginArray">
                  <summary>PDF array opening delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginComment">
                  <summary>PDF comment opening delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginDictionary">
                  <summary>PDF dictionary opening delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.BeginLiteralString">
                  <summary>PDF literal string opening delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EndArray">
                  <summary>PDF array closing delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EndDictionary">
                  <summary>PDF dictionary closing delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.EndLiteralString">
                  <summary>PDF literal string closing delimiter.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.NamePrefix">
                  <summary>PDF name marker.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.Keyword.Reference">
                  <summary>PDF indirect reference marker.</summary>
        </member>
        <member name="T:org.pdfclown.documents.NamedJavaScripts">
                <summary>Named JavaScript actions [PDF:1.6:3.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.tokens.XRefStream">
                <summary>Cross-reference stream containing cross-reference information [PDF:1.6:3.4.7].</summary>
                <remarks>It is alternative to the classic cross-reference table.</remarks>
        </member>
        <member name="M:org.pdfclown.tokens.XRefStream.GetFieldSize(System.Int32)">
                  <summary>Gets the number of bytes needed to store the specified value.</summary>
                  <param name="maxValue">Maximum storable value.</param>
        </member>
        <member name="M:org.pdfclown.tokens.XRefStream.NumberToByteArray(System.Int32,System.Int32)">
                  <summary>Converts the specified value into a customly-sized big-endian byte array.</summary>
                  <param name="value">Value to convert.</param>
                  <param name="length">Byte array's length.</param>
        </member>
        <member name="M:org.pdfclown.tokens.XRefStream.Flush(org.pdfclown.bytes.IOutputStream)">
                  <summary>Serializes the xref stream entries into the stream body.</summary>
        </member>
        <member name="P:org.pdfclown.tokens.XRefStream.LinkedStreamOffset">
                  <summary>Gets the byte offset from the beginning of the file
                  to the beginning of the previous cross-reference stream.</summary>
                  <returns>-1 in case no linked stream exists.</returns>
        </member>
        <member name="T:org.pdfclown.tokens.ObjectStream">
                <summary>Object stream containing a sequence of PDF objects [PDF:1.6:3.4.6].</summary>
                <remarks>The purpose of object streams is to allow a greater number of PDF objects
                to be compressed, thereby substantially reducing the size of PDF files.
                The objects in the stream are referred to as compressed objects.</remarks>
        </member>
        <member name="F:org.pdfclown.tokens.ObjectStream.entries">
                  <summary>Compressed objects map.</summary>
                  <remarks>This map is initially populated with offset values;
                  when a compressed object is required, its offset is used to retrieve it.</remarks>
        </member>
        <member name="M:org.pdfclown.tokens.ObjectStream.Flush(org.pdfclown.bytes.IOutputStream)">
                  <summary>Serializes the object stream entries into the stream body.</summary>
        </member>
        <member name="P:org.pdfclown.tokens.ObjectStream.BaseStream">
                  <summary>Gets/Sets the object stream extended by this one.</summary>
                  <remarks>Both streams are considered part of a collection of object streams  whose links form
                  a directed acyclic graph.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Movie">
                <summary>Movie annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Movie.Content">
                  <summary>Gets/Sets the movie to be played.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Sound">
                <summary>Sound annotation [PDF:1.6:8.4.5].</summary>
                <remarks>When the annotation is activated, the sound is played.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Sound.ToCode(org.pdfclown.documents.interaction.annotations.Sound.IconTypeEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.annotations.Sound.ToIconTypeEnum(org.pdfclown.objects.PdfName)">
                  <summary>Gets the icon type corresponding to the given value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Sound.IconType">
                  <summary>Gets/Sets the icon to be used in displaying the annotation.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.annotations.Sound.Content">
                  <summary>Gets/Sets the sound to be played.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Sound.IconTypeEnum">
                  <summary>Icon to be used in displaying the annotation [PDF:1.6:8.4.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Sound.IconTypeEnum.Speaker">
                    <summary>Speaker.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Sound.IconTypeEnum.Microphone">
                    <summary>Microphone.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.PlainWriter">
                <summary>PDF file writer implementing classic cross-reference table [PDF:1.6:3.4.3].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.PlainWriter.AppendXRefSubsection(System.Text.StringBuilder,System.Int32,System.Int32,System.Text.StringBuilder)">
                  <summary>Appends the cross-reference subsection to the specified builder.</summary>
                  <param name="xrefBuilder">Target builder.</param>
                  <param name="firstObjectNumber">Object number of the first object in the subsection.</param>
                  <param name="entryCount">Number of entries in the subsection.</param>
                  <param name="xrefSubBuilder">Cross-reference subsection entries.</param>
        </member>
        <member name="M:org.pdfclown.tokens.PlainWriter.AppendXRefSubsectionIndexer(System.Text.StringBuilder,System.Int32,System.Int32)">
                  <summary>Appends the cross-reference subsection indexer to the specified builder.</summary>
                  <param name="xrefBuilder">Target builder.</param>
                  <param name="firstObjectNumber">Object number of the first object in the subsection.</param>
                  <param name="entryCount">Number of entries in the subsection.</param>
        </member>
        <member name="M:org.pdfclown.tokens.PlainWriter.WriteTrailer(System.Int64,System.Int32,org.pdfclown.tokens.FileParser)">
                  <summary>Serializes the file trailer [PDF:1.6:3.4.4].</summary>
                  <param name="startxref">Byte offset from the beginning of the file to the beginning
                    of the last cross-reference section.</param>
                  <param name="xrefSize">Total number of entries in the file's cross-reference table,
                    as defined by the combination of the original section and all update sections.</param>
                  <param name="parser">File parser.</param>
        </member>
        <member name="T:org.pdfclown.tokens.CompressedWriter">
                <summary>PDF file writer implementing compressed cross-reference stream [PDF:1.6:3.4.7].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.CompressedWriter.AddXRefEntry(org.pdfclown.tokens.XRefEntry,org.pdfclown.objects.PdfIndirectObject,org.pdfclown.tokens.XRefStream,org.pdfclown.tokens.XRefEntry,System.Collections.Generic.IDictionary{System.Int32,org.pdfclown.tokens.ObjectStream})">
                  <summary>Adds an indirect object entry to the specified xref stream.</summary>
                  <param name="xrefEntry">Indirect object's xref entry.</param>
                  <param name="indirectObject">Indirect object.</param>
                  <param name="xrefStream">XRef stream.</param>
                  <param name="prevFreeEntry">Previous free xref entry.</param>
                  <param name="extensionObjectStreams">Object streams used in incremental updates to extend
                    modified ones.</param>
                  <returns>Current free xref entry.</returns>
        </member>
        <member name="T:org.pdfclown.documents.contents.PropertyList">
                <summary>Private information meaningful to the program (application or plugin extension)
                creating the marked content [PDF:1.6:10.5.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.PropertyList.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps the specified base object into a property list object.</summary>
                  <param name="baseObject">Base object of a property list object.</param>
                  <returns>Property list object corresponding to the base object.</returns>
        </member>
        <member name="T:org.pdfclown.documents.contents.PropertyListResources">
                <summary>Property list resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.functions.Function">
                <summary>Function [PDF:1.6:3.9].</summary>
        </member>
        <member name="M:org.pdfclown.documents.functions.Function.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a function base object into a function object.</summary>
                  <param name="baseObject">Function base object.</param>
                  <returns>Function object associated to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.functions.Function.GetDictionary(org.pdfclown.objects.PdfDataObject)">
                  <summary>Gets a function's dictionary.</summary>
                  <param name="functionDataObject">Function data object.</param>
        </member>
        <member name="M:org.pdfclown.documents.functions.Function.Calculate(System.Double[])">
                  <summary>Gets the result of the calculation applied by this function
                  to the specified input values.</summary>
                  <param name="inputs">Input values.</param>
        </member>
        <member name="M:org.pdfclown.documents.functions.Function.Calculate(System.Collections.Generic.IList{org.pdfclown.objects.PdfDirectObject})">
                  <summary>Gets the result of the calculation applied by this function
                  to the specified input values.</summary>
                  <param name="inputs">Input values.</param>
        </member>
        <member name="M:org.pdfclown.documents.functions.Function.GetIntervals``1(org.pdfclown.objects.PdfName,org.pdfclown.documents.functions.Function.DefaultIntervalsCallback{``0})">
                  <summary>Gets the intervals corresponding to the specified key.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Function.Domains">
                  <summary>Gets the (inclusive) domains of the input values.</summary>
                  <remarks>Input values outside the declared domains are clipped to the nearest boundary value.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.functions.Function.InputCount">
                  <summary>Gets the number of input values (parameters) of this function.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Function.OutputCount">
                  <summary>Gets the number of output values (results) of this function.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Function.Ranges">
                  <summary>Gets the (inclusive) ranges of the output values.</summary>
                  <remarks>Output values outside the declared ranges are clipped to the nearest boundary value;
                  if this entry is absent, no clipping is done.</remarks>
                  <returns><code>null</code> in case of unbounded ranges.</returns>
        </member>
        <member name="P:org.pdfclown.documents.functions.Function.Dictionary">
                  <summary>Gets this function's dictionary.</summary>
        </member>
        <member name="T:org.pdfclown.documents.functions.Function.DefaultIntervalsCallback`1">
                  <summary>Default intervals callback.</summary>
        </member>
        <member name="T:org.pdfclown.util.math.Interval`1">
                <summary>An interval of comparable objects.</summary>
        </member>
        <member name="M:org.pdfclown.util.math.Interval`1.Contains(`0)">
                  <summary>Gets whether the specified value is contained within this interval.</summary>
                  <param name="value">Value to check for containment.</param>
        </member>
        <member name="P:org.pdfclown.util.math.Interval`1.High">
                  <summary>Gets/Sets the higher interval endpoint.</summary>
        </member>
        <member name="P:org.pdfclown.util.math.Interval`1.HighInclusive">
                  <summary>Gets/Sets whether the higher endpoint is inclusive.</summary>
        </member>
        <member name="P:org.pdfclown.util.math.Interval`1.Low">
                  <summary>Gets/Sets the lower interval endpoint.</summary>
        </member>
        <member name="P:org.pdfclown.util.math.Interval`1.LowInclusive">
                  <summary>Gets/Sets whether the lower endpoint is inclusive.</summary>
        </member>
        <member name="T:org.pdfclown.documents.functions.Type4Function">
                <summary>PostScript calculator function represented as a stream containing code written in a
                small subset of the PostScript language [PDF:1.6:3.9.4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.functions.Type3Function">
                <summary>Stitching function producing a single new 1-input function from the combination of the
                subdomains of <see cref="P:org.pdfclown.documents.functions.Type3Function.Functions">several 1-input functions</see> [PDF:1.6:3.9.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type3Function.DomainBounds">
                  <summary>Gets the <see cref="!:Domains">domain</see> partition bounds whose resulting intervals
                  are respectively applied to each <see cref="P:org.pdfclown.documents.functions.Type3Function.Functions">function</see>.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type3Function.DomainEncodes">
                  <summary>Gets the mapping of each <see cref="P:org.pdfclown.documents.functions.Type3Function.DomainBounds">subdomain</see> into the domain
                  of the corresponding <see cref="P:org.pdfclown.documents.functions.Type3Function.Functions">function</see>.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type3Function.Functions">
                  <summary>Gets the 1-input functions making up this stitching function.</summary>
                  <remarks>The output dimensionality of all functions must be the same.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:org.pdfclown.documents.functions.Type2Function" -->
        <member name="P:org.pdfclown.documents.functions.Type2Function.BoundOutputValues">
                  <summary>Gets the output value pairs <code>(C0,C1)</code> for lower (<code>0.0</code>)
                  and higher (<code>1.0</code>) input values.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type2Function.Exponent">
                  <summary>Gets the interpolation exponent.</summary>
        </member>
        <member name="T:org.pdfclown.documents.functions.Type0Function">
                <summary>Sampled function using a sequence of sample values to provide an approximation for
                functions whose domains and ranges are bounded [PDF:1.6:3.9.1].</summary>
                <remarks>The samples are organized as an m-dimensional table in which each entry has n components.
                </remarks>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type0Function.DomainEncodes">
                  <summary>Gets the linear mapping of input values into the domain of the function's sample table.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type0Function.Order">
                  <summary>Gets the order of interpolation between samples.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type0Function.RangeDecodes">
                  <summary>Gets the linear mapping of sample values into the ranges of the function's output values.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type0Function.SampleBitsCount">
                  <summary>Gets the number of bits used to represent each sample.</summary>
        </member>
        <member name="P:org.pdfclown.documents.functions.Type0Function.SampleCounts">
                  <summary>Gets the number of samples in each input dimension of the sample table.</summary>
        </member>
        <member name="F:org.pdfclown.documents.functions.Type0Function.InterpolationOrderEnum.Linear">
                    Linear spline interpolation.
        </member>
        <member name="F:org.pdfclown.documents.functions.Type0Function.InterpolationOrderEnum.Cubic">
                    Cubic spline interpolation.
        </member>
        <member name="T:org.pdfclown.documents.functions.Functions">
                <summary>List of 1-input functions combined in a <see cref="P:org.pdfclown.documents.functions.Functions.Parent">stitching function</see> [PDF:1.6:3.9.3].</summary>
        </member>
        <member name="F:org.pdfclown.documents.functions.Functions.parent">
                  <summary>Parent function.</summary>
        </member>
        <member name="M:org.pdfclown.documents.functions.Functions.Validate(org.pdfclown.documents.functions.Function)">
                  <summary>Checks whether the specified function is valid for insertion.</summary>
                  <param name="value">Function to validate.</param>
        </member>
        <member name="P:org.pdfclown.documents.functions.Functions.Parent">
                  <summary>Gets the parent stitching function.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.SpecialColorSpace">
                <summary>Special color space [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.IndexedColorSpace">
                <summary>Indexed color space [PDF:1.6:4.5.5].</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:org.pdfclown.documents.contents.colorSpaces.IndexedColorSpace.GetBaseColor(org.pdfclown.documents.contents.colorSpaces.IndexedColor)" -->
        <member name="P:org.pdfclown.documents.contents.colorSpaces.IndexedColorSpace.BaseSpace">
                  <summary>Gets the base color space in which the values in the color table
                  are to be interpreted.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.IndexedColorSpace.BaseComponentValues">
                  <summary>Gets the color table.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.PatternColorSpace">
                <summary>Pattern color space [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.PatternColorSpace.UnderlyingColorSpace">
                  <summary>Gets the color space in which the actual color of the <see cref="T:org.pdfclown.documents.contents.colorSpaces.Pattern">pattern</see> is to be specified.</summary>
                  <remarks>This feature is applicable to <see cref="T:org.pdfclown.documents.contents.colorSpaces.TilingPattern">uncolored tiling patterns</see> only.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace">
                <summary>Special device color space [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.NoneComponentName">
                  <summary>Special colorant name never producing any visible output.</summary>
                  <remarks>When a color space with this component name is the current color space, painting
                  operators have no effect.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.AlternateSpace">
                  <summary>Gets the alternate color space used in case any of the <see cref="P:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.ComponentNames">component names</see>
                  in the color space do not correspond to a component available on the device.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.ComponentNames">
                  <summary>Gets the names of the color components.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.TintFunction">
                  <summary>Gets the function to transform a tint value into color component values
                  in the <see cref="P:org.pdfclown.documents.contents.colorSpaces.SpecialDeviceColorSpace.AlternateSpace">alternate color space</see>.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceNColorSpace">
                <summary>Special color space that can contain an arbitrary number of color components [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.SeparationColorSpace">
                <summary>Special color space that provides a means for specifying the use of additional colorants
                or for isolating the control of individual color components of a device color space for
                a subtractive device [PDF:1.6:4.5.5].</summary>
                <remarks>When such a space is the current color space, the current color is a single-component value,
                called a tint, that controls the application of the given colorant or color components only.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.SeparationColorSpace.AllComponentName">
                  <summary>Special colorant name referring collectively to all components available on an output
                  device, including those for the standard process components.</summary>
                  <remarks>When a separation space with this component name is the current color space, painting
                  operators apply tint values to all available components at once.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.SeparationColorSpace.ComponentNames">
                  <summary>Gets the name of the colorant that this separation color space is intended
                  to represent.</summary>
                  <remarks>Special names:
                    <list type="bullet">
                      <item><see cref="F:org.pdfclown.documents.contents.colorSpaces.SeparationColorSpace.AllComponentName">All</see></item>
                      <item><see cref="!:NoneComponentName">None</see></item>
                    </list>
                  </remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.IndexedColor">
                <summary>Indexed color value [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.IndexedColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.IndexedColor.Index">
                  <summary>Gets the color index.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CalGrayColor">
                <summary>Single-component CIE-based color value [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CalGrayColor.G">
                  <summary>Gets/Sets the gray component.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.CalRGBColor">
                <summary>CIE-based red-green-blue color value [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CalRGBColor.B">
                  <summary>Gets/Sets the blue component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CalRGBColor.G">
                  <summary>Gets/Sets the green component.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.CalRGBColor.R">
                  <summary>Gets the red component.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.DeviceNColor">
                <summary>DeviceN color value [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.DeviceNColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.LabColor">
                <summary>CIE-based L*a*b* color value [PDF:1.6:4.5.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.LabColor.A">
                  <summary>Gets/Sets the second component (a*).</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.LabColor.B">
                  <summary>Gets/Sets the third component (b*).</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.LabColor.L">
                  <summary>Gets/Sets the first component (L*).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.SeparationColor">
                <summary>Separation color value [PDF:1.6:4.5.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.SeparationColor.Get(org.pdfclown.objects.PdfArray)">
                  <summary>Gets the color corresponding to the specified components.</summary>
                  <param name="components">Color components to convert.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.SeparationColor.Intensity">
                  <summary>Gets/Sets the color intensity.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.Pattern">
                <summary>Paint that consists of a repeating graphical figure or a smoothly varying color gradient
                instead of a simple color [PDF:1.6:4.6].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.Pattern.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps the specified base object into a pattern object.</summary>
                  <param name="baseObject">Base object of a pattern object.</param>
                  <returns>Pattern object corresponding to the base object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.Pattern.GetDictionary(org.pdfclown.objects.PdfDataObject)">
                  <summary>Gets a pattern's dictionary.</summary>
                  <param name="patternDataObject">Pattern data object.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.Pattern.Matrix">
                  <summary>Gets the pattern matrix, a transformation matrix that maps the pattern's
                  internal coordinate system to the default coordinate system of the pattern's
                  parent content stream (the content stream in which the pattern is defined as a resource).</summary>
                  <remarks>The concatenation of the pattern matrix with that of the parent content stream establishes
                  the pattern coordinate space, within which all graphics objects in the pattern are interpreted.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.Pattern.Dictionary">
                  <summary>Gets this pattern's dictionary.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.ShadingPattern">
                <summary>Pattern providing a smooth transition between colors across an area to be painted [PDF:1.6:4.6.3].</summary>
                <remarks>The transition is continuous and independent of the resolution of any particular output device.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.ShadingPattern.ExtGState">
                  <summary>Gets the graphics state parameters to be put into effect temporarily
                  while the shading pattern is painted.</summary>
                  <remarks>Any parameters that are not so specified are inherited from the graphics state
                  that was in effect at the beginning of the content stream in which the pattern
                  is defined as a resource.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.ShadingPattern.Shading">
                  <summary>Gets a shading object defining the shading pattern's gradient fill.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.TilingPattern">
                <summary>Pattern consisting of a small graphical figure called <i>pattern cell</i> [PDF:1.6:4.6.2].</summary>
                <remarks>Painting with the pattern replicates the cell at fixed horizontal and vertical intervals
                to fill an area.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.contents.colorSpaces.TilingPattern.Colorize(org.pdfclown.documents.contents.colorSpaces.Color)">
                  <summary>Gets the colorized representation of this pattern.</summary>
                  <param name="color">Color to be applied to the pattern.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.Box">
                  <summary>Gets the pattern cell's bounding box (expressed in the pattern coordinate system)
                  used to clip the pattern cell.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.PaintType">
                  <summary>Gets how the color of the pattern cell is to be specified.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.Resources">
                  <summary>Gets the named resources required by the pattern's content stream.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.TilingType">
                  <summary>Gets how to adjust the spacing of tiles relative to the device pixel grid.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.XStep">
                  <summary>Gets the horizontal spacing between pattern cells (expressed in the pattern coordinate system).</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.YStep">
                  <summary>Gets the vertical spacing between pattern cells (expressed in the pattern coordinate system).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.TilingPattern.Colorized">
                  <summary>Uncolored tiling pattern ("stencil") associated to a color.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.colorSpaces.TilingPattern.Colorized.Color">
                    <summary>Gets the color applied to the stencil.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.TilingPattern.PaintTypeEnum">
                  <summary>Pattern cell color mode.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.TilingPattern.PaintTypeEnum.Colored">
                    <summary>The pattern's content stream specifies the colors used to paint the pattern cell.</summary>
                    <remarks>When the content stream begins execution, the current color is the one
                    that was initially in effect in the pattern's parent content stream.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.TilingPattern.PaintTypeEnum.Uncolored">
                    <summary>The pattern's content stream does NOT specify any color information.</summary>
                    <remarks>
                      <para>Instead, the entire pattern cell is painted with a separately specified color
                      each time the pattern is used; essentially, the content stream describes a stencil
                      through which the current color is to be poured.</para>
                      <para>The content stream must not invoke operators that specify colors
                      or other color-related parameters in the graphics state.</para>
                    </remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.TilingPattern.TilingTypeEnum">
                  Spacing adjustment of tiles relative to the device pixel grid.
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.TilingPattern.TilingTypeEnum.ConstantSpacing">
                    <summary>Pattern cells are spaced consistently, that is by a multiple of a device pixel.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.TilingPattern.TilingTypeEnum.VariableSpacing">
                    <summary>The pattern cell is not distorted, but the spacing between pattern cells
                    may vary by as much as 1 device pixel, both horizontally and vertically,
                    when the pattern is painted.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.colorSpaces.TilingPattern.TilingTypeEnum.FasterConstantSpacing">
                    <summary>Pattern cells are spaced consistently as in tiling type 1
                    but with additional distortion permitted to enable a more efficient implementation.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.colorSpaces.Shading">
                <summary>Shading object [PDF:1.6:4.6.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.ShadingResources">
                <summary>Shading resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.PatternResources">
                <summary>Pattern resources collection [PDF:1.6:3.7.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.BlockComposer">
                <summary>
                  <para>Content block composer.</para>
                  <para>It provides content positioning functionalities for page typesetting.</para>
                </summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.frame">
            <summary>Area available for the block contents.</summary> 
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.boundBox">
            <summary>Actual area occupied by the block contents.</summary> 
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.Begin(System.Drawing.RectangleF,org.pdfclown.documents.contents.composition.XAlignmentEnum,org.pdfclown.documents.contents.composition.YAlignmentEnum)">
                  <summary>Begins a content block.</summary>
                  <param name="frame">Block boundaries.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
                  <param name="yAlignment">Vertical alignment.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.End">
                  <summary>Ends the content block.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowBreak">
                  <summary>Ends current paragraph.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowBreak(System.Drawing.SizeF)">
                  <summary>Ends current paragraph, specifying the offset of the next one.</summary>
                  <remarks>This functionality allows higher-level features such as paragraph indentation
                  and margin.</remarks>
                  <param name="offset">Relative location of the next paragraph.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowBreak(org.pdfclown.documents.contents.composition.XAlignmentEnum)">
                  <summary>Ends current paragraph, specifying the alignment of the next one.</summary>
                  <remarks>This functionality allows higher-level features such as paragraph indentation and margin.</remarks>
                  <param name="xAlignment">Horizontal alignment.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowBreak(System.Drawing.SizeF,org.pdfclown.documents.contents.composition.XAlignmentEnum)">
                  <summary>Ends current paragraph, specifying the offset and alignment of the next one.</summary>
                  <remarks>This functionality allows higher-level features such as paragraph indentation and margin.</remarks>
                  <param name="offset">Relative location of the next paragraph.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowText(System.String)">
                  <summary>Shows text.</summary>
                  <remarks>Default line alignment is applied.</remarks>
                  <param name="text">Text to show.</param>
                  <returns>Last shown character index.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:org.pdfclown.documents.contents.composition.BlockComposer.ShowText(System.String,System.Object)" -->
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject,System.Nullable{System.Drawing.SizeF})">
                  <summary>Shows the specified external object.</summary>
                  <remarks>Default line alignment is applied.</remarks>
                  <param name="xObject">External object.</param>
                  <param name="size">Size of the external object.</param>
                  <returns>Whether the external object was successfully shown.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:org.pdfclown.documents.contents.composition.BlockComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject,System.Nullable{System.Drawing.SizeF},System.Object)" -->
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.AddRowObject(org.pdfclown.documents.contents.composition.BlockComposer.RowObject,System.Object)">
                  <summary>Adds an object to the current row.</summary>
                  <param name="obj">Object to add.</param>
                  <param name="lineAlignment">Object's line alignment.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.BeginRow">
                  <summary>Begins a content row.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.BlockComposer.EndRow(System.Boolean)">
                  <summary>Ends the content row.</summary>
                  <param name="broken">Indicates whether this is the end of a paragraph.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.BaseComposer">
                  <summary>Gets the base composer.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.BoundBox">
                  <summary>Gets the area occupied by the already-placed block contents.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.Frame">
                  <summary>Gets the area where to place the block contents.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.Hyphenation">
                  <summary>Gets/Sets whether the hyphenation algorithm has to be applied.</summary>
                  <remarks>Initial value: <code>false</code>.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.HyphenationCharacter">
                  <summary>Gets/Sets the character shown at the end of the line before a hyphenation break.
                  </summary>
                  <remarks>Initial value: hyphen symbol (U+002D, i.e. '-').</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.LineAlignment">
                  <summary>Gets/Sets the default line alignment.</summary>
                  <remarks>Initial value: <see cref="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.BaseLine"/>.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.LineSpace">
                  <summary>Gets/Sets the text interline spacing.</summary>
                  <remarks>Initial value: 0.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.Scanner">
                  <summary>Gets the content scanner.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.XAlignment">
                  <summary>Gets the horizontal alignment applied to the current content block.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.BlockComposer.YAlignment">
                  <summary>Gets the vertical alignment applied to the current content block.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.Row.BaseLine">
                    <summary>Row base line.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.Row.Container">
                    <summary>Row's graphics objects container.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.Row.Objects">
                    <summary>Row's objects.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.Row.SpaceCount">
                    <summary>Number of space characters.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.Row.Y">
                    <summary>Vertical location relative to the block frame.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.RowObject.BaseLine">
                    <summary>Base line.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.RowObject.Container">
                    <summary>Graphics objects container associated to this object.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.BlockComposer.RowObject.LineAlignment">
                    <summary>Line alignment (can be either LineAlignmentEnum or Double).</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.PrimitiveComposer">
                <summary>
                  <para>Content stream primitive composer.</para>
                  <para>It provides the basic (primitive) operations described by the PDF specification for
                  graphics content composition.</para>
                </summary>
                <remarks>This class leverages the object-oriented content stream modelling infrastructure, which
                encompasses 1st-level content stream objects (operations), 2nd-level content stream objects
                (graphics objects) and full graphics state support.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Add(org.pdfclown.documents.contents.objects.ContentObject)">
                  <summary>Adds a content object.</summary>
                  <returns>The added content object.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Applies a transformation to the coordinate system from user space to device space
                  [PDF:1.6:4.3.3].</summary>
                  <remarks>The transformation is applied to the current transformation matrix (CTM) by
                  concatenation, i.e. it doesn't replace it.</remarks>
                  <param name="a">Item 0,0 of the matrix.</param>
                  <param name="b">Item 0,1 of the matrix.</param>
                  <param name="c">Item 1,0 of the matrix.</param>
                  <param name="d">Item 1,1 of the matrix.</param>
                  <param name="e">Item 2,0 of the matrix.</param>
                  <param name="f">Item 2,1 of the matrix.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyState(org.pdfclown.objects.PdfName)">
                  <summary>Applies the specified state parameters [PDF:1.6:4.3.4].</summary>
                  <param name="name">Resource identifier of the state parameters object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyState(org.pdfclown.documents.contents.ExtGState)">
                  <summary>Applies the specified state parameters [PDF:1.6:4.3.4].</summary>
                  <remarks>The <code>value</code> is checked for presence in the current resource dictionary: if
                  it isn't available, it's automatically added. If you need to avoid such a behavior, use
                  <see cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyState(org.pdfclown.objects.PdfName)"/>.</remarks>
                  <param name="state">State parameters object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Begin(org.pdfclown.documents.contents.objects.CompositeObject)">
                  <summary>Adds a composite object beginning it.</summary>
                  <returns>Added composite object.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginLayer(org.pdfclown.documents.contents.layers.LayerEntity)">
                  <summary>Begins a new layered-content sequence [PDF:1.6:4.10.2].</summary>
                  <param name="layer">Layer entity enclosing the layered content.</param>
                  <returns>Added layered-content sequence.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginLayer(org.pdfclown.objects.PdfName)">
                  <summary>Begins a new layered-content sequence [PDF:1.6:4.10.2].</summary>
                  <param name="layerName">Resource identifier of the {@link LayerEntity} enclosing the layered
                  content.</param>
                  <returns>Added layered-content sequence.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginLocalState">
                  <summary>Begins a new nested graphics state context [PDF:1.6:4.3.1].</summary>
                  <returns>Added local graphics state object.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginMarkedContent(org.pdfclown.objects.PdfName)">
                  <summary>Begins a new marked-content sequence [PDF:1.6:10.5].</summary>
                  <param name="tag">Marker indicating the role or significance of the marked content.</param>
                  <returns>Added marked-content sequence.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginMarkedContent(org.pdfclown.objects.PdfName,org.pdfclown.documents.contents.PropertyList)">
                  <summary>Begins a new marked-content sequence [PDF:1.6:10.5].</summary>
                  <param name="tag">Marker indicating the role or significance of the marked content.</param>
                  <param name="propertyList"><see cref="T:org.pdfclown.documents.contents.PropertyList"/> describing the marked content.</param>
                  <returns>Added marked-content sequence.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginMarkedContent(org.pdfclown.objects.PdfName,org.pdfclown.objects.PdfName)">
                  <summary>Begins a new marked-content sequence [PDF:1.6:10.5].</summary>
                  <param name="tag">Marker indicating the role or significance of the marked content.</param>
                  <param name="propertyListName">Resource identifier of the <see cref="T:org.pdfclown.documents.contents.PropertyList"/> describing
                  the marked content.</param>
                  <returns>Added marked-content sequence.</returns>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Clip">
                  <summary>Modifies the current clipping path by intersecting it with the current path
                  [PDF:1.6:4.4.1].</summary>
                  <remarks>It can be validly called only just before painting the current path.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ClosePath">
                  <summary>Closes the current subpath by appending a straight line segment from the current point
                  to the starting point of the subpath [PDF:1.6:4.4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawArc(System.Drawing.RectangleF,System.Double,System.Double)">
                  <summary>Draws a circular arc.</summary>
                  <param name="location">Arc location.</param>
                  <param name="startAngle">Starting angle.</param>
                  <param name="endAngle">Ending angle.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawArc(System.Drawing.RectangleF,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Draws an arc.</summary>
                  <param name="location">Arc location.</param>
                  <param name="startAngle">Starting angle.</param>
                  <param name="endAngle">Ending angle.</param>
                  <param name="branchWidth">Distance between the spiral branches. '0' value degrades to a circular
                  arc.</param>
                  <param name="branchRatio">Linear coefficient applied to the branch width. '1' value degrades to
                  a constant branch width.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawCurve(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
                  <summary>Draws a cubic Bezier curve from the current point [PDF:1.6:4.4.1].</summary>
                  <param name="endPoint">Ending point.</param>
                  <param name="startControl">Starting control point.</param>
                  <param name="endControl">Ending control point.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawCurve(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
                  <summary>Draws a cubic Bezier curve [PDF:1.6:4.4.1].</summary>
                  <param name="startPoint">Starting point.</param>
                  <param name="endPoint">Ending point.</param>
                  <param name="startControl">Starting control point.</param>
                  <param name="endControl">Ending control point.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawEllipse(System.Drawing.RectangleF)">
                  <summary>Draws an ellipse.</summary>
                  <param name="location">Ellipse location.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Fill"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.FillStroke"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawLine(System.Drawing.PointF)">
                  <summary>Draws a line from the current point [PDF:1.6:4.4.1].</summary>
                  <param name="endPoint">Ending point.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawLine(System.Drawing.PointF,System.Drawing.PointF)">
                  <summary>Draws a line [PDF:1.6:4.4.1].</summary>
                  <param name="startPoint">Starting point.</param>
                  <param name="endPoint">Ending point.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawPolygon(System.Drawing.PointF[])">
                  <summary>Draws a polygon.</summary>
                  <remarks>A polygon is the same as a multiple line except that it's a closed path.</remarks>
                  <param name="points">Points.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Fill"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.FillStroke"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawPolyline(System.Drawing.PointF[])">
                  <summary>Draws a multiple line.</summary>
                  <param name="points">Points.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawRectangle(System.Drawing.RectangleF)">
                  <summary>Draws a rectangle [PDF:1.6:4.4.1].</summary>
                  <param name="location">Rectangle location.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Fill"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.FillStroke"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawRectangle(System.Drawing.RectangleF,System.Double)">
                  <summary>Draws a rounded rectangle.</summary>
                  <param name="location">Rectangle location.</param>
                  <param name="radius">Vertex radius, '0' value degrades to squared vertices.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Fill"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.FillStroke"/>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.DrawSpiral(System.Drawing.PointF,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Draws a spiral.</summary>
                  <param name="center">Spiral center.</param>
                  <param name="startAngle">Starting angle.</param>
                  <param name="endAngle">Ending angle.</param>
                  <param name="branchWidth">Distance between the spiral branches.</param>
                  <param name="branchRatio">Linear coefficient applied to the branch width.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End">
                  <summary>Ends the current (innermostly-nested) composite object.</summary>
                  <seealso cref="!:Begin(CompositeObject)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Fill">
                  <summary>Fills the path using the current color [PDF:1.6:4.4.2].</summary>
                  <seealso cref="!:SetFillColor(Color)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.FillStroke">
                  <summary>Fills and then strokes the path using the current colors [PDF:1.6:4.4.2].</summary>
                  <seealso cref="!:SetFillColor(Color)"/>
                  <seealso cref="!:SetStrokeColor(Color)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Flush">
                  <summary>Serializes the contents into the content stream.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Rotate(System.Double)">
                  <summary>Applies a rotation to the coordinate system from user space to device space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="angle">Rotational counterclockwise angle.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Rotate(System.Double,System.Drawing.PointF)">
                  <summary>Applies a rotation to the coordinate system from user space to device space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="angle">Rotational counterclockwise angle.</param>
                  <param name="origin">Rotational pivot point; it becomes the new coordinates origin.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Scale(System.Double,System.Double)">
                  <summary>Applies a scaling to the coordinate system from user space to device space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="ratioX">Horizontal scaling ratio.</param>
                  <param name="ratioY">Vertical scaling ratio.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetCharSpace(System.Double)">
                  <summary>Sets the character spacing parameter [PDF:1.6:5.2.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetFillColor(org.pdfclown.documents.contents.colorSpaces.Color)">
                  <summary>Sets the nonstroking color value [PDF:1.6:4.5.7].</summary>
                  <seealso cref="!:SetStrokeColor(Color)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetFont(org.pdfclown.objects.PdfName,System.Double)">
                  <summary>Sets the font [PDF:1.6:5.2].</summary>
                  <param name="name">Resource identifier of the font.</param>
                  <param name="size">Scaling factor (points).</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetFont(org.pdfclown.documents.contents.fonts.Font,System.Double)">
                  <summary>Sets the font [PDF:1.6:5.2].</summary>
                  <remarks>The <paramref cref="!:value"/> is checked for presence in the current resource
                  dictionary: if it isn't available, it's automatically added. If you need to avoid such a
                  behavior, use <see cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetFont(org.pdfclown.objects.PdfName,System.Double)"/>.</remarks>
                  <param name="value">Font.</param>
                  <param name="size">Scaling factor (points).</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetTextScale(System.Double)">
                  <summary>Sets the text horizontal scaling [PDF:1.6:5.2.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetTextLead(System.Double)">
                  <summary>Sets the text leading [PDF:1.6:5.2.4].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetLineCap(org.pdfclown.documents.contents.LineCapEnum)">
                  <summary>Sets the line cap style [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetLineDash(org.pdfclown.documents.contents.LineDash)">
                  <summary>Sets the line dash pattern [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetLineJoin(org.pdfclown.documents.contents.LineJoinEnum)">
                  <summary>Sets the line join style [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetLineWidth(System.Double)">
                  <summary>Sets the line width [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Sets the transformation of the coordinate system from user space to device space
                  [PDF:1.6:4.3.3].</summary>
                  <param name="a">Item 0,0 of the matrix.</param>
                  <param name="b">Item 0,1 of the matrix.</param>
                  <param name="c">Item 1,0 of the matrix.</param>
                  <param name="d">Item 1,1 of the matrix.</param>
                  <param name="e">Item 2,0 of the matrix.</param>
                  <param name="f">Item 2,1 of the matrix.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetMiterLimit(System.Double)">
                  <summary>Sets the miter limit [PDF:1.6:4.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetStrokeColor(org.pdfclown.documents.contents.colorSpaces.Color)">
                  <summary>Sets the stroking color value [PDF:1.6:4.5.7].</summary>
                  <seealso cref="!:SetFillColor(Color)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetTextRenderMode(org.pdfclown.documents.contents.TextRenderModeEnum)">
                  <summary>Sets the text rendering mode [PDF:1.6:5.2.5].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetTextRise(System.Double)">
                  <summary>Sets the text rise [PDF:1.6:5.2.6].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetWordSpace(System.Double)">
                  <summary>Sets the word spacing [PDF:1.6:5.2.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String)">
                  <summary>Shows the specified text on the page at the current location [PDF:1.6:5.3.2].</summary>
                  <param name="value">Text to show.</param>
                  <returns>Bounding box vertices in default user space units.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String,org.pdfclown.documents.interaction.actions.Action)">
                  <summary>Shows the link associated to the specified text on the page at the current location.
                  </summary>
                  <param name="value">Text to show.</param>
                  <param name="action">Action to apply when the link is activated.</param>
                  <returns>Link.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String,System.Drawing.PointF)">
                  <summary>Shows the specified text on the page at the specified location [PDF:1.6:5.3.2].
                  </summary>
                  <param name="value">Text to show.</param>
                  <param name="location">Position at which showing the text.</param>
                  <returns>Bounding box vertices in default user space units.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String,System.Drawing.PointF,org.pdfclown.documents.interaction.actions.Action)">
                  <summary>Shows the link associated to the specified text on the page at the specified location.
                  </summary>
                  <param name="value">Text to show.</param>
                  <param name="location">Position at which showing the text.</param>
                  <param name="action">Action to apply when the link is activated.</param>
                  <returns>Link.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String,System.Drawing.PointF,org.pdfclown.documents.contents.composition.XAlignmentEnum,org.pdfclown.documents.contents.composition.YAlignmentEnum,System.Double)">
                  <summary>Shows the specified text on the page at the specified location [PDF:1.6:5.3.2].
                  </summary>
                  <param name="value">Text to show.</param>
                  <param name="location">Anchor position at which showing the text.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
                  <param name="yAlignment">Vertical alignment.</param>
                  <param name="rotation">Rotational counterclockwise angle.</param>
                  <returns>Bounding box vertices in default user space units.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowText(System.String,System.Drawing.PointF,org.pdfclown.documents.contents.composition.XAlignmentEnum,org.pdfclown.documents.contents.composition.YAlignmentEnum,System.Double,org.pdfclown.documents.interaction.actions.Action)">
                  <summary>Shows the link associated to the specified text on the page at the specified location.
                  </summary>
                  <param name="value">Text to show.</param>
                  <param name="location">Anchor position at which showing the text.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
                  <param name="yAlignment">Vertical alignment.</param>
                  <param name="rotation">Rotational counterclockwise angle.</param>
                  <param name="action">Action to apply when the link is activated.</param>
                  <returns>Link.</returns>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName)">
                  <summary>Shows the specified external object [PDF:1.6:4.7].</summary>
                  <param name="name">Resource identifier of the external object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject)">
                  <summary>Shows the specified external object [PDF:1.6:4.7].</summary>
                  <remarks>The <paramref cref="!:value"/> is checked for presence in the current resource
                  dictionary: if it isn't available, it's automatically added. If you need to avoid such a
                  behavior, use <see cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName)"/>.</remarks>
                  <param name="value">External object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName,System.Drawing.PointF)">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <param name="name">Resource identifier of the external object.</param>
                  <param name="location">Position at which showing the external object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject,System.Drawing.PointF)">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <remarks>The <paramref cref="!:value"/> is checked for presence in the current resource
                  dictionary: if it isn't available, it's automatically added. If you need to avoid such a
                  behavior, use <see cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName,System.Drawing.PointF)"/>.</remarks>
                  <param name="value">External object.</param>
                  <param name="location">Position at which showing the external object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName,System.Drawing.PointF,System.Nullable{System.Drawing.SizeF})">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <param name="name">Resource identifier of the external object.</param>
                  <param name="location">Position at which showing the external object.</param>
                  <param name="size">Size of the external object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject,System.Drawing.PointF,System.Nullable{System.Drawing.SizeF})">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <remarks>The <paramref cref="!:value"/> is checked for presence in the current resource
                  dictionary: if it isn't available, it's automatically added. If you need to avoid such a
                  behavior, use <see cref="!:ShowXObject(PdfName,PointF,SizeF)"/>.</remarks>
                  <param name="value">External object.</param>
                  <param name="location">Position at which showing the external object.</param>
                  <param name="size">Size of the external object.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.objects.PdfName,System.Drawing.PointF,System.Nullable{System.Drawing.SizeF},org.pdfclown.documents.contents.composition.XAlignmentEnum,org.pdfclown.documents.contents.composition.YAlignmentEnum,System.Double)">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <param name="name">Resource identifier of the external object.</param>
                  <param name="location">Position at which showing the external object.</param>
                  <param name="size">Size of the external object.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
                  <param name="yAlignment">Vertical alignment.</param>
                  <param name="rotation">Rotational counterclockwise angle.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ShowXObject(org.pdfclown.documents.contents.xObjects.XObject,System.Drawing.PointF,System.Nullable{System.Drawing.SizeF},org.pdfclown.documents.contents.composition.XAlignmentEnum,org.pdfclown.documents.contents.composition.YAlignmentEnum,System.Double)">
                  <summary>Shows the specified external object at the specified position [PDF:1.6:4.7].</summary>
                  <remarks>The <paramref cref="!:value"/> is checked for presence in the current resource
                  dictionary: if it isn't available, it's automatically added. If you need to avoid such a
                  behavior, use <see cref="!:ShowXObject(PdfName,PointF,SizeF,XAlignmentEnum,YAlignmentEnum,double)"/>.
                  </remarks>
                  <param name="value">External object.</param>
                  <param name="location">Position at which showing the external object.</param>
                  <param name="size">Size of the external object.</param>
                  <param name="xAlignment">Horizontal alignment.</param>
                  <param name="yAlignment">Vertical alignment.</param>
                  <param name="rotation">Rotational counterclockwise angle.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.StartPath(System.Drawing.PointF)">
                  <summary>Begins a subpath [PDF:1.6:4.4.1].</summary>
                  <param name="startPoint">Starting point.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Stroke">
                  <summary>Strokes the path using the current color [PDF:1.6:4.4.2].</summary>
                  <seealso cref="!:SetStrokeColor(Color)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.Translate(System.Double,System.Double)">
                  <summary>Applies a translation to the coordinate system from user space to device space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="distanceX">Horizontal distance.</param>
                  <param name="distanceY">Vertical distance.</param>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ApplyMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.BeginText">
                  <summary>Begins a text object [PDF:1.6:5.3].</summary>
                  <seealso cref="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.End"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.RotateText(System.Double)">
                  <summary>Applies a rotation to the coordinate system from text space to user space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="angle">Rotational counterclockwise angle.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.ScaleText(System.Double,System.Double)">
                  <summary>Applies a scaling to the coordinate system from text space to user space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="ratioX">Horizontal scaling ratio.</param>
                  <param name="ratioY">Vertical scaling ratio.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.SetTextMatrix(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
                  <summary>Sets the transformation of the coordinate system from text space to user space
                  [PDF:1.6:5.3.1].</summary>
                  <remarks>The transformation replaces the current text matrix.</remarks>
                  <param name="a">Item 0,0 of the matrix.</param>
                  <param name="b">Item 0,1 of the matrix.</param>
                  <param name="c">Item 1,0 of the matrix.</param>
                  <param name="d">Item 1,1 of the matrix.</param>
                  <param name="e">Item 2,0 of the matrix.</param>
                  <param name="f">Item 2,1 of the matrix.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.TranslateText(System.Double,System.Double)">
                  <summary>Applies a translation to the coordinate system from text space to user space
                  [PDF:1.6:4.2.2].</summary>
                  <param name="distanceX">Horizontal distance.</param>
                  <param name="distanceY">Vertical distance.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.TranslateTextRelative(System.Double,System.Double)">
                  <summary>Applies a translation to the coordinate system from text space to user space,
                  relative to the start of the current line [PDF:1.6:5.3.1].</summary>
                  <param name="offsetX">Horizontal offset.</param>
                  <param name="offsetY">Vertical offset.</param>
        </member>
        <member name="M:org.pdfclown.documents.contents.composition.PrimitiveComposer.TranslateTextToNextLine">
                  <summary>Applies a translation to the coordinate system from text space to user space,
                  moving to the start of the next line [PDF:1.6:5.3.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.PrimitiveComposer.Scanner">
                  <summary>Gets/Sets the content stream scanner.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.composition.PrimitiveComposer.State">
                  <summary>Gets the current graphics state [PDF:1.6:4.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.RotationEnum">
                <summary>Rotation (clockwise) [PDF:1.6:3.6.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.RotationEnum.Downward">
                  Downward (0° clockwise).
        </member>
        <member name="F:org.pdfclown.documents.contents.RotationEnum.Leftward">
                  Leftward (90° clockwise).
        </member>
        <member name="F:org.pdfclown.documents.contents.RotationEnum.Upward">
                  Upward (180° clockwise).
        </member>
        <member name="F:org.pdfclown.documents.contents.RotationEnum.Rightward">
                  Rightward (270° clockwise).
        </member>
        <member name="M:org.pdfclown.documents.contents.RotationEnumExtension.Get(org.pdfclown.objects.PdfInteger)">
                  <summary>Gets the direction corresponding to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.WindModeEnum">
                <summary>Winding rule for determining which points lie inside a path [PDF:1.6:4.4.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.WindModeEnum.EvenOdd">
                  <summary>Even-odd winding rule.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.WindModeEnum.NonZero">
                  <summary>Non-zero winding rule.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.WindModeEnumExtension.ToGdi(org.pdfclown.documents.contents.WindModeEnum)">
                  <summary>Converts this constant into its equivalent GDI+ code.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.MarkedContentPoint">
                <summary>'Marked-content point' operation [PDF:1.6:10.5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceCMYKFillColor">
                <summary>'Set the color to use for nonstroking operations in device CMYK color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceCMYKStrokeColor">
                <summary>'Set the color to use for stroking operations in device CMYK color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceGrayFillColor">
                <summary>'Set the color to use for nonstroking operations in device gray color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceGrayStrokeColor">
                <summary>'Set the color to use for stroking operations in device gray color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceRGBFillColor">
                <summary>'Set the color to use for nonstroking operations in device RGB color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.SetDeviceRGBStrokeColor">
                <summary>'Set the color to use for stroking operations in device RGB color space'
                operation [PDF:1.6:4.5.7].</summary>
        </member>
        <member name="T:org.pdfclown.tools.Renderer">
                <summary>Tool for rendering <see cref="T:org.pdfclown.documents.contents.IContentContext">content contexts</see>.</summary>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.GetPrintDocument(org.pdfclown.documents.Document)">
                  <summary>Wraps the specified document into a printable object.</summary>
                  <param name="document">Document to wrap for printing.</param>
                  <returns>Printable object.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.GetPrintDocument(System.Collections.Generic.IList{org.pdfclown.documents.Page})">
                  <summary>Wraps the specified page collection into a printable object.</summary>
                  <param name="pages">Page collection to print.</param>
                  <returns>Printable object.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Print(org.pdfclown.documents.Document)">
                  <summary>Prints silently the specified document.</summary>
                  <param name="document">Document to print.</param>
                  <returns>Whether the print was fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Print(org.pdfclown.documents.Document,System.Boolean)">
                  <summary>Prints the specified document.</summary>
                  <param name="document">Document to print.</param>
                  <param name="silent">Whether to avoid showing a print dialog.</param>
                  <returns>Whether the print was fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Print(System.Collections.Generic.IList{org.pdfclown.documents.Page})">
                  <summary>Prints silently the specified page collection.</summary>
                  <param name="pages">Page collection to print.</param>
                  <returns>Whether the print was fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Print(System.Collections.Generic.IList{org.pdfclown.documents.Page},System.Boolean)">
                  <summary>Prints the specified page collection.</summary>
                  <param name="pages">Page collection to print.</param>
                  <param name="silent">Whether to avoid showing a print dialog.</param>
                  <returns>Whether the print was fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Render(org.pdfclown.documents.contents.Contents,System.Drawing.SizeF)">
                  <summary>Renders the specified contents into an image context.</summary>
                  <param name="contents">Source contents.</param>
                  <param name="size">Image size expressed in device-space units (that is typically pixels).</param>
                  <returns>Image representing the rendered contents.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Render(org.pdfclown.documents.contents.IContentContext,System.Drawing.SizeF)">
                  <summary>Renders the specified content context into an image context.</summary>
                  <param name="contentContext">Source content context.</param>
                  <param name="size">Image size expressed in device-space units (that is typically pixels).</param>
                  <returns>Image representing the rendered contents.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Render(org.pdfclown.documents.contents.Contents,System.Drawing.SizeF,System.Nullable{System.Drawing.RectangleF})">
                  <summary>Renders the specified contents into an image context.</summary>
                  <param name="contents">Source contents.</param>
                  <param name="size">Image size expressed in device-space units (that is typically pixels).</param>
                  <param name="area">Content area to render; <code>null</code> corresponds to the entire
                   <see cref="P:org.pdfclown.documents.contents.IContentContext.Box">content bounding box</see>.</param>
                  <returns>Image representing the rendered contents.</returns>
        </member>
        <member name="M:org.pdfclown.tools.Renderer.Render(org.pdfclown.documents.contents.IContentContext,System.Drawing.SizeF,System.Nullable{System.Drawing.RectangleF})">
                  <summary>Renders the specified content context into an image context.</summary>
                  <param name="contentContext">Source content context.</param>
                  <param name="size">Image size expressed in device-space units (that is typically pixels).</param>
                  <param name="area">Content area to render; <code>null</code> corresponds to the entire
                   <see cref="P:org.pdfclown.documents.contents.IContentContext.Box">content bounding box</see>.</param>
                  <returns>Image representing the rendered contents.</returns>
        </member>
        <member name="T:org.pdfclown.tools.Renderer.PrintDocument">
                  <summary>Printable document.</summary>
                  <remarks>It wraps a page collection for printing purposes.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.contents.tokens.ContentParser">
                <summary>Content stream parser [PDF:1.6:3.7.1].</summary>
        </member>
        <member name="T:org.pdfclown.tokens.BaseParser">
                <summary>Base PDF parser [PDF:1.7:3.2].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.BaseParser.ParsePdfObject">
                  <summary>Parses the current PDF object [PDF:1.6:3.2].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.BaseParser.ParsePdfObject(System.Int32)">
                  <summary>Parses a PDF object after moving to the given token offset.</summary>
                  <param name="offset">Number of tokens to skip before reaching the intended one.</param>
                  <seealso cref="M:org.pdfclown.tokens.BaseParser.ParsePdfObject"/>
        </member>
        <member name="M:org.pdfclown.documents.contents.tokens.ContentParser.ParseContentObject">
                  <summary>Parses the next content object [PDF:1.6:4.1].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.tokens.ContentParser.ParseContentObjects">
                  <summary>Parses the next content objects.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.tokens.ContentParser.ParseOperation">
                  <summary>Parses the next operation.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.FileParser">
                <summary>PDF file parser [PDF:1.7:3.2,3.4].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.FileParser.RetrieveVersion">
                  <summary>Retrieves the PDF version of the file [PDF:1.6:3.4.1].</summary>
        </member>
        <member name="M:org.pdfclown.tokens.FileParser.RetrieveXRefOffset">
                  <summary>Retrieves the starting position of the last xref-table section [PDF:1.6:3.4.4].</summary>
        </member>
        <member name="M:org.pdfclown.util.collections.generic.Extension.SetAll``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
                  <summary>Sets all the specified entries into this dictionary.</summary>
                  <remarks>The effect of this call is equivalent to that of calling the indexer on this dictionary
                  once for each entry in the specified enumerable.</remarks>
        </member>
        <member name="T:org.pdfclown.util.math.geom.Quad">
                <summary>Quadrilateral shape.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interchange.metadata.Metadata">
                <summary>Metadata stream [PDF:1.6:10.2.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.interchange.metadata.Metadata.Content">
                  <summary>Gets/Sets the metadata contents.</summary>
        </member>
        <member name="T:org.pdfclown.util.parsers.ParseException">
                <summary>Exception thrown in case of unexpected condition while parsing.</summary>
        </member>
        <member name="P:org.pdfclown.util.parsers.ParseException.Position">
                  <summary>Gets the offset where error happened.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.ILayerConfiguration">
                <summary>Optional content configuration interface [PDF:1.7:4.10.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.Creator">
                  <summary>Gets/Sets the name of the application or feature that created this configuration.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.Layers">
                  <summary>Gets the layer structure.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.ListMode">
                  <summary>Gets/Sets the list mode specifying which layers should be displayed to the user.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.OptionGroups">
                  <summary>Gets the groups of layers whose states are intended to follow a radio button paradigm
                  (that is exclusive visibility within the same group).</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.Title">
                  <summary>Gets/Sets the configuration name.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerConfiguration.Visible">
                  <summary>Gets/Sets whether all the layers in the document are initialize to be visible when
                  this configuration is applied.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.ILayerNode">
                <summary>Object that can be inserted into a hierarchical layer structure.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerNode.Layers">
                  <summary>Gets the sublayers.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.ILayerNode.Title">
                  <summary>Gets/Sets the text label.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.Layer">
                <summary>Optional content group [PDF:1.7:4.10.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerEntity">
                <summary>Layer entity.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerEntity.Membership">
                  <summary>Gets the default membership.</summary>
                  <remarks>This collection corresponds to the hierarchical relation between this layer entity
                  and its ascendants.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityLayers">
                  <summary>Gets the layers whose states determine the visibility of content controlled by this
                  entity.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicy">
                  <summary>Gets/Sets the visibility policy of this entity.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicyEnum">
                  <summary>Membership visibility policy [PDF:1.7:4.10.1].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicyEnum.AllOn">
                    <summary>Visible only if all of the visibility layers are ON.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicyEnum.AnyOn">
                    <summary>Visible if any of the visibility layers are ON.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicyEnum.AnyOff">
                    <summary>Visible if any of the visibility layers are OFF.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerEntity.VisibilityPolicyEnum.AllOff">
                    <summary>Visible only if all of the visibility layers are OFF.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.layers.Layer.FindLayersLocation">
                  <summary>Finds the location of the sublayers object in the default configuration; in case no
                  sublayers object is associated to this object, its virtual position is indicated.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.layers.Layer.FindLayersLocation(org.pdfclown.documents.contents.layers.LayerConfiguration)">
                  <summary>Finds the location of the sublayers object in the specified configuration; in case no
                  sublayers object is associated to this object, its virtual position is indicated.</summary>
                  <param name="configuration">Configuration context.</param>
                  <returns><code>null</code>, if this layer is outside the specified configuration.</returns>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.ContentType">
                  <summary>Gets/Sets the name of the type of content controlled by the group.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Creator">
                  <summary>Gets/Sets the name of the application that created this layer.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Exportable">
                  <summary>Gets/Sets whether this layer is visible when the document is saved by a viewer
                  application to a format that does not support optional content.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Language">
                  <summary>Gets/Sets the language (and possibly locale) of the content controlled by this layer.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Layers">
                  <summary>Gets/Sets the sublayers.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Locked">
                  <summary>Gets/Sets whether the default visibility of this layer cannot be changed through the
                  user interface of a viewer application.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Printable">
                  <summary>Gets/Sets whether this layer is visible when the document is printed from a viewer
                  application.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Viewable">
                  <summary>Gets/Sets whether this layer is visible when the document is opened in a viewer
                  application.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.Visible">
                  <summary>Gets/Sets whether this layer is initially visible.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.Layer.ZoomRange">
                  <summary>Gets/Sets the range of magnifications at which the content in this layer is best
                  viewed.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.Layer.LayersLocation">
                  <summary>Sublayers location within a configuration structure.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.LayersLocation.Index">
                    <summary>Sublayers ordinal position within the parent sublayers.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.LayersLocation.ParentLayerObject">
                    <summary>Parent layer object.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.LayersLocation.ParentLayersObject">
                    <summary>Parent sublayers object.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.LayersLocation.Levels">
                    <summary>Upper levels.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.Layer.StateEnum">
                  <summary>Layer state.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.StateEnum.On">
                    <summary>Active.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.Layer.StateEnum.Off">
                    <summary>Inactive.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerConfiguration">
                <summary>Optional content configuration [PDF:1.7:4.10.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.layers.LayerConfiguration.SetUsageApplication(org.pdfclown.objects.PdfName,org.pdfclown.objects.PdfName,org.pdfclown.documents.contents.layers.Layer,System.Boolean)">
                  <summary>Sets the usage application for the specified factors.</summary>
                  <param name="event_">Situation in which this usage application should be used. May be
                    <see cref="F:org.pdfclown.objects.PdfName.View">View</see>, <see cref="F:org.pdfclown.objects.PdfName.Print">Print</see> or <see cref="F:org.pdfclown.objects.PdfName.Export">Export</see>.</param>
                  <param name="category">Layer usage entry to consider when managing the states of the layer.
                  </param>
                  <param name="layer">Layer which should have its state automatically managed based on its usage
                    information.</param>
                  <param name="retain">Whether this usage application has to be kept or removed.</param>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerConfiguration.OffLayersObject">
                  <summary>Gets the collection of the layer objects whose state is set to OFF.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerConfiguration.OnLayersObject">
                  <summary>Gets the collection of the layer objects whose state is set to ON.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerConfiguration.BaseStateEnum">
                  <summary>Base state used to initialize the states of all the layers in a document when this
                  configuration is applied.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerConfiguration.BaseStateEnum.On">
                    <summary>All the layers are visible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerConfiguration.BaseStateEnum.Off">
                    <summary>All the layers are invisible.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.LayerConfiguration.BaseStateEnum.Unchanged">
                    <summary>All the layers are left unchanged.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerDefinition">
                <summary>Optional content properties [PDF:1.7:4.10.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerDefinition.AlternateConfigurations">
                  <summary>Gets the layer configurations used under particular circumstances.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerDefinition.DefaultConfiguration">
                  <summary>Gets the default layer configuration, that is the initial state of the optional
                  content groups when a document is first opened.</summary>
        </member>
        <member name="P:org.pdfclown.documents.contents.layers.LayerDefinition.AllLayersObject">
                  <summary>Gets the collection of all the layer objects in the document.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerGroup">
                <summary>A generic collection of layers.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerMembership">
                <summary>Optional content membership [PDF:1.7:4.10.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.LayerMembership.VisibilityLayersImpl">
                  <summary>Layers whose states determine the visibility of content controlled by a membership.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.Layers">
                <summary>Optional content group collection.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.layers.Layers.Evaluate(org.pdfclown.documents.contents.layers.Layers.EvaluateNode)">
                  <summary>Gets the positional information resulting from the collection evaluation.</summary>
                  <param name="evaluator">Expression used to evaluate the positional matching.</param>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.SetLayerState">
                <summary>'Set the state of one or more optional content groups' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.SetLayerState.#ctor(org.pdfclown.documents.Document)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.SetLayerState.LayerStates.GetBaseIndex(System.Int32)">
                    <summary>Gets the position of the initial base item corresponding to the specified layer
                    state index.</summary>
                    <param name="index">Layer state index.</param>
                    <returns>-1, in case <code>index</code> is outside the available range.</returns>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.SetLayerState.LayerStates.GetBaseIndex(org.pdfclown.documents.interaction.actions.SetLayerState.LayerState)">
                    <summary>Gets the position of the initial base item corresponding to the specified layer
                    state.</summary>
                    <param name="item">Layer state.</param>
                    <returns>-1, in case <code>item</code> has no match.</returns>
        </member>
        <member name="T:org.pdfclown.documents.contents.layers.ListModeEnum">
                <summary>List mode specifying which layers should be displayed to the user.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.ListModeEnum.AllPages">
                  <summary>All the layers are displayed.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.layers.ListModeEnum.VisiblePages">
                  <summary>Only the layers referenced by one or more visible pages are displayed.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.JustificationEnum">
                <summary>Text justification [PDF:1.6:8.4.5,8.6.2].</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.JustificationEnum.Left">
                  <summary>Left.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.JustificationEnum.Center">
                  <summary>Center.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.JustificationEnum.Right">
                  <summary>Right.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.JustificationEnumExtension.Get(org.pdfclown.objects.PdfInteger)">
                  <summary>Gets the justification corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.JustificationEnumExtension.GetCode(org.pdfclown.documents.interaction.JustificationEnum)">
                  <summary>Gets the code corresponding to the given value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CffParser">
                <summary>CFF file format parser [CFF:1.0].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.CffParser.StandardCharsets">
                  <summary>Standard charset maps.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.fonts.CffParser.StandardStrings">
                  <summary>Standard Strings [CFF:1.0:10] represent commonly occurring strings allocated to
                  predefined SIDs.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CffParser.GetStandardCharset(System.Nullable{System.Int32})">
                  <summary>Gets the charset corresponding to the given value.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CffParser.Load">
                  <summary>Loads the font data.</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.fonts.CffParser.GetString(System.Int32)">
                  <summary>Gets the string corresponding to the specified identifier.</summary>
                  <param name="id">SID (String ID).</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CffParser.Dict">
                  <summary>Dictionary [CFF:1.0:4].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CffParser.Index">
                  <summary>Array of variable-sized objects [CFF:1.0:5].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.fonts.CffParser.StandardCharsetEnum">
                  <summary>Predefined charsets [CFF:1.0:12,C].</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.XAlignmentEnum">
                <summary>Horizontal alignment.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.YAlignmentEnum">
                <summary>Vertical alignment.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.composition.LineAlignmentEnum">
                <summary>Line alignment.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.Top">
                  <summary>The top of the element is aligned with the top of the tallest element on the line.
                  </summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.BaseLine">
                  <summary>Aligns the baseline of the element with the baseline of the parent element. This is
                  default.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.Middle">
                  <summary>The element is placed in the middle of the parent element.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.Bottom">
                  <summary>The bottom of the element is aligned with the lowest element on the line.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.Super">
                  <summary>Aligns the element as it was superscript.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.composition.LineAlignmentEnum.Sub">
                  <summary>Aligns the element as it was subscript.</summary>
        </member>
        <member name="T:org.pdfclown.util.math.geom.GeomUtils">
                <summary>Geometric utilities.</summary>
        </member>
        <member name="M:org.pdfclown.util.math.geom.GeomUtils.Scale(System.Drawing.SizeF,System.Single)">
                  <summary>Gets the size scaled to the specified limit.</summary>
                  <remarks>In particular, the limit matches the largest dimension and proportionally scales the
                  other one; for example, a limit 300 applied to size Dimension2D(100, 200) returns
                  Dimension2D(150, 300).</remarks>
                  <param name="size">Size to scale.</param>
                  <param name="limit">Scale limit.</param>
                  <returns>Scaled size.</returns>
        </member>
        <member name="M:org.pdfclown.util.math.geom.GeomUtils.Scale(System.Drawing.SizeF,System.Drawing.SizeF)">
                  <summary>Gets the size scaled to the specified limit.</summary>
                  <remarks>In particular, implicit (zero-valued) limit dimensions correspond to proportional
                  dimensions; for example, a limit Dimension2D(0, 300) means 300 high and proportionally wide.
                  </remarks>
                  <param name="size">Size to scale.</param>
                  <param name="limit">Scale limit.</param>
                  <returns>Scaled size.</returns>
        </member>
        <member name="T:org.pdfclown.documents.files.EmbeddedFile">
                <summary>Embedded file [PDF:1.6:3.10.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.EmbeddedFile.Get(org.pdfclown.documents.Document,System.String)">
                  <summary>Creates a new embedded file inside the document.</summary>
                  <param name="context">Document context.</param>
                  <param name="path">Path of the file to embed.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.EmbeddedFile.Get(org.pdfclown.documents.Document,org.pdfclown.bytes.IInputStream)">
                  <summary>Creates a new embedded file inside the document.</summary>
                  <param name="context">Document context.</param>
                  <param name="stream">File stream to embed.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.EmbeddedFile.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates an existing embedded file.</summary>
                  <param name="baseObject">Base object.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.EmbeddedFile.GetInfo(org.pdfclown.objects.PdfName)">
                  <summary>Gets the file parameter associated to the specified key.</summary>
                  <param name="key">Parameter key.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.EmbeddedFile.SetInfo(org.pdfclown.objects.PdfName,org.pdfclown.objects.PdfDirectObject)">
                  <see cref="M:org.pdfclown.documents.files.EmbeddedFile.GetInfo(org.pdfclown.objects.PdfName)"/>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.CreationDate">
                  <summary>Gets/Sets the creation date of this file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.Data">
                  <summary>Gets the data contained within this file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.MimeType">
                  <summary>Gets/Sets the MIME media type name of this file [RFC 2046].</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.ModificationDate">
                  <summary>Gets/Sets the modification date of this file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.Size">
                  <summary>Gets/Sets the size of this file, in bytes.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.EmbeddedFile.Params">
                  <summary>Gets the file parameters.</summary>
        </member>
        <member name="T:org.pdfclown.documents.files.RelatedFiles">
                <summary>Embedded files referenced by another one (dependencies) [PDF:1.6:3.10.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.files.FullFileSpecification">
                <summary>Extended reference to the contents of another file [PDF:1.6:3.10.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.files.FileSpecification">
                <summary>Reference to the contents of another file (file specification) [PDF:1.6:3.10.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.Get(org.pdfclown.documents.Document,System.String)">
                  <summary>Creates a new reference to an external file.</summary>
                  <param name="context">Document context.</param>
                  <param name="path">File path.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.Get(org.pdfclown.documents.Document,System.String,System.Boolean)">
                  <summary>Creates a new reference to a file.</summary>
                  <param name="context">Document context.</param>
                  <param name="path">File path.</param>
                  <param name="full">Whether the reference is able to support extended dependencies.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.Get(org.pdfclown.documents.files.EmbeddedFile,System.String)">
                  <summary>Creates a new reference to an embedded file.</summary>
                  <param name="embeddedFile">Embedded file corresponding to the reference.</param>
                  <param name="filename">Name corresponding to the reference.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.Get(org.pdfclown.documents.Document,System.Uri)">
                  <summary>Creates a new reference to a remote file.</summary>
                  <param name="context">Document context.</param>
                  <param name="url">Remote file location.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates an existing file reference.</summary>
                  <param name="baseObject">Base object.</param>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.GetAbsolutePath">
                  <summary>Gets the file absolute path.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.GetInputStream">
                  <summary>Gets an input stream to read from the file.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FileSpecification.GetOutputStream">
                  <summary>Gets an output stream to write into the file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.FileSpecification.Path">
                  <summary>Gets the file path.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.GetDependencies(org.pdfclown.objects.PdfName)">
                  <summary>Gets the related files associated to the given key.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.GetEmbeddedFile(org.pdfclown.objects.PdfName)">
                  <summary>Gets the embedded file associated to the given key.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.GetPath(org.pdfclown.objects.PdfName)">
                  <summary>Gets the path associated to the given key.</summary>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.SetDependencies(org.pdfclown.objects.PdfName,org.pdfclown.documents.files.RelatedFiles)">
                  <see cref="M:org.pdfclown.documents.files.FullFileSpecification.GetDependencies(org.pdfclown.objects.PdfName)"/>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.SetEmbeddedFile(org.pdfclown.objects.PdfName,org.pdfclown.documents.files.EmbeddedFile)">
                  <see cref="M:org.pdfclown.documents.files.FullFileSpecification.GetEmbeddedFile(org.pdfclown.objects.PdfName)"/>
        </member>
        <member name="M:org.pdfclown.documents.files.FullFileSpecification.SetPath(org.pdfclown.objects.PdfName,System.String)">
                  <see cref="M:org.pdfclown.documents.files.FullFileSpecification.GetPath(org.pdfclown.objects.PdfName)"/>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.Dependencies">
                  <summary>Gets/Sets the related files.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.Description">
                  <summary>Gets/Sets the description of the file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.EmbeddedFile">
                  <summary>Gets/Sets the embedded file corresponding to this file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.FileSystem">
                  <summary>Gets/Sets the file system to be used to interpret this file specification.</summary>
                  <returns>Either <see cref="T:org.pdfclown.documents.files.FullFileSpecification.StandardFileSystemEnum"/> (standard file system) or
                  <see cref="T:System.String"/> (custom file system).</returns>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.ID">
                  <summary>Gets/Sets the identifier of the file.</summary>
        </member>
        <member name="P:org.pdfclown.documents.files.FullFileSpecification.Volatile">
                  <summary>Gets/Sets whether the referenced file is volatile (changes frequently with time).
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.files.FullFileSpecification.StandardFileSystemEnum">
                  <summary>Standard file system.</summary>
        </member>
        <member name="F:org.pdfclown.documents.files.FullFileSpecification.StandardFileSystemEnum.Native">
                    <summary>Generic platform file system.</summary>
        </member>
        <member name="F:org.pdfclown.documents.files.FullFileSpecification.StandardFileSystemEnum.URL">
                    <summary>Uniform resource locator.</summary>
        </member>
        <member name="T:org.pdfclown.documents.files.SimpleFileSpecification">
                <summary>Simple reference to the contents of another file [PDF:1.6:3.10.2].</summary>
        </member>
        <member name="T:org.pdfclown.files.FileIdentifier">
                <summary>File identifier [PDF:1.7:10.3].</summary>
        </member>
        <member name="M:org.pdfclown.files.FileIdentifier.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Gets an existing file identifier.</summary>
                  <param name="baseObject">Base object to wrap.</param>
        </member>
        <member name="M:org.pdfclown.files.FileIdentifier.#ctor">
                  <summary>Creates a new direct file identifier.</summary>
        </member>
        <member name="M:org.pdfclown.files.FileIdentifier.#ctor(org.pdfclown.files.File)">
                  <summary>Creates a new indirect file identifier.</summary>
        </member>
        <member name="M:org.pdfclown.files.FileIdentifier.#ctor(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Instantiates an existing file identifier.</summary>
                  <param nme="baseObject">Base object.</param>
        </member>
        <member name="M:org.pdfclown.files.FileIdentifier.Update(org.pdfclown.tokens.Writer)">
                  <summary>Computes a new version identifier based on the file's contents.</summary>
                  <remarks>This method is typically invoked internally during file serialization.</remarks>
                  <param name="writer">File serializer.</param>
        </member>
        <member name="P:org.pdfclown.files.FileIdentifier.BaseID">
                  <summary>Gets the permanent identifier based on the contents of the file at the time it was
                  originally created.</summary>
        </member>
        <member name="P:org.pdfclown.files.FileIdentifier.VersionID">
                  <summary>Gets the changing identifier based on the file's contents at the time it was last
                  updated.</summary>
        </member>
        <member name="T:org.pdfclown.objects.NumberTree`1">
                <summary>Number tree [PDF:1.7:3.8.6].</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.PageLabel">
                <summary>Page label range [PDF:1.7:8.3.1].</summary>
                <remarks>It represents a series of consecutive pages' visual identifiers using the same
                numbering system.</remarks>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.PageLabel.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Gets an existing page label range.</summary>
                  <param name="baseObject">Base object to wrap.</param>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberBase">
                  <summary>Gets/Sets the value of the numeric suffix for the first page label in this range.
                  Subsequent pages are numbered sequentially from this value.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyle">
                  <summary>Gets/Sets the numbering style to be used for the numeric suffix of each page label in
                  this range.</summary>
                  <remarks>If no style is defined, the numeric suffix isn't displayed at all.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.PageLabel.Prefix">
                  <summary>Gets/Sets the label prefix for page labels in this range.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyleEnum.ArabicNumber">
                    <summary>Decimal arabic numerals.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyleEnum.UCaseRomanNumber">
                    <summary>Upper-case roman numerals.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyleEnum.LCaseRomanNumber">
                    <summary>Lower-case roman numerals.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyleEnum.UCaseLetter">
                    <summary>Upper-case letters (A to Z for the first 26 pages, AA to ZZ for the next 26, and so
                    on).</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.PageLabel.NumberStyleEnum.LCaseLetter">
                    <summary>Lower-case letters (a to z for the first 26 pages, aa to zz for the next 26, and so
                    on).</summary>
        </member>
        <member name="T:org.pdfclown.documents.PageLabels">
                <summary>Page label ranges [PDF:1.6:3.6.1].</summary>
        </member>
        <member name="T:org.pdfclown.tokens.LatinEncoding">
                <summary>Adobe standard Latin character set [PDF:1.7:D].</summary>
        </member>
        <member name="T:org.pdfclown.tokens.Encoding">
                <summary>Abstract encoding.</summary>
        </member>
        <member name="F:org.pdfclown.tokens.LatinEncoding.chars">
                  <summary>Code-to-Unicode map.</summary>
        </member>
        <member name="T:org.pdfclown.tokens.PdfDocEncoding">
                <summary>Encoding for text strings in a PDF document outside the document's content streams
                [PDF:1.7:D].</summary>
        </member>
        <member name="T:org.pdfclown.tokens.PdfEncoding">
                <summary>PDF serialization encoding [PDF:1.6:3.1].</summary>
                <remarks>PDF can be entirely represented using byte values corresponding to the visible
                printable subset of the ASCII character set, plus white space characters such as space, tab,
                carriage return, and line feed characters. However, a PDF file is not restricted to the ASCII
                character set; it can contain arbitrary 8-bit bytes.</remarks>
        </member>
        <member name="T:org.pdfclown.util.EnumUtils">
                <summary>Enumeration utility.</summary>
        </member>
        <member name="T:org.pdfclown.documents.contents.objects.ApplyExtGState">
                <summary>'Set the specified graphics state parameters' operation [PDF:1.6:4.3.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.contents.objects.ApplyExtGState.GetExtGState(org.pdfclown.documents.contents.IContentContext)">
                  <summary>Gets the <see cref="T:org.pdfclown.documents.contents.ExtGState">graphics state parameters</see> resource to be set.
                  </summary>
                  <param name="context">Content context.</param>
        </member>
        <member name="T:org.pdfclown.documents.contents.BlendModeEnum">
                <summary>Blend mode to be used in the transparent imaging model [PDF:1.7:7.2.4].</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Normal">
                  <summary>Select the source color, ignoring the backdrop.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Multiply">
                  <summary>Multiply the backdrop and source color values.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Screen">
                  <summary>Multiply the complements of the backdrop and source color values, then complement the
                  result.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Overlay">
                  <summary>Multiply or screen the colors, depending on the backdrop color value.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Darken">
                  <summary>Select the darker of the backdrop and source colors.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Lighten">
                  <summary>Select the lighter of the backdrop and source colors.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.ColorDodge">
                  <summary>Brighten the backdrop color to reflect the source color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.ColorBurn">
                  <summary>Darken the backdrop color to reflect the source color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.HardLight">
                  <summary>Multiply or screen the colors, depending on the source color value.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.SoftLight">
                  <summary>Darken or lighten the colors, depending on the source color value.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Difference">
                  <summary>Subtract the darker of the two constituent colors from the lighter color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Exclusion">
                  <summary>Produce an effect similar to that of the Difference mode but lower in contrast.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Hue">
                  <summary>Create a color with the hue of the source color and the saturation and luminosity of
                  the backdrop color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Saturation">
                  <summary>Create a color with the saturation of the source color and the hue and luminosity of
                  the backdrop color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Color">
                  <summary>Create a color with the hue and saturation of the source color and the luminosity of
                  the backdrop color.</summary>
        </member>
        <member name="F:org.pdfclown.documents.contents.BlendModeEnum.Luminosity">
                  <summary>Create a color with the luminosity of the source color and the hue and saturation of
                  the backdrop color.</summary>
        </member>
        <member name="T:org.pdfclown.objects.IVisitor">
                <summary>Visitor interface.</summary>
                <remarks>Implementations are expected to be functional (traversal results are propagated through
                return values rather than side effects) and external (responsibility for traversing the
                hierarchical structure is assigned to the 'visit' methods rather than the 'accept' counterparts).
                </remarks>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.tokens.ObjectStream,System.Object)">
                  <summary>Visits an object stream.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfArray,System.Object)">
                  <summary>Visits an object array.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfBoolean,System.Object)">
                  <summary>Visits a boolean object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfDataObject,System.Object)">
                  <summary>Visits a data object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfDate,System.Object)">
                  <summary>Visits a date object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfDictionary,System.Object)">
                  <summary>Visits an object dictionary.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfIndirectObject,System.Object)">
                  <summary>Visits an indirect object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfInteger,System.Object)">
                  <summary>Visits an integer-number object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfName,System.Object)">
                  <summary>Visits a name object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfReal,System.Object)">
                  <summary>Visits a real-number object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfReference,System.Object)">
                  <summary>Visits a reference object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfStream,System.Object)">
                  <summary>Visits a stream object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfString,System.Object)">
                  <summary>Visits a string object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.objects.PdfTextString,System.Object)">
                  <summary>Visits a text string object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="M:org.pdfclown.objects.IVisitor.Visit(org.pdfclown.tokens.XRefStream,System.Object)">
                  <summary>Visits a cross-reference stream object.</summary>
                  <param name="object">Visited object.</param>
                  <param name="data">Supplemental data.</param>
                  <returns>Result object.</returns>
        </member>
        <member name="T:org.pdfclown.documents.NamedRenditions">
                <summary>Named renditions [PDF:1.6:3.6.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.NamedRenditions.UpdateName(org.pdfclown.documents.multimedia.Rendition,org.pdfclown.objects.PdfString)">
                  <summary>Ensures name reference synchronization for the specified rendition [PDF:1.7:9.1.2].
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.actions.Render">
                <summary>'Control the playing of multimedia content' action [PDF:1.6:8.5.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.actions.Render.#ctor(org.pdfclown.documents.interaction.annotations.Screen,org.pdfclown.documents.interaction.actions.Render.OperationEnum,org.pdfclown.documents.multimedia.Rendition)">
                  <summary>Creates a new action within the given document context.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Render.Operation">
                  <summary>Gets/Sets the operation to perform when the action is triggered.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Render.Rendition">
                  <summary>Gets/Sets the rendition object to render.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Render.Screen">
                  <summary>Gets/Sets the screen where to render the rendition object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.actions.Render.Script">
                  <summary>Gets/Sets the JavaScript script to be executed when the action is triggered.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Render.OperationEnum.Play">
                    <summary>Play the rendition on the screen, stopping any previous one.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Render.OperationEnum.Stop">
                    <summary>Stop any rendition being played on the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Render.OperationEnum.Pause">
                    <summary>Pause any rendition being played on the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Render.OperationEnum.Resume">
                    <summary>Resume any rendition being played on the screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.actions.Render.OperationEnum.PlayResume">
                    <summary>Play the rendition on the screen, resuming any previous one.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.annotations.Screen">
                <summary>Screen annotation [PDF:1.6:8.4.5].</summary>
                <remarks>It specifies a region of a page upon which media clips may be played.</remarks>
        </member>
        <member name="F:org.pdfclown.documents.interaction.annotations.Screen.RenderScript">
                  <summary>Script for preview and rendering control.</summary>
                  <remarks>NOTE: PlayerPlaceholder MUST be replaced with the actual player instance symbol.
                  </remarks>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaClip">
                <summary>Media clip object [PDF:1.7:9.1.3].</summary>
        </member>
        <member name="M:org.pdfclown.documents.multimedia.MediaClip.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a clip base object into a clip object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClip.Data">
                  <summary>Gets/Sets the actual media data.</summary>
                  <returns>Either a <see cref="!:FullFileSpecification"/> or a <see cref="!:FormXObject"/>.</returns>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaClipData">
                <summary>Media clip data [PDF:1.7:9.1.3].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.MimeType">
                  <summary>Gets/Sets the MIME type of data [RFC 2045].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.Players">
                  <summary>Gets/Sets the player rules for playing this media.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.Preferences">
                  <summary>Gets/Sets the preferred options the renderer should attempt to honor without affecting its
                  viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.Requirements">
                  <summary>Gets/Sets the minimum requirements the renderer must honor in order to be considered viable.
                  </summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermission">
                  <summary>Gets/Sets the circumstance under which it is acceptable to write a temporary file in order
                  to play this media clip.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermissionEnum">
                  <summary>Circumstance under which it is acceptable to write a temporary file in order to play
                  a media clip.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermissionEnum.Never">
                    <summary>Never allowed.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermissionEnum.ContentExtraction">
                    <summary>Allowed only if the document permissions allow content extraction.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermissionEnum.Accessibility">
                    <summary>Allowed only if the document permissions allow content extraction, including for
                    accessibility purposes.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaClipData.TempFilePermissionEnum.Always">
                    <summary>Always allowed.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaClipData.Viability">
                  <summary>Media clip data viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaClipData.Viability.BaseURL">
                    <summary>Gets the absolute URL to be used as the base URL in resolving any relative URLs
                    found within the media data.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaClipSection">
                <summary>Media clip section [PDF:1.7:9.1.3].</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaOffset">
                <summary>Media offset [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaOffset.Value">
                  <summary>Gets/Sets the offset value.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaOffset.Frame">
                  <summary>Media offset frame [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaOffset.Frame.Value">
                    <summary>Gets/Sets the (zero-based) frame within a media object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaOffset.Marker">
                  <summary>Media offset marker [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaOffset.Marker.Value">
                    <summary>Gets a named offset within a media object.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaOffset.Time">
                  <summary>Media offset time [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaOffset.Time.Value">
                    <summary>Gets/Sets the temporal offset (in seconds).</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaPlayer">
                <summary>Media player info [PDF:1.7:9.1.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayer.Identifier">
                  <summary>Gets/Sets the player identifier.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaPlayers">
                <summary>Media player rules [PDF:1.7:9.1.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayers.AllowedPlayers">
                  <summary>Gets/Sets a set of players, any of which may be used in playing the associated media object.
                  </summary>
                  <remarks>This collection is ignored if <see cref="P:org.pdfclown.documents.multimedia.MediaPlayers.RequiredPlayers"/> is non-empty.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayers.ForbiddenPlayers">
                  <summary>Gets/Sets a set of players that must NOT be used in playing the associated media object.
                  </summary>
                  <remarks>This collection takes priority over <see cref="P:org.pdfclown.documents.multimedia.MediaPlayers.RequiredPlayers"/>.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayers.RequiredPlayers">
                  <summary>Gets/Sets a set of players, one of which must be used in playing the associated media object.
                  </summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaPlayParameters">
                <summary>Media play parameters [PDF:1.7:9.1.4].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Players">
                  <summary>Gets/Sets the player rules for playing this media.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Preferences">
                  <summary>Gets/Sets the preferred options the renderer should attempt to honor without affecting
                  its viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Requirements">
                  <summary>Gets/Sets the minimum requirements the renderer must honor in order to be considered
                  viable.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability">
                  <summary>Media player parameters viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.Autoplay">
                    <summary>Gets/Sets whether the media should automatically play when activated.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.Duration">
                    <summary>Gets/Sets the temporal duration, corresponding to the notion of simple duration in
                    SMIL.</summary>
                    <returns>
                      <list type="bullet">
                        <item><code>Double.NEGATIVE_INFINITY</code>: intrinsic duration of the associated media;
                        </item>
                        <item><code>Double.POSITIVE_INFINITY</code>: infinite duration;</item>
                        <item>non-infinite positive: explicit duration.</item>
                      </list>
                    </returns>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitMode">
                    <summary>Gets/Sets the manner in which the player should treat a visual media type that does
                    not exactly fit the rectangle in which it plays.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.PlayerSpecificControl">
                    <summary>Gets/Sets whether to display a player-specific controller user interface (for
                    example, play/pause/stop controls) when playing.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.RepeatCount">
                    <summary>Gets/Sets the number of iterations of the duration to repeat; similar to SMIL's
                    <code>repeatCount</code> attribute.</summary>
                    <returns>
                      <list type="bullet">
                        <item><code>0</code>: repeat forever;</item>
                      </list>
                    </returns>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.Volume">
                    <summary>Gets/Sets the volume level as a percentage of recorded volume level. A zero value
                    is equivalent to mute.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.DurationObject.Value">
                      <summary>Gets/Sets the temporal duration.</summary>
                      <returns>
                        <list type="bullet">
                          <item><code>Double.NEGATIVE_INFINITY</code>: intrinsic duration of the associated media;
                          </item>
                          <item><code>Double.POSITIVE_INFINITY</code>: infinite duration;</item>
                          <item>non-infinite positive: explicit duration.</item>
                        </list>
                      </returns>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Meet">
                      <summary>The media's width and height are scaled while preserving the aspect ratio so that
                      the media and play rectangles have the greatest possible intersection while still
                      displaying all media content. Same as <code>meet</code> value of SMIL's fit attribute.
                      </summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Slice">
                      <summary>The media's width and height are scaled while preserving the aspect ratio so that
                      the play rectangle is entirely filled, and the amount of media content that does not fit
                      within the play rectangle is minimized. Same as <code>slice</code> value of SMIL's fit
                      attribute.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Fill">
                      <summary>The media's width and height are scaled independently so that the media and play
                      rectangles are the same; the aspect ratio is not necessarily preserved. Same as
                      <code>fill</code> value of SMIL's fit attribute.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Scroll">
                      <summary>The media is not scaled. A scrolling user interface is provided if the media
                      rectangle is wider or taller than the play rectangle. Same as <code>scroll</code> value of
                      SMIL's fit attribute.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Hidden" -->
        <member name="F:org.pdfclown.documents.multimedia.MediaPlayParameters.Viability.FitModeEnum.Default">
                      <summary>Use the player's default setting (author has no preference).</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaRendition">
                <summary>Media rendition [PDF:1.7:9.1.2].</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.Rendition">
                <summary>Rendition [PDF:1.7:9.1.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.multimedia.Rendition.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a rendition base object into a rendition object.</summary>
                  <param name="baseObject">Rendition base object.</param>
                  <returns>Rendition object associated to the base object.</returns>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Preferences">
                  <summary>Gets/Sets the preferred options the renderer should attempt to honor without affecting
                  its viability [PDF:1.7:9.1.1].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Requirements">
                  <summary>Gets/Sets the minimum requirements the renderer must honor in order to be considered
                  viable [PDF:1.7:9.1.1].</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.Rendition.Viability">
                  <summary>Rendition viability [PDF:1.7:9.1.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.Bandwidth">
                    <summary>Gets the minimum system's bandwidth (in bits per second).</summary>
                    <remarks>Equivalent to SMIL's systemBitrate attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.ScreenDepth">
                    <summary>Gets the minimum screen color depth (in bits per pixel).</summary>
                    <remarks>Equivalent to SMIL's systemScreenDepth attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.ScreenSize">
                    <summary>Gets the minimum screen size (in pixels).</summary>
                    <remarks>Equivalent to SMIL's systemScreenSize attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.Renderers">
                    <summary>Gets the list of supported viewer applications.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.Version">
                    <summary>Gets the PDF version range supported by the viewer application.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.Languages">
                    <summary>Gets the list of supported languages.</summary>
                    <remarks>Equivalent to SMIL's systemLanguage attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.AudioDescriptionEnabled">
                    <summary>Gets whether to hear audio descriptions.</summary>
                    <remarks>Equivalent to SMIL's systemAudioDesc attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.AudioOverdubEnabled">
                    <summary>Gets whether to hear audio overdubs.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.SubtitleEnabled">
                    <summary>Gets whether to see subtitles.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Rendition.Viability.TextCaptionEnabled">
                    <summary>Gets whether to see text captions.</summary>
                    <remarks>Equivalent to SMIL's systemCaptions attribute.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaRendition.Clip">
                  <summary>Gets/Sets the content to be played.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaRendition.PlayParameters">
                  <summary>Gets/Sets the parameters that specify how this media rendition should be played.
                  </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:org.pdfclown.documents.multimedia.MediaRendition.ScreenParameters" -->
        <member name="T:org.pdfclown.documents.multimedia.MediaScreenParameters">
                <summary>Media screen parameters [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Preferences">
                  <summary>Gets/Sets the preferred options the renderer should attempt to honor without affecting
                  its viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Requirements">
                  <summary>Gets/Sets the minimum requirements the renderer must honor in order to be considered
                  viable.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability">
                  <summary>Media screen parameters viability.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.BackgroundColor">
                    <summary>Gets/Sets the background color for the rectangle in which the media is being played.
                    </summary>
                    <remarks>This color is used if the media object does not entirely cover the rectangle or if
                    it has transparent sections.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.BackgroundOpacity">
                    <summary>Gets/Sets the opacity of the background color.</summary>
                    <returns>A number in the range 0 to 1, where 0 means full transparency and 1 full opacity.
                    </returns>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParameters">
                    <summary>Gets/Sets the options used in displaying floating windows.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.MonitorSpecifier">
                    <summary>Gets/Sets which monitor in a multi-monitor system a floating or full-screen window
                    should appear on.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.WindowType">
                    <summary>Gets/Sets the type of window that the media object should play in.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.Location">
                      <summary>Gets/Sets the location where the floating window should be positioned relative to
                      the related window.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.OffscreenBehavior">
                      <summary>Gets/Sets what should occur if the floating window is positioned totally or
                      partially offscreen (that is, not visible on any physical monitor).</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.RelatedWindow">
                      <summary>Gets/Sets the window relative to which the floating window should be positioned.
                      </summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.ResizeBehavior">
                      <summary>Gets/Sets how the floating window may be resized by a user.</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.Size">
                      <summary>Gets/Sets the floating window's width and height, in pixels.</summary>
                      <remarks>These values correspond to the dimensions of the rectangle in which the media
                      will play, not including such items as title bar and resizing handles.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.Closeable">
                      <summary>Gets/Sets whether the floating window should include user interface elements that
                      allow a user to close it.</summary>
                      <remarks>Meaningful only if <see cref="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.TitleBarVisible"/> is true.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.TitleBarVisible">
                      <summary>Gets/Sets whether the floating window should have a title bar.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.UpperLeft">
                        <summary>Upper-left corner.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.UpperCenter">
                        <summary>Upper center.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.UpperRight">
                        <summary>Upper-right corner.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.CenterLeft">
                        <summary>Center left.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.Center">
                        <summary>Center.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.CenterRight">
                        <summary>Center right.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.LowerLeft">
                        <summary>Lower-left corner.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.LowerCenter">
                        <summary>Lower center.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.LocationEnum.LowerRight">
                        <summary>Lower-right corner.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.OffscreenBehaviorEnum.None">
                        <summary>Take no special action.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.OffscreenBehaviorEnum.Adapt">
                        <summary>Move and/or resize the window so that it is on-screen.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.OffscreenBehaviorEnum.NonViable">
                        <summary>Consider the object to be non-viable.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.RelatedWindowEnum.Document">
                        <summary>The document window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.RelatedWindowEnum.Application">
                        <summary>The application window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.RelatedWindowEnum.Desktop">
                        <summary>The full virtual desktop.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.RelatedWindowEnum.Custom">
                        <summary>The monitor specified by <see cref="P:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.MonitorSpecifier"/>.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.ResizeBehaviorEnum.None">
                        <summary>Not resizable.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.ResizeBehaviorEnum.AspectRatioLocked">
                        <summary>Resizable preserving its aspect ratio.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.FloatingWindowParametersObject.ResizeBehaviorEnum.Free">
                        <summary>Resizable without preserving its aspect ratio.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.WindowTypeEnum.Floating">
                      <summary>A floating window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.WindowTypeEnum.FullScreen">
                      <summary>A full-screen window that obscures all other windows.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.WindowTypeEnum.Hidden">
                      <summary>A hidden window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MediaScreenParameters.Viability.WindowTypeEnum.Annotation">
                      <summary>The rectangle occupied by the {@link Screen screen annotation} associated with
                      the media rendition.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.MonitorSpecifierEnum">
                <summary>Monitor specifier [PDF:1.7:9.1.6].</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.LargestDocumentWindowSection">
                  <summary>The monitor containing the largest section of the document window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.SmallestDocumentWindowSection">
                  <summary>The monitor containing the smallest section of the document window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.Primary">
                  <summary>Primary monitor, otherwise the monitor containing the largest section of the document
                  window.</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.GreatestColorDepth">
                  <summary>The monitor with the greatest color depth (in bits).</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.GreatestArea">
                  <summary>The monitor with the greatest area (in pixels squared).</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.GreatestHeight">
                  <summary>The monitor with the greatest height (in pixels).</summary>
        </member>
        <member name="F:org.pdfclown.documents.multimedia.MonitorSpecifierEnum.GreatestWidth">
                  <summary>The monitor with the greatest width (in pixels).</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.SelectorRendition">
                <summary>Selector rendition [PDF:1.7:9.1.2].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.SelectorRendition.Renditions">
                  <summary>Gets/Sets an ordered collection of renditions. The first viable media rendition found
                  in the array, or nested within a selector rendition in the array, should be used.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.SoftwareIdentifier">
                <summary>Software identifier [PDF:1.7:9.1.6].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.SoftwareIdentifier.OSes">
                  <summary>Gets the operating system identifiers that indicate which operating systems this
                  object applies to.</summary>
                  <remarks>The defined values are the same as those defined for SMIL 2.0's systemOperatingSystem
                  attribute. An empty list is considered to represent all operating systems.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.SoftwareIdentifier.URI">
                  <summary>Gets the URI that identifies a piece of software.</summary>
                  <remarks>It is interpreted according to its scheme; the only presently defined scheme is
                  vnd.adobe.swname. The scheme name is case-insensitive; if is not recognized by the viewer
                  application, the software must be considered a non-match. The syntax of URIs of this scheme is
                  "vnd.adobe.swname:" software_name where software_name is equivalent to reg_name as defined in
                  Internet RFC 2396, Uniform Resource Identifiers (URI): Generic Syntax.</remarks>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.SoftwareIdentifier.Version">
                  <summary>Gets the software version bounds.</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.SoftwareIdentifier.VersionObject">
                  <summary>Software version number [PDF:1.7:9.1.6].</summary>
        </member>
        <member name="T:org.pdfclown.documents.multimedia.Timespan">
                <summary>Timespan [PDF:1.7:9.1.5].</summary>
        </member>
        <member name="P:org.pdfclown.documents.multimedia.Timespan.Time">
                  <summary>Gets/Sets the temporal offset (in seconds).</summary>
        </member>
        <member name="T:org.pdfclown.objects.Visitor">
                <summary>Visitor object.</summary>
        </member>
        <member name="T:org.pdfclown.tools.Optimizer">
                <summary>Tool to enhance PDF files.</summary>
        </member>
        <member name="M:org.pdfclown.tools.Optimizer.RemoveOrphanedObjects(org.pdfclown.files.File)">
                  <summary>Removes indirect objects which have no reference in the document structure.</summary>
                  <param name="file">File to optimize.</param>
        </member>
        <member name="T:org.pdfclown.documents.interchange.access.LanguageIdentifier">
                <summary>Language identifier [PDF:1.7:10.8.1][RFC 3066].</summary>
                <remarks>
                  <para>Language identifiers can be based on codes defined by the International Organization for
                  Standardization in ISO 639 (language code) and ISO 3166 (country code) or registered with the
                  Internet Assigned Numbers Authority (<a href="http://iana.org">IANA</a>), or they can include
                  codes created for private use.</para>
                  <para>A language identifier consists of a primary code optionally followed by one or more
                  subcodes (each preceded by a hyphen).</para>
                </remarks>
        </member>
        <member name="M:org.pdfclown.documents.interchange.access.LanguageIdentifier.Wrap(org.pdfclown.objects.PdfDirectObject)">
                  <summary>Wraps a language identifier base object into a language identifier object.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interchange.access.LanguageIdentifier.Components">
                  <summary>Gets the identifier components:
                    <list type="number">
                      <item>the first one is the primary code. It can be any of the following:
                        <list type="bullet">
                          <item>a 2-character ISO 639 language code (e.g., <code>en</code> for English);</item>
                          <item>the letter <code>i</code>, designating an IANA-registered identifier;</item>
                          <item>the letter <code>x</code>, for private use;</item>
                        </list>
                      </item>
                      <item>the second one is the first subcode. It can be any of the following:
                        <list type="bullet">
                          <item>a 2-character ISO 3166 country code (e.g., <code>en-US</code>);</item>
                          <item>a 3-to-8-character subcode registered with IANA (e.g., <code>en-cockney</code>)</item>
                          <item>private non-registered subcodes;</item>
                        </list>
                      </item>
                      <item>subcodes beyond the first can be any that have been registered with IANA.</item>
                    </list>
                  </summary>
        </member>
        <member name="T:org.pdfclown.util.metadata.VersionUtils">
                <summary>Version utility.</summary>
        </member>
        <member name="T:org.pdfclown.objects.Cloner">
                <summary>Object cloner.</summary>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.AfterClone(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfObject,org.pdfclown.objects.PdfObject)">
                    <summary>Notifies a complete clone operation on an object.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="clone">Clone object.</param>
                    <param name="source">Source object.</param>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.AfterClone(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName,org.pdfclown.objects.PdfDirectObject)">
                    <summary>Notifies a complete clone operation on a dictionary entry.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="parent">Parent clone object.</param>
                    <param name="key">Entry key within the parent.</param>
                    <param name="value">Clone value.</param>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.AfterClone(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfArray,System.Int32,org.pdfclown.objects.PdfDirectObject)">
                    <summary>Notifies a complete clone operation on an array item.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="parent">Parent clone object.</param>
                    <param name="index">Item index within the parent.</param>
                    <param name="item">Clone item.</param>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.BeforeClone(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfName,org.pdfclown.objects.PdfDirectObject)">
                    <summary>Notifies a starting clone operation on a dictionary entry.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="parent">Parent clone object.</param>
                    <param name="key">Entry key within the parent.</param>
                    <param name="value">Source value.</param>
                    <returns>Whether the clone operation can be fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.BeforeClone(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfArray,System.Int32,org.pdfclown.objects.PdfDirectObject)">
                    <summary>Notifies a starting clone operation on an array item.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="parent">Parent clone object.</param>
                    <param name="index">Item index within the parent.</param>
                    <param name="item">Source item.</param>
                    <returns>Whether the clone operation can be fulfilled.</returns>
        </member>
        <member name="M:org.pdfclown.objects.Cloner.Filter.Matches(org.pdfclown.objects.Cloner,org.pdfclown.objects.PdfObject)">
                    <summary>Gets whether this filter can deal with the given object.</summary>
                    <param name="cloner">Object cloner.</param>
                    <param name="source">Source object.</param>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.Article">
                <summary>Article thread [PDF:1.7:8.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.Article.Delete">
                  <summary>Deletes this thread removing also its reference in the document's collection.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Article.Elements">
                  <summary>Gets the beads associated to this thread.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.Article.Information">
                  <summary>Gets/Sets common article metadata.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.ArticleElement">
                <summary>Article bead [PDF:1.7:8.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Delete">
                  <summary>Deletes this bead removing also its references on the page and its article thread.
                  </summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.ArticleElement.IsHead">
                  <summary>Gets whether this is the first bead in its thread.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Article">
                  <summary>Gets the thread article this bead belongs to.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Box">
                  <summary>Gets/Sets the location on the page in default user space units.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Next">
                  <summary>Gets the next bead.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Page">
                  <summary>Gets the location page.</summary>
        </member>
        <member name="P:org.pdfclown.documents.interaction.navigation.page.ArticleElement.Previous">
                  <summary>Gets the previous bead.</summary>
        </member>
        <member name="T:org.pdfclown.documents.interaction.navigation.page.ArticleElements">
                <summary>Article bead [PDF:1.7:8.3.2].</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.ArticleElements.Link(org.pdfclown.objects.PdfDictionary,org.pdfclown.objects.PdfDictionary)">
                  <summary>Links the given item.</summary>
        </member>
        <member name="M:org.pdfclown.documents.interaction.navigation.page.ArticleElements.Unlink(org.pdfclown.objects.PdfDictionary)">
                  <summary>Unlinks the given item.</summary>
                  <remarks>It assumes the item is contained in this list.</remarks>
        </member>
        <member name="T:org.pdfclown.util.IPredicate">
                <summary>Predicate interface.</summary>
        </member>
        <member name="F:org.pdfclown.documents.interaction.navigation.page.ArticleElements.ElementEvaluator.index">
                    Current position.
        </member>
        <member name="T:org.pdfclown.documents.PageArticleElements">
                <summary>Page article beads [PDF:1.7:3.6.2].</summary>
                <remarks>The beads are listed in natural reading order.</remarks>
        </member>
        <member name="T:org.pdfclown.documents.Articles">
                <summary>Article threads [PDF:1.7:3.6.1].</summary>
        </member>
    </members>
</doc>
